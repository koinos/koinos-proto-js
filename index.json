{
  "nested": {
    "koinos": {
      "options": {
        "go_package": "github.com/koinos/koinos-proto-golang/koinos"
      },
      "nested": {
        "block_topology": {
          "fields": {
            "id": {
              "type": "bytes",
              "id": 1,
              "options": {
                "(btype)": "BLOCK_ID"
              }
            },
            "height": {
              "type": "uint64",
              "id": 2,
              "options": {
                "jstype": "JS_STRING"
              }
            },
            "previous": {
              "type": "bytes",
              "id": 3,
              "options": {
                "(btype)": "BLOCK_ID"
              }
            }
          }
        },
        "protocol": {
          "options": {
            "go_package": "github.com/koinos/koinos-proto-golang/koinos/protocol"
          },
          "nested": {
            "object_space": {
              "fields": {
                "system": {
                  "type": "bool",
                  "id": 1
                },
                "zone": {
                  "type": "bytes",
                  "id": 2
                },
                "id": {
                  "type": "uint32",
                  "id": 3
                }
              }
            },
            "event_data": {
              "fields": {
                "sequence": {
                  "type": "uint32",
                  "id": 1
                },
                "source": {
                  "type": "bytes",
                  "id": 2,
                  "options": {
                    "(btype)": "CONTRACT_ID"
                  }
                },
                "name": {
                  "type": "string",
                  "id": 3
                },
                "data": {
                  "type": "bytes",
                  "id": 4
                },
                "impacted": {
                  "rule": "repeated",
                  "type": "bytes",
                  "id": 5,
                  "options": {
                    "(btype)": "ADDRESS"
                  }
                }
              }
            },
            "contract_call_bundle": {
              "fields": {
                "contract_id": {
                  "type": "bytes",
                  "id": 1,
                  "options": {
                    "(btype)": "CONTRACT_ID"
                  }
                },
                "entry_point": {
                  "type": "uint32",
                  "id": 2
                }
              }
            },
            "system_call_target": {
              "oneofs": {
                "target": {
                  "oneof": [
                    "thunk_id",
                    "system_call_bundle"
                  ]
                }
              },
              "fields": {
                "thunk_id": {
                  "type": "uint32",
                  "id": 1
                },
                "system_call_bundle": {
                  "type": "contract_call_bundle",
                  "id": 2
                }
              }
            },
            "upload_contract_operation": {
              "fields": {
                "contract_id": {
                  "type": "bytes",
                  "id": 1,
                  "options": {
                    "(btype)": "CONTRACT_ID"
                  }
                },
                "bytecode": {
                  "type": "bytes",
                  "id": 2
                },
                "abi": {
                  "type": "string",
                  "id": 3
                },
                "authorizes_call_contract": {
                  "type": "bool",
                  "id": 4
                },
                "authorizes_transaction_application": {
                  "type": "bool",
                  "id": 5
                },
                "authorizes_upload_contract": {
                  "type": "bool",
                  "id": 6
                }
              }
            },
            "call_contract_operation": {
              "fields": {
                "contract_id": {
                  "type": "bytes",
                  "id": 1,
                  "options": {
                    "(btype)": "CONTRACT_ID"
                  }
                },
                "entry_point": {
                  "type": "uint32",
                  "id": 2
                },
                "args": {
                  "type": "bytes",
                  "id": 3
                }
              }
            },
            "set_system_call_operation": {
              "fields": {
                "call_id": {
                  "type": "uint32",
                  "id": 1
                },
                "target": {
                  "type": "system_call_target",
                  "id": 2
                }
              }
            },
            "set_system_contract_operation": {
              "fields": {
                "contract_id": {
                  "type": "bytes",
                  "id": 1,
                  "options": {
                    "(btype)": "CONTRACT_ID"
                  }
                },
                "system_contract": {
                  "type": "bool",
                  "id": 2
                }
              }
            },
            "operation": {
              "oneofs": {
                "op": {
                  "oneof": [
                    "upload_contract",
                    "call_contract",
                    "set_system_call",
                    "set_system_contract"
                  ]
                }
              },
              "fields": {
                "upload_contract": {
                  "type": "upload_contract_operation",
                  "id": 1
                },
                "call_contract": {
                  "type": "call_contract_operation",
                  "id": 2
                },
                "set_system_call": {
                  "type": "set_system_call_operation",
                  "id": 3
                },
                "set_system_contract": {
                  "type": "set_system_contract_operation",
                  "id": 4
                }
              }
            },
            "transaction_header": {
              "fields": {
                "chain_id": {
                  "type": "bytes",
                  "id": 1
                },
                "rc_limit": {
                  "type": "uint64",
                  "id": 2,
                  "options": {
                    "jstype": "JS_STRING"
                  }
                },
                "nonce": {
                  "type": "bytes",
                  "id": 3
                },
                "operation_merkle_root": {
                  "type": "bytes",
                  "id": 4
                },
                "payer": {
                  "type": "bytes",
                  "id": 5,
                  "options": {
                    "(btype)": "ADDRESS"
                  }
                },
                "payee": {
                  "type": "bytes",
                  "id": 6,
                  "options": {
                    "(btype)": "ADDRESS"
                  }
                }
              }
            },
            "transaction": {
              "fields": {
                "id": {
                  "type": "bytes",
                  "id": 1,
                  "options": {
                    "(btype)": "TRANSACTION_ID"
                  }
                },
                "header": {
                  "type": "transaction_header",
                  "id": 2
                },
                "operations": {
                  "rule": "repeated",
                  "type": "operation",
                  "id": 3
                },
                "signatures": {
                  "rule": "repeated",
                  "type": "bytes",
                  "id": 4
                }
              }
            },
            "transaction_receipt": {
              "fields": {
                "id": {
                  "type": "bytes",
                  "id": 1,
                  "options": {
                    "(btype)": "TRANSACTION_ID"
                  }
                },
                "payer": {
                  "type": "bytes",
                  "id": 2,
                  "options": {
                    "(btype)": "ADDRESS"
                  }
                },
                "max_payer_rc": {
                  "type": "uint64",
                  "id": 3,
                  "options": {
                    "jstype": "JS_STRING"
                  }
                },
                "rc_limit": {
                  "type": "uint64",
                  "id": 4,
                  "options": {
                    "jstype": "JS_STRING"
                  }
                },
                "rc_used": {
                  "type": "uint64",
                  "id": 5,
                  "options": {
                    "jstype": "JS_STRING"
                  }
                },
                "disk_storage_used": {
                  "type": "uint64",
                  "id": 6,
                  "options": {
                    "jstype": "JS_STRING"
                  }
                },
                "network_bandwidth_used": {
                  "type": "uint64",
                  "id": 7,
                  "options": {
                    "jstype": "JS_STRING"
                  }
                },
                "compute_bandwidth_used": {
                  "type": "uint64",
                  "id": 8,
                  "options": {
                    "jstype": "JS_STRING"
                  }
                },
                "reverted": {
                  "type": "bool",
                  "id": 9
                },
                "events": {
                  "rule": "repeated",
                  "type": "event_data",
                  "id": 10
                },
                "logs": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 11
                },
                "state_delta_entries": {
                  "rule": "repeated",
                  "type": "state_delta_entry",
                  "id": 12
                }
              }
            },
            "block_header": {
              "fields": {
                "previous": {
                  "type": "bytes",
                  "id": 1,
                  "options": {
                    "(btype)": "BLOCK_ID"
                  }
                },
                "height": {
                  "type": "uint64",
                  "id": 2,
                  "options": {
                    "jstype": "JS_STRING"
                  }
                },
                "timestamp": {
                  "type": "uint64",
                  "id": 3,
                  "options": {
                    "jstype": "JS_STRING"
                  }
                },
                "previous_state_merkle_root": {
                  "type": "bytes",
                  "id": 4
                },
                "transaction_merkle_root": {
                  "type": "bytes",
                  "id": 5
                },
                "signer": {
                  "type": "bytes",
                  "id": 6,
                  "options": {
                    "(btype)": "ADDRESS"
                  }
                },
                "approved_proposals": {
                  "rule": "repeated",
                  "type": "bytes",
                  "id": 7,
                  "options": {
                    "(btype)": "TRANSACTION_ID"
                  }
                }
              }
            },
            "block": {
              "fields": {
                "id": {
                  "type": "bytes",
                  "id": 1,
                  "options": {
                    "(btype)": "BLOCK_ID"
                  }
                },
                "header": {
                  "type": "block_header",
                  "id": 2
                },
                "transactions": {
                  "rule": "repeated",
                  "type": "transaction",
                  "id": 3
                },
                "signature": {
                  "type": "bytes",
                  "id": 4
                }
              }
            },
            "block_receipt": {
              "fields": {
                "id": {
                  "type": "bytes",
                  "id": 1,
                  "options": {
                    "(btype)": "BLOCK_ID"
                  }
                },
                "height": {
                  "type": "uint64",
                  "id": 2,
                  "options": {
                    "jstype": "JS_STRING"
                  }
                },
                "disk_storage_used": {
                  "type": "uint64",
                  "id": 3,
                  "options": {
                    "jstype": "JS_STRING"
                  }
                },
                "network_bandwidth_used": {
                  "type": "uint64",
                  "id": 4,
                  "options": {
                    "jstype": "JS_STRING"
                  }
                },
                "compute_bandwidth_used": {
                  "type": "uint64",
                  "id": 5,
                  "options": {
                    "jstype": "JS_STRING"
                  }
                },
                "state_merkle_root": {
                  "type": "bytes",
                  "id": 6
                },
                "events": {
                  "rule": "repeated",
                  "type": "event_data",
                  "id": 7
                },
                "transaction_receipts": {
                  "rule": "repeated",
                  "type": "transaction_receipt",
                  "id": 8
                },
                "logs": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 9
                },
                "disk_storage_charged": {
                  "type": "uint64",
                  "id": 10,
                  "options": {
                    "jstype": "JS_STRING"
                  }
                },
                "network_bandwidth_charged": {
                  "type": "uint64",
                  "id": 11,
                  "options": {
                    "jstype": "JS_STRING"
                  }
                },
                "compute_bandwidth_charged": {
                  "type": "uint64",
                  "id": 12,
                  "options": {
                    "jstype": "JS_STRING"
                  }
                },
                "state_delta_entries": {
                  "rule": "repeated",
                  "type": "state_delta_entry",
                  "id": 13
                }
              }
            },
            "state_delta_entry": {
              "oneofs": {
                "_value": {
                  "oneof": [
                    "value"
                  ]
                }
              },
              "fields": {
                "object_space": {
                  "type": "object_space",
                  "id": 1
                },
                "key": {
                  "type": "bytes",
                  "id": 2
                },
                "value": {
                  "type": "bytes",
                  "id": 3,
                  "options": {
                    "proto3_optional": true
                  }
                }
              }
            }
          }
        },
        "broadcast": {
          "options": {
            "go_package": "github.com/koinos/koinos-proto-golang/koinos/broadcast"
          },
          "nested": {
            "transaction_accepted": {
              "fields": {
                "transaction": {
                  "type": "protocol.transaction",
                  "id": 1
                },
                "receipt": {
                  "type": "protocol.transaction_receipt",
                  "id": 2
                },
                "height": {
                  "type": "uint64",
                  "id": 3,
                  "options": {
                    "jstype": "JS_STRING"
                  }
                }
              }
            },
            "transaction_failed": {
              "fields": {
                "id": {
                  "type": "bytes",
                  "id": 1,
                  "options": {
                    "(btype)": "TRANSACTION_ID"
                  }
                }
              }
            },
            "mempool_accepted": {
              "fields": {
                "transaction": {
                  "type": "protocol.transaction",
                  "id": 1
                },
                "receipt": {
                  "type": "protocol.transaction_receipt",
                  "id": 2
                },
                "height": {
                  "type": "uint64",
                  "id": 3,
                  "options": {
                    "jstype": "JS_STRING"
                  }
                },
                "pending_rc_used": {
                  "type": "uint64",
                  "id": 4,
                  "options": {
                    "jstype": "JS_STRING"
                  }
                }
              }
            },
            "block_accepted": {
              "fields": {
                "block": {
                  "type": "protocol.block",
                  "id": 1
                },
                "receipt": {
                  "type": "protocol.block_receipt",
                  "id": 2
                },
                "live": {
                  "type": "bool",
                  "id": 3
                },
                "head": {
                  "type": "bool",
                  "id": 4
                }
              }
            },
            "block_irreversible": {
              "fields": {
                "topology": {
                  "type": "block_topology",
                  "id": 1
                }
              }
            },
            "fork_heads": {
              "fields": {
                "last_irreversible_block": {
                  "type": "block_topology",
                  "id": 1
                },
                "heads": {
                  "rule": "repeated",
                  "type": "block_topology",
                  "id": 2
                }
              }
            },
            "gossip_status": {
              "fields": {
                "enabled": {
                  "type": "bool",
                  "id": 1
                }
              }
            },
            "event_parcel": {
              "oneofs": {
                "_transaction_id": {
                  "oneof": [
                    "transaction_id"
                  ]
                }
              },
              "fields": {
                "block_id": {
                  "type": "bytes",
                  "id": 1,
                  "options": {
                    "(btype)": "BLOCK_ID"
                  }
                },
                "height": {
                  "type": "uint64",
                  "id": 2
                },
                "transaction_id": {
                  "type": "bytes",
                  "id": 3,
                  "options": {
                    "(btype)": "TRANSACTION_ID",
                    "proto3_optional": true
                  }
                },
                "event": {
                  "type": "protocol.event_data",
                  "id": 4
                }
              }
            }
          }
        },
        "chain": {
          "options": {
            "go_package": "github.com/koinos/koinos-proto-golang/koinos/chain"
          },
          "nested": {
            "system_call_id": {
              "values": {
                "nop": 0,
                "get_head_info": 1,
                "apply_block": 2,
                "apply_transaction": 3,
                "apply_upload_contract_operation": 4,
                "apply_call_contract_operation": 5,
                "apply_set_system_call_operation": 6,
                "apply_set_system_contract_operation": 7,
                "pre_block_callback": 8,
                "post_block_callback": 9,
                "pre_transaction_callback": 10,
                "post_transaction_callback": 11,
                "get_chain_id": 12,
                "process_block_signature": 101,
                "get_transaction": 102,
                "get_transaction_field": 103,
                "get_block": 104,
                "get_block_field": 105,
                "get_last_irreversible_block": 106,
                "get_account_nonce": 107,
                "verify_account_nonce": 108,
                "set_account_nonce": 109,
                "check_system_authority": 110,
                "get_operation": 111,
                "get_contract_metadata": 112,
                "get_account_rc": 201,
                "consume_account_rc": 202,
                "get_resource_limits": 203,
                "consume_block_resources": 204,
                "put_object": 301,
                "remove_object": 302,
                "get_object": 303,
                "get_next_object": 304,
                "get_prev_object": 305,
                "log": 401,
                "event": 402,
                "hash": 501,
                "recover_public_key": 502,
                "verify_merkle_root": 503,
                "verify_signature": 504,
                "verify_vrf_proof": 505,
                "call": 601,
                "exit": 602,
                "get_arguments": 603,
                "get_contract_id": 604,
                "get_caller": 605,
                "check_authority": 606,
                "get_contract_name": 10000,
                "get_contract_address": 10001
              }
            },
            "authorization_type": {
              "values": {
                "contract_call": 0,
                "transaction_application": 1,
                "contract_upload": 2
              }
            },
            "call_data": {
              "fields": {
                "contract_id": {
                  "type": "bytes",
                  "id": 1,
                  "options": {
                    "(btype)": "ADDRESS"
                  }
                },
                "entry_point": {
                  "type": "uint32",
                  "id": 2
                },
                "caller": {
                  "type": "bytes",
                  "id": 3
                },
                "data": {
                  "type": "bytes",
                  "id": 4
                }
              }
            },
            "authorize_arguments": {
              "oneofs": {
                "_call": {
                  "oneof": [
                    "call"
                  ]
                }
              },
              "fields": {
                "type": {
                  "type": "authorization_type",
                  "id": 1
                },
                "call": {
                  "type": "call_data",
                  "id": 2,
                  "options": {
                    "proto3_optional": true
                  }
                }
              }
            },
            "authorize_result": {
              "fields": {
                "value": {
                  "type": "bool",
                  "id": 1
                }
              }
            },
            "error_code": {
              "values": {
                "success": 0,
                "reversion": 1,
                "internal_error": 100,
                "system_authorization_failure": 101,
                "invalid_contract": 102,
                "insufficient_privileges": 103,
                "insufficient_rc": 104,
                "insufficient_return_buffer": 105,
                "unknown_thunk": 106,
                "unknown_operation": 107,
                "read_only_context": 108,
                "failure": -1,
                "field_not_found": -100,
                "unknown_hash_code": -101,
                "unknown_dsa": -102,
                "unknown_system_call": -103,
                "operation_not_found": -104,
                "authorization_failure": -200,
                "invalid_nonce": -201,
                "invalid_signature": -202,
                "malformed_block": -203,
                "malformed_transaction": -204,
                "block_resource_failure": -205,
                "unknown_backend": -1000,
                "unexpected_state": -1001,
                "missing_required_arguments": -1002,
                "unknown_previous_block": -1003,
                "unexpected_height": -1004,
                "block_state_error": -1005,
                "state_merkle_mismatch": -1006,
                "unexpected_receipt": -1007,
                "rpc_failure": -1008,
                "pending_state_error": -1009,
                "timestamp_out_of_bounds": -1010,
                "indexer_failure": -1011,
                "network_bandwidth_limit_exceeded": -1012,
                "compute_bandwidth_limit_exceeded": -1013,
                "disk_storage_limit_exceeded": -1014,
                "pre_irreversibility_block": -1015
              }
            },
            "nop_arguments": {
              "fields": {}
            },
            "nop_result": {
              "fields": {}
            },
            "get_head_info_arguments": {
              "fields": {}
            },
            "get_head_info_result": {
              "fields": {
                "value": {
                  "type": "head_info",
                  "id": 1
                }
              }
            },
            "apply_block_arguments": {
              "fields": {
                "block": {
                  "type": "protocol.block",
                  "id": 1
                }
              }
            },
            "apply_block_result": {
              "fields": {}
            },
            "apply_transaction_arguments": {
              "fields": {
                "transaction": {
                  "type": "protocol.transaction",
                  "id": 1
                }
              }
            },
            "apply_transaction_result": {
              "fields": {}
            },
            "apply_upload_contract_operation_arguments": {
              "fields": {
                "op": {
                  "type": "protocol.upload_contract_operation",
                  "id": 1
                }
              }
            },
            "apply_upload_contract_operation_result": {
              "fields": {}
            },
            "apply_call_contract_operation_arguments": {
              "fields": {
                "op": {
                  "type": "protocol.call_contract_operation",
                  "id": 1
                }
              }
            },
            "apply_call_contract_operation_result": {
              "fields": {}
            },
            "apply_set_system_call_operation_arguments": {
              "fields": {
                "op": {
                  "type": "protocol.set_system_call_operation",
                  "id": 1
                }
              }
            },
            "apply_set_system_call_operation_result": {
              "fields": {}
            },
            "apply_set_system_contract_operation_arguments": {
              "fields": {
                "op": {
                  "type": "protocol.set_system_contract_operation",
                  "id": 1
                }
              }
            },
            "apply_set_system_contract_operation_result": {
              "fields": {}
            },
            "pre_block_callback_arguments": {
              "fields": {}
            },
            "pre_block_callback_result": {
              "fields": {}
            },
            "post_block_callback_arguments": {
              "fields": {}
            },
            "post_block_callback_result": {
              "fields": {}
            },
            "pre_transaction_callback_arguments": {
              "fields": {}
            },
            "pre_transaction_callback_result": {
              "fields": {}
            },
            "post_transaction_callback_arguments": {
              "fields": {}
            },
            "post_transaction_callback_result": {
              "fields": {}
            },
            "get_chain_id_arguments": {
              "fields": {}
            },
            "get_chain_id_result": {
              "fields": {
                "value": {
                  "type": "bytes",
                  "id": 1
                }
              }
            },
            "process_block_signature_arguments": {
              "fields": {
                "digest": {
                  "type": "bytes",
                  "id": 1
                },
                "header": {
                  "type": "protocol.block_header",
                  "id": 2
                },
                "signature": {
                  "type": "bytes",
                  "id": 3
                }
              }
            },
            "process_block_signature_result": {
              "fields": {
                "value": {
                  "type": "bool",
                  "id": 1
                }
              }
            },
            "get_transaction_arguments": {
              "fields": {}
            },
            "get_transaction_result": {
              "fields": {
                "value": {
                  "type": "protocol.transaction",
                  "id": 1
                }
              }
            },
            "get_transaction_field_arguments": {
              "fields": {
                "field": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "get_transaction_field_result": {
              "fields": {
                "value": {
                  "type": "value_type",
                  "id": 1
                }
              }
            },
            "get_block_arguments": {
              "fields": {}
            },
            "get_block_result": {
              "fields": {
                "value": {
                  "type": "protocol.block",
                  "id": 1
                }
              }
            },
            "get_block_field_arguments": {
              "fields": {
                "field": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "get_block_field_result": {
              "fields": {
                "value": {
                  "type": "value_type",
                  "id": 1
                }
              }
            },
            "get_last_irreversible_block_arguments": {
              "fields": {}
            },
            "get_last_irreversible_block_result": {
              "fields": {
                "value": {
                  "type": "uint64",
                  "id": 1,
                  "options": {
                    "jstype": "JS_STRING"
                  }
                }
              }
            },
            "get_account_nonce_arguments": {
              "fields": {
                "account": {
                  "type": "bytes",
                  "id": 1,
                  "options": {
                    "(btype)": "ADDRESS"
                  }
                }
              }
            },
            "get_account_nonce_result": {
              "fields": {
                "value": {
                  "type": "bytes",
                  "id": 1
                }
              }
            },
            "verify_account_nonce_arguments": {
              "fields": {
                "account": {
                  "type": "bytes",
                  "id": 1,
                  "options": {
                    "(btype)": "ADDRESS"
                  }
                },
                "nonce": {
                  "type": "bytes",
                  "id": 2
                }
              }
            },
            "verify_account_nonce_result": {
              "fields": {
                "value": {
                  "type": "bool",
                  "id": 1
                }
              }
            },
            "set_account_nonce_arguments": {
              "fields": {
                "account": {
                  "type": "bytes",
                  "id": 1,
                  "options": {
                    "(btype)": "ADDRESS"
                  }
                },
                "nonce": {
                  "type": "bytes",
                  "id": 2
                }
              }
            },
            "set_account_nonce_result": {
              "fields": {}
            },
            "check_system_authority_arguments": {
              "fields": {}
            },
            "check_system_authority_result": {
              "fields": {
                "value": {
                  "type": "bool",
                  "id": 1
                }
              }
            },
            "get_operation_arguments": {
              "fields": {}
            },
            "get_operation_result": {
              "fields": {
                "value": {
                  "type": "protocol.operation",
                  "id": 1
                }
              }
            },
            "get_contract_metadata_arguments": {
              "fields": {
                "contract_id": {
                  "type": "bytes",
                  "id": 1,
                  "options": {
                    "(btype)": "CONTRACT_ID"
                  }
                }
              }
            },
            "get_contract_metadata_result": {
              "fields": {
                "value": {
                  "type": "contract_metadata_object",
                  "id": 1
                }
              }
            },
            "get_account_rc_arguments": {
              "fields": {
                "account": {
                  "type": "bytes",
                  "id": 1,
                  "options": {
                    "(btype)": "ADDRESS"
                  }
                }
              }
            },
            "get_account_rc_result": {
              "fields": {
                "value": {
                  "type": "uint64",
                  "id": 1,
                  "options": {
                    "jstype": "JS_STRING"
                  }
                }
              }
            },
            "consume_account_rc_arguments": {
              "fields": {
                "account": {
                  "type": "bytes",
                  "id": 1,
                  "options": {
                    "(btype)": "ADDRESS"
                  }
                },
                "value": {
                  "type": "uint64",
                  "id": 2,
                  "options": {
                    "jstype": "JS_STRING"
                  }
                }
              }
            },
            "consume_account_rc_result": {
              "fields": {
                "value": {
                  "type": "bool",
                  "id": 1
                }
              }
            },
            "get_resource_limits_arguments": {
              "fields": {}
            },
            "get_resource_limits_result": {
              "fields": {
                "value": {
                  "type": "resource_limit_data",
                  "id": 1
                }
              }
            },
            "consume_block_resources_arguments": {
              "fields": {
                "disk_storage_consumed": {
                  "type": "uint64",
                  "id": 1,
                  "options": {
                    "jstype": "JS_STRING"
                  }
                },
                "network_bandwidth_consumed": {
                  "type": "uint64",
                  "id": 2,
                  "options": {
                    "jstype": "JS_STRING"
                  }
                },
                "compute_bandwidth_consumed": {
                  "type": "uint64",
                  "id": 3,
                  "options": {
                    "jstype": "JS_STRING"
                  }
                }
              }
            },
            "consume_block_resources_result": {
              "fields": {
                "value": {
                  "type": "bool",
                  "id": 1
                }
              }
            },
            "put_object_arguments": {
              "fields": {
                "space": {
                  "type": "object_space",
                  "id": 1
                },
                "key": {
                  "type": "bytes",
                  "id": 2
                },
                "obj": {
                  "type": "bytes",
                  "id": 3
                }
              }
            },
            "put_object_result": {
              "fields": {}
            },
            "remove_object_arguments": {
              "fields": {
                "space": {
                  "type": "object_space",
                  "id": 1
                },
                "key": {
                  "type": "bytes",
                  "id": 2
                }
              }
            },
            "remove_object_result": {
              "fields": {}
            },
            "get_object_arguments": {
              "fields": {
                "space": {
                  "type": "object_space",
                  "id": 1
                },
                "key": {
                  "type": "bytes",
                  "id": 2
                }
              }
            },
            "database_object": {
              "fields": {
                "exists": {
                  "type": "bool",
                  "id": 1
                },
                "value": {
                  "type": "bytes",
                  "id": 2
                },
                "key": {
                  "type": "bytes",
                  "id": 3
                }
              }
            },
            "get_object_result": {
              "fields": {
                "value": {
                  "type": "database_object",
                  "id": 1
                }
              }
            },
            "get_next_object_arguments": {
              "fields": {
                "space": {
                  "type": "object_space",
                  "id": 1
                },
                "key": {
                  "type": "bytes",
                  "id": 2
                }
              }
            },
            "get_next_object_result": {
              "fields": {
                "value": {
                  "type": "database_object",
                  "id": 1
                }
              }
            },
            "get_prev_object_arguments": {
              "fields": {
                "space": {
                  "type": "object_space",
                  "id": 1
                },
                "key": {
                  "type": "bytes",
                  "id": 2
                }
              }
            },
            "get_prev_object_result": {
              "fields": {
                "value": {
                  "type": "database_object",
                  "id": 1
                }
              }
            },
            "log_arguments": {
              "fields": {
                "message": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "log_result": {
              "fields": {}
            },
            "event_arguments": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "data": {
                  "type": "bytes",
                  "id": 2
                },
                "impacted": {
                  "rule": "repeated",
                  "type": "bytes",
                  "id": 3,
                  "options": {
                    "(btype)": "ADDRESS"
                  }
                }
              }
            },
            "event_result": {
              "fields": {}
            },
            "hash_arguments": {
              "fields": {
                "code": {
                  "type": "uint64",
                  "id": 1,
                  "options": {
                    "jstype": "JS_STRING"
                  }
                },
                "obj": {
                  "type": "bytes",
                  "id": 2
                },
                "size": {
                  "type": "uint64",
                  "id": 3,
                  "options": {
                    "jstype": "JS_STRING"
                  }
                }
              }
            },
            "hash_result": {
              "fields": {
                "value": {
                  "type": "bytes",
                  "id": 1
                }
              }
            },
            "recover_public_key_arguments": {
              "fields": {
                "type": {
                  "type": "dsa",
                  "id": 1
                },
                "signature": {
                  "type": "bytes",
                  "id": 2
                },
                "digest": {
                  "type": "bytes",
                  "id": 3
                },
                "compressed": {
                  "type": "bool",
                  "id": 4
                }
              }
            },
            "recover_public_key_result": {
              "fields": {
                "value": {
                  "type": "bytes",
                  "id": 1,
                  "options": {
                    "(btype)": "BASE64"
                  }
                }
              }
            },
            "verify_merkle_root_arguments": {
              "fields": {
                "root": {
                  "type": "bytes",
                  "id": 1
                },
                "hashes": {
                  "rule": "repeated",
                  "type": "bytes",
                  "id": 2
                }
              }
            },
            "verify_merkle_root_result": {
              "fields": {
                "value": {
                  "type": "bool",
                  "id": 1
                }
              }
            },
            "verify_signature_arguments": {
              "fields": {
                "type": {
                  "type": "dsa",
                  "id": 1
                },
                "public_key": {
                  "type": "bytes",
                  "id": 2,
                  "options": {
                    "(btype)": "BASE64"
                  }
                },
                "signature": {
                  "type": "bytes",
                  "id": 3,
                  "options": {
                    "(btype)": "BASE64"
                  }
                },
                "digest": {
                  "type": "bytes",
                  "id": 4,
                  "options": {
                    "(btype)": "BASE64"
                  }
                },
                "compressed": {
                  "type": "bool",
                  "id": 5
                }
              }
            },
            "verify_signature_result": {
              "fields": {
                "value": {
                  "type": "bool",
                  "id": 1
                }
              }
            },
            "verify_vrf_proof_arguments": {
              "fields": {
                "type": {
                  "type": "dsa",
                  "id": 1
                },
                "public_key": {
                  "type": "bytes",
                  "id": 2,
                  "options": {
                    "(btype)": "BASE64"
                  }
                },
                "proof": {
                  "type": "bytes",
                  "id": 3,
                  "options": {
                    "(btype)": "BASE64"
                  }
                },
                "hash": {
                  "type": "bytes",
                  "id": 4,
                  "options": {
                    "(btype)": "BASE64"
                  }
                },
                "message": {
                  "type": "bytes",
                  "id": 5,
                  "options": {
                    "(btype)": "BASE64"
                  }
                }
              }
            },
            "verify_vrf_proof_result": {
              "fields": {
                "value": {
                  "type": "bool",
                  "id": 1
                }
              }
            },
            "call_arguments": {
              "fields": {
                "contract_id": {
                  "type": "bytes",
                  "id": 1,
                  "options": {
                    "(btype)": "CONTRACT_ID"
                  }
                },
                "entry_point": {
                  "type": "uint32",
                  "id": 2
                },
                "args": {
                  "type": "bytes",
                  "id": 3
                }
              }
            },
            "call_result": {
              "fields": {
                "value": {
                  "type": "bytes",
                  "id": 1
                }
              }
            },
            "get_arguments_arguments": {
              "fields": {}
            },
            "get_arguments_result": {
              "fields": {
                "value": {
                  "type": "argument_data",
                  "id": 1
                }
              }
            },
            "exit_arguments": {
              "fields": {
                "code": {
                  "type": "int32",
                  "id": 1
                },
                "res": {
                  "type": "result",
                  "id": 2
                }
              }
            },
            "exit_result": {
              "fields": {}
            },
            "get_contract_id_arguments": {
              "fields": {}
            },
            "get_contract_id_result": {
              "fields": {
                "value": {
                  "type": "bytes",
                  "id": 1,
                  "options": {
                    "(btype)": "CONTRACT_ID"
                  }
                }
              }
            },
            "get_caller_arguments": {
              "fields": {}
            },
            "get_caller_result": {
              "fields": {
                "value": {
                  "type": "caller_data",
                  "id": 1
                }
              }
            },
            "check_authority_arguments": {
              "fields": {
                "type": {
                  "type": "authorization_type",
                  "id": 1
                },
                "account": {
                  "type": "bytes",
                  "id": 2,
                  "options": {
                    "(btype)": "ADDRESS"
                  }
                },
                "data": {
                  "type": "bytes",
                  "id": 3
                }
              }
            },
            "check_authority_result": {
              "fields": {
                "value": {
                  "type": "bool",
                  "id": 1
                }
              }
            },
            "set_system_call_event": {
              "fields": {
                "call_id": {
                  "type": "uint32",
                  "id": 1
                },
                "target": {
                  "type": "protocol.system_call_target",
                  "id": 2
                }
              }
            },
            "set_system_contract_event": {
              "fields": {
                "contract_id": {
                  "type": "bytes",
                  "id": 1,
                  "options": {
                    "(btype)": "CONTRACT_ID"
                  }
                },
                "system_contract": {
                  "type": "bool",
                  "id": 2
                }
              }
            },
            "value_type": {
              "oneofs": {
                "kind": {
                  "oneof": [
                    "message_value",
                    "int32_value",
                    "int64_value",
                    "uint32_value",
                    "uint64_value",
                    "sint32_value",
                    "sint64_value",
                    "fixed32_value",
                    "fixed64_value",
                    "sfixed32_value",
                    "sfixed64_value",
                    "bool_value",
                    "string_value",
                    "bytes_value"
                  ]
                }
              },
              "fields": {
                "message_value": {
                  "type": "google.protobuf.Any",
                  "id": 1
                },
                "int32_value": {
                  "type": "int32",
                  "id": 2
                },
                "int64_value": {
                  "type": "int64",
                  "id": 3,
                  "options": {
                    "jstype": "JS_STRING"
                  }
                },
                "uint32_value": {
                  "type": "uint32",
                  "id": 4
                },
                "uint64_value": {
                  "type": "uint64",
                  "id": 5,
                  "options": {
                    "jstype": "JS_STRING"
                  }
                },
                "sint32_value": {
                  "type": "sint32",
                  "id": 6
                },
                "sint64_value": {
                  "type": "sint64",
                  "id": 7,
                  "options": {
                    "jstype": "JS_STRING"
                  }
                },
                "fixed32_value": {
                  "type": "fixed32",
                  "id": 8
                },
                "fixed64_value": {
                  "type": "fixed64",
                  "id": 9,
                  "options": {
                    "jstype": "JS_STRING"
                  }
                },
                "sfixed32_value": {
                  "type": "sfixed32",
                  "id": 10
                },
                "sfixed64_value": {
                  "type": "sfixed64",
                  "id": 11,
                  "options": {
                    "jstype": "JS_STRING"
                  }
                },
                "bool_value": {
                  "type": "bool",
                  "id": 12
                },
                "string_value": {
                  "type": "string",
                  "id": 13
                },
                "bytes_value": {
                  "type": "bytes",
                  "id": 14
                }
              }
            },
            "enum_type": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 2
                }
              }
            },
            "list_type": {
              "fields": {
                "values": {
                  "rule": "repeated",
                  "type": "value_type",
                  "id": 1
                }
              }
            },
            "error_data": {
              "fields": {
                "message": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "result": {
              "oneofs": {
                "value": {
                  "oneof": [
                    "object",
                    "error"
                  ]
                }
              },
              "fields": {
                "object": {
                  "type": "bytes",
                  "id": 1
                },
                "error": {
                  "type": "error_data",
                  "id": 2
                }
              }
            },
            "object_space": {
              "fields": {
                "system": {
                  "type": "bool",
                  "id": 1
                },
                "zone": {
                  "type": "bytes",
                  "id": 2
                },
                "id": {
                  "type": "uint32",
                  "id": 3
                }
              }
            },
            "database_key": {
              "fields": {
                "space": {
                  "type": "object_space",
                  "id": 1
                },
                "key": {
                  "type": "bytes",
                  "id": 2
                }
              }
            },
            "max_account_resources": {
              "fields": {
                "value": {
                  "type": "uint64",
                  "id": 1,
                  "options": {
                    "jstype": "JS_STRING"
                  }
                }
              }
            },
            "privilege": {
              "values": {
                "kernel_mode": 0,
                "user_mode": 1
              }
            },
            "head_info": {
              "fields": {
                "head_topology": {
                  "type": "block_topology",
                  "id": 1
                },
                "head_block_time": {
                  "type": "uint64",
                  "id": 2,
                  "options": {
                    "jstype": "JS_STRING"
                  }
                },
                "last_irreversible_block": {
                  "type": "uint64",
                  "id": 3,
                  "options": {
                    "jstype": "JS_STRING"
                  }
                }
              }
            },
            "caller_data": {
              "fields": {
                "caller": {
                  "type": "bytes",
                  "id": 1,
                  "options": {
                    "(btype)": "ADDRESS"
                  }
                },
                "caller_privilege": {
                  "type": "privilege",
                  "id": 2
                }
              }
            },
            "argument_data": {
              "fields": {
                "entry_point": {
                  "type": "uint32",
                  "id": 1
                },
                "arguments": {
                  "type": "bytes",
                  "id": 2
                }
              }
            },
            "resource_limit_data": {
              "fields": {
                "disk_storage_limit": {
                  "type": "uint64",
                  "id": 1,
                  "options": {
                    "jstype": "JS_STRING"
                  }
                },
                "disk_storage_cost": {
                  "type": "uint64",
                  "id": 2,
                  "options": {
                    "jstype": "JS_STRING"
                  }
                },
                "network_bandwidth_limit": {
                  "type": "uint64",
                  "id": 3,
                  "options": {
                    "jstype": "JS_STRING"
                  }
                },
                "network_bandwidth_cost": {
                  "type": "uint64",
                  "id": 4,
                  "options": {
                    "jstype": "JS_STRING"
                  }
                },
                "compute_bandwidth_limit": {
                  "type": "uint64",
                  "id": 5,
                  "options": {
                    "jstype": "JS_STRING"
                  }
                },
                "compute_bandwidth_cost": {
                  "type": "uint64",
                  "id": 6,
                  "options": {
                    "jstype": "JS_STRING"
                  }
                }
              }
            },
            "contract_metadata_object": {
              "fields": {
                "hash": {
                  "type": "bytes",
                  "id": 1
                },
                "system": {
                  "type": "bool",
                  "id": 2
                },
                "authorizes_call_contract": {
                  "type": "bool",
                  "id": 3
                },
                "authorizes_transaction_application": {
                  "type": "bool",
                  "id": 4
                },
                "authorizes_upload_contract": {
                  "type": "bool",
                  "id": 5
                }
              }
            },
            "compute_bandwidth_entry": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "compute": {
                  "type": "uint64",
                  "id": 2
                }
              }
            },
            "compute_bandwidth_registry": {
              "fields": {
                "entries": {
                  "rule": "repeated",
                  "type": "compute_bandwidth_entry",
                  "id": 1
                }
              }
            },
            "genesis_entry": {
              "fields": {
                "space": {
                  "type": "object_space",
                  "id": 1
                },
                "key": {
                  "type": "bytes",
                  "id": 2
                },
                "value": {
                  "type": "bytes",
                  "id": 3
                }
              }
            },
            "genesis_data": {
              "fields": {
                "entries": {
                  "rule": "repeated",
                  "type": "genesis_entry",
                  "id": 1
                }
              }
            },
            "dsa": {
              "values": {
                "ecdsa_secp256k1": 0
              }
            },
            "system_space_id": {
              "values": {
                "metadata": 0,
                "system_call_dispatch": 1,
                "contract_bytecode": 2,
                "contract_metadata": 3,
                "transaction_nonce": 4
              }
            }
          }
        },
        "transaction_store": {
          "options": {
            "go_package": "github.com/koinos/koinos-proto-golang/koinos/transaction_store"
          },
          "nested": {
            "transaction_item": {
              "fields": {
                "transaction": {
                  "type": "protocol.transaction",
                  "id": 1
                },
                "containing_blocks": {
                  "rule": "repeated",
                  "type": "bytes",
                  "id": 2,
                  "options": {
                    "(btype)": "BLOCK_ID"
                  }
                }
              }
            }
          }
        },
        "contract_meta_store": {
          "options": {
            "go_package": "github.com/koinos/koinos-proto-golang/koinos/contract_meta_store"
          },
          "nested": {
            "contract_meta_item": {
              "fields": {
                "abi": {
                  "type": "string",
                  "id": 1
                }
              }
            }
          }
        },
        "account_history": {
          "options": {
            "go_package": "github.com/koinos/koinos-proto-golang/koinos/account_history"
          },
          "nested": {
            "account_metadata": {
              "fields": {
                "seq_num": {
                  "type": "uint64",
                  "id": 1
                }
              }
            },
            "history_index": {
              "fields": {
                "address": {
                  "type": "bytes",
                  "id": 1,
                  "options": {
                    "(btype)": "ADDRESS"
                  }
                },
                "seq_num": {
                  "type": "uint64",
                  "id": 2
                }
              }
            },
            "transaction_record": {
              "fields": {
                "transaction": {
                  "type": "protocol.transaction",
                  "id": 1
                },
                "receipt": {
                  "type": "protocol.transaction_receipt",
                  "id": 2
                }
              }
            },
            "block_record": {
              "fields": {
                "header": {
                  "type": "protocol.block_header",
                  "id": 1
                },
                "receipt": {
                  "type": "protocol.block_receipt",
                  "id": 2
                }
              }
            },
            "history_record": {
              "oneofs": {
                "record": {
                  "oneof": [
                    "trx",
                    "block"
                  ]
                }
              },
              "fields": {
                "trx": {
                  "type": "transaction_record",
                  "id": 1
                },
                "block": {
                  "type": "block_record",
                  "id": 2
                }
              }
            }
          }
        },
        "block_store": {
          "options": {
            "go_package": "github.com/koinos/koinos-proto-golang/koinos/rpc/block_store"
          },
          "nested": {
            "block_item": {
              "fields": {
                "block_id": {
                  "type": "bytes",
                  "id": 1,
                  "options": {
                    "(btype)": "BLOCK_ID"
                  }
                },
                "block_height": {
                  "type": "uint64",
                  "id": 2,
                  "options": {
                    "jstype": "JS_STRING"
                  }
                },
                "block": {
                  "type": "protocol.block",
                  "id": 3
                },
                "receipt": {
                  "type": "protocol.block_receipt",
                  "id": 4
                }
              }
            },
            "block_record": {
              "fields": {
                "block_id": {
                  "type": "bytes",
                  "id": 1,
                  "options": {
                    "(btype)": "BLOCK_ID"
                  }
                },
                "block_height": {
                  "type": "uint64",
                  "id": 2,
                  "options": {
                    "jstype": "JS_STRING"
                  }
                },
                "block": {
                  "type": "protocol.block",
                  "id": 3
                },
                "receipt": {
                  "type": "protocol.block_receipt",
                  "id": 4
                },
                "previous_block_ids": {
                  "rule": "repeated",
                  "type": "bytes",
                  "id": 5,
                  "options": {
                    "(btype)": "BLOCK_ID"
                  }
                }
              }
            }
          }
        },
        "mempool": {
          "options": {
            "go_package": "github.com/koinos/koinos-proto-golang/koinos/mempool"
          },
          "nested": {
            "mempool_metadata": {
              "fields": {
                "seq_num": {
                  "type": "uint64",
                  "id": 1
                }
              }
            },
            "address_resource_record": {
              "fields": {
                "max_rc": {
                  "type": "uint64",
                  "id": 1
                },
                "current_rc": {
                  "type": "uint64",
                  "id": 2
                }
              }
            },
            "pending_transaction_record": {
              "fields": {
                "transaction": {
                  "type": "protocol.transaction",
                  "id": 1
                },
                "timestamp": {
                  "type": "uint64",
                  "id": 2
                },
                "disk_storage_used": {
                  "type": "uint64",
                  "id": 3
                },
                "network_bandwidth_used": {
                  "type": "uint64",
                  "id": 4
                },
                "compute_bandwidth_used": {
                  "type": "uint64",
                  "id": 5
                }
              }
            }
          }
        },
        "contracts": {
          "nested": {
            "resources": {
              "options": {
                "go_package": "github.com/koinos/koinos-proto-golang/koinos/contracts/resources"
              },
              "nested": {
                "market": {
                  "fields": {
                    "resource_supply": {
                      "type": "uint64",
                      "id": 1,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    },
                    "block_budget": {
                      "type": "uint64",
                      "id": 3,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    },
                    "block_limit": {
                      "type": "uint64",
                      "id": 4,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    }
                  }
                },
                "resource_markets": {
                  "fields": {
                    "disk_storage": {
                      "type": "market",
                      "id": 1
                    },
                    "network_bandwidth": {
                      "type": "market",
                      "id": 2
                    },
                    "compute_bandwidth": {
                      "type": "market",
                      "id": 3
                    }
                  }
                },
                "market_parameters": {
                  "fields": {
                    "block_budget": {
                      "type": "uint64",
                      "id": 1,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    },
                    "block_limit": {
                      "type": "uint64",
                      "id": 2,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    }
                  }
                },
                "resource_parameters": {
                  "fields": {
                    "block_interval_ms": {
                      "type": "uint64",
                      "id": 1,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    },
                    "rc_regen_ms": {
                      "type": "uint64",
                      "id": 2,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    },
                    "decay_constant": {
                      "type": "uint64",
                      "id": 3,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    },
                    "one_minus_decay_constant": {
                      "type": "uint64",
                      "id": 4,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    },
                    "print_rate_premium": {
                      "type": "uint64",
                      "id": 5,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    },
                    "print_rate_precision": {
                      "type": "uint64",
                      "id": 6,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    }
                  }
                },
                "set_resource_markets_parameters_arguments": {
                  "fields": {
                    "disk_storage": {
                      "type": "market_parameters",
                      "id": 1
                    },
                    "network_bandwidth": {
                      "type": "market_parameters",
                      "id": 2
                    },
                    "compute_bandwidth": {
                      "type": "market_parameters",
                      "id": 3
                    }
                  }
                },
                "set_resource_markets_parameters_result": {
                  "fields": {}
                },
                "get_resource_markets_arguments": {
                  "fields": {}
                },
                "get_resource_markets_result": {
                  "fields": {
                    "value": {
                      "type": "resource_markets",
                      "id": 1
                    }
                  }
                },
                "set_resource_parameters_arguments": {
                  "fields": {
                    "params": {
                      "type": "resource_parameters",
                      "id": 1
                    }
                  }
                },
                "set_resource_parameters_result": {
                  "fields": {}
                },
                "get_resource_parameters_arguments": {
                  "fields": {}
                },
                "get_resource_parameters_result": {
                  "fields": {
                    "value": {
                      "type": "resource_parameters",
                      "id": 1
                    }
                  }
                }
              }
            },
            "vhp": {
              "options": {
                "go_package": "github.com/koinos/koinos-proto-golang/koinos/contracts/vhp"
              },
              "nested": {
                "effective_balance_of_arguments": {
                  "fields": {
                    "owner": {
                      "type": "bytes",
                      "id": 1,
                      "options": {
                        "(btype)": "ADDRESS"
                      }
                    }
                  }
                },
                "effective_balance_of_result": {
                  "fields": {
                    "value": {
                      "type": "uint64",
                      "id": 1,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    }
                  }
                },
                "balance_entry": {
                  "fields": {
                    "block_height": {
                      "type": "uint64",
                      "id": 1,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    },
                    "balance": {
                      "type": "uint64",
                      "id": 2,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    }
                  }
                },
                "effective_balance_object": {
                  "fields": {
                    "current_balance": {
                      "type": "uint64",
                      "id": 1,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    },
                    "past_balances": {
                      "rule": "repeated",
                      "type": "balance_entry",
                      "id": 2
                    }
                  }
                }
              }
            },
            "koin": {
              "options": {
                "go_package": "github.com/koinos/koinos-proto-golang/koinos/contracts/koin"
              },
              "nested": {
                "mana_balance_object": {
                  "fields": {
                    "balance": {
                      "type": "uint64",
                      "id": 1,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    },
                    "mana": {
                      "type": "uint64",
                      "id": 2,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    },
                    "last_mana_update": {
                      "type": "uint64",
                      "id": 3,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    }
                  }
                }
              }
            },
            "token": {
              "options": {
                "go_package": "github.com/koinos/koinos-proto-golang/koinos/contracts/token"
              },
              "nested": {
                "name_arguments": {
                  "fields": {}
                },
                "name_result": {
                  "fields": {
                    "value": {
                      "type": "string",
                      "id": 1
                    }
                  }
                },
                "symbol_arguments": {
                  "fields": {}
                },
                "symbol_result": {
                  "fields": {
                    "value": {
                      "type": "string",
                      "id": 1
                    }
                  }
                },
                "decimals_arguments": {
                  "fields": {}
                },
                "decimals_result": {
                  "fields": {
                    "value": {
                      "type": "uint32",
                      "id": 1
                    }
                  }
                },
                "total_supply_arguments": {
                  "fields": {}
                },
                "total_supply_result": {
                  "fields": {
                    "value": {
                      "type": "uint64",
                      "id": 1,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    }
                  }
                },
                "balance_of_arguments": {
                  "fields": {
                    "owner": {
                      "type": "bytes",
                      "id": 1,
                      "options": {
                        "(btype)": "ADDRESS"
                      }
                    }
                  }
                },
                "balance_of_result": {
                  "fields": {
                    "value": {
                      "type": "uint64",
                      "id": 1,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    }
                  }
                },
                "transfer_arguments": {
                  "fields": {
                    "from": {
                      "type": "bytes",
                      "id": 1,
                      "options": {
                        "(btype)": "ADDRESS"
                      }
                    },
                    "to": {
                      "type": "bytes",
                      "id": 2,
                      "options": {
                        "(btype)": "ADDRESS"
                      }
                    },
                    "value": {
                      "type": "uint64",
                      "id": 3,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    }
                  }
                },
                "transfer_result": {
                  "fields": {}
                },
                "mint_arguments": {
                  "fields": {
                    "to": {
                      "type": "bytes",
                      "id": 1,
                      "options": {
                        "(btype)": "ADDRESS"
                      }
                    },
                    "value": {
                      "type": "uint64",
                      "id": 2,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    }
                  }
                },
                "mint_result": {
                  "fields": {}
                },
                "burn_arguments": {
                  "fields": {
                    "from": {
                      "type": "bytes",
                      "id": 1,
                      "options": {
                        "(btype)": "ADDRESS"
                      }
                    },
                    "value": {
                      "type": "uint64",
                      "id": 2,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    }
                  }
                },
                "burn_result": {
                  "fields": {}
                },
                "balance_object": {
                  "fields": {
                    "value": {
                      "type": "uint64",
                      "id": 1,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    }
                  }
                },
                "burn_event": {
                  "fields": {
                    "from": {
                      "type": "bytes",
                      "id": 1,
                      "options": {
                        "(btype)": "ADDRESS"
                      }
                    },
                    "value": {
                      "type": "uint64",
                      "id": 2,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    }
                  }
                },
                "mint_event": {
                  "fields": {
                    "to": {
                      "type": "bytes",
                      "id": 1,
                      "options": {
                        "(btype)": "ADDRESS"
                      }
                    },
                    "value": {
                      "type": "uint64",
                      "id": 2,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    }
                  }
                },
                "transfer_event": {
                  "fields": {
                    "from": {
                      "type": "bytes",
                      "id": 1,
                      "options": {
                        "(btype)": "ADDRESS"
                      }
                    },
                    "to": {
                      "type": "bytes",
                      "id": 2,
                      "options": {
                        "(btype)": "ADDRESS"
                      }
                    },
                    "value": {
                      "type": "uint64",
                      "id": 3,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    }
                  }
                }
              }
            },
            "name_service": {
              "options": {
                "go_package": "github.com/koinos/koinos-proto-golang/koinos/contracts/name-service"
              },
              "nested": {
                "name_record": {
                  "fields": {
                    "name": {
                      "type": "string",
                      "id": 1
                    }
                  }
                },
                "address_record": {
                  "fields": {
                    "address": {
                      "type": "bytes",
                      "id": 1,
                      "options": {
                        "(btype)": "ADDRESS"
                      }
                    }
                  }
                },
                "get_address_arguments": {
                  "fields": {
                    "name": {
                      "type": "string",
                      "id": 1
                    }
                  }
                },
                "get_address_result": {
                  "fields": {
                    "value": {
                      "type": "address_record",
                      "id": 1
                    }
                  }
                },
                "get_name_arguments": {
                  "fields": {
                    "address": {
                      "type": "bytes",
                      "id": 1,
                      "options": {
                        "(btype)": "ADDRESS"
                      }
                    }
                  }
                },
                "get_name_result": {
                  "fields": {
                    "value": {
                      "type": "name_record",
                      "id": 1
                    }
                  }
                },
                "set_record_arguments": {
                  "fields": {
                    "name": {
                      "type": "string",
                      "id": 1
                    },
                    "address": {
                      "type": "bytes",
                      "id": 2,
                      "options": {
                        "(btype)": "ADDRESS"
                      }
                    }
                  }
                },
                "set_record_result": {
                  "fields": {}
                },
                "record_update_event": {
                  "fields": {
                    "name": {
                      "type": "string",
                      "id": 1
                    },
                    "address": {
                      "type": "bytes",
                      "id": 2,
                      "options": {
                        "(btype)": "ADDRESS"
                      }
                    }
                  }
                }
              }
            },
            "pow": {
              "options": {
                "go_package": "github.com/koinos/koinos-proto-golang/koinos/contracts/pow"
              },
              "nested": {
                "difficulty_metadata": {
                  "fields": {
                    "target": {
                      "type": "bytes",
                      "id": 1
                    },
                    "last_block_time": {
                      "type": "uint64",
                      "id": 2,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    },
                    "difficulty": {
                      "type": "bytes",
                      "id": 3
                    },
                    "target_block_interval": {
                      "type": "uint64",
                      "id": 4,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    }
                  }
                },
                "get_difficulty_metadata_arguments": {
                  "fields": {}
                },
                "get_difficulty_metadata_result": {
                  "fields": {
                    "value": {
                      "type": "difficulty_metadata",
                      "id": 1
                    }
                  }
                },
                "pow_signature_data": {
                  "fields": {
                    "nonce": {
                      "type": "bytes",
                      "id": 1
                    },
                    "recoverable_signature": {
                      "type": "bytes",
                      "id": 2
                    }
                  }
                }
              }
            },
            "claim": {
              "options": {
                "go_package": "github.com/koinos/koinos-proto-golang/koinos/contracts/claim"
              },
              "nested": {
                "claim_info": {
                  "fields": {
                    "total_eth_accounts": {
                      "type": "uint32",
                      "id": 1
                    },
                    "eth_accounts_claimed": {
                      "type": "uint32",
                      "id": 2
                    },
                    "total_koin": {
                      "type": "uint64",
                      "id": 3
                    },
                    "koin_claimed": {
                      "type": "uint64",
                      "id": 4
                    }
                  }
                },
                "claim_status": {
                  "fields": {
                    "token_amount": {
                      "type": "uint64",
                      "id": 1,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    },
                    "claimed": {
                      "type": "bool",
                      "id": 2
                    }
                  }
                },
                "claim_arguments": {
                  "fields": {
                    "eth_address": {
                      "type": "bytes",
                      "id": 1,
                      "options": {
                        "(btype)": "HEX"
                      }
                    },
                    "koin_address": {
                      "type": "bytes",
                      "id": 2,
                      "options": {
                        "(btype)": "ADDRESS"
                      }
                    },
                    "signature": {
                      "type": "bytes",
                      "id": 3
                    }
                  }
                },
                "claim_result": {
                  "fields": {}
                },
                "get_info_arguments": {
                  "fields": {}
                },
                "get_info_result": {
                  "fields": {
                    "value": {
                      "type": "claim_info",
                      "id": 1
                    }
                  }
                },
                "check_claim_arguments": {
                  "fields": {
                    "eth_address": {
                      "type": "bytes",
                      "id": 1,
                      "options": {
                        "(btype)": "HEX"
                      }
                    }
                  }
                },
                "check_claim_result": {
                  "fields": {
                    "value": {
                      "type": "claim_status",
                      "id": 1
                    }
                  }
                }
              }
            },
            "pob": {
              "options": {
                "go_package": "github.com/koinos/koinos-proto-golang/koinos/contracts/pob"
              },
              "nested": {
                "consensus_parameters": {
                  "fields": {
                    "target_annual_inflation_rate": {
                      "type": "uint32",
                      "id": 1
                    },
                    "target_burn_percent": {
                      "type": "uint32",
                      "id": 2
                    },
                    "target_block_interval": {
                      "type": "uint32",
                      "id": 3
                    },
                    "quantum_length": {
                      "type": "uint32",
                      "id": 4
                    }
                  }
                },
                "public_key_record": {
                  "fields": {
                    "public_key": {
                      "type": "bytes",
                      "id": 1,
                      "options": {
                        "(btype)": "BASE64"
                      }
                    },
                    "set_block_height": {
                      "type": "uint64",
                      "id": 2,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    }
                  }
                },
                "metadata": {
                  "fields": {
                    "seed": {
                      "type": "bytes",
                      "id": 1,
                      "options": {
                        "(btype)": "BASE64"
                      }
                    },
                    "difficulty": {
                      "type": "bytes",
                      "id": 2,
                      "options": {
                        "(btype)": "BASE64"
                      }
                    },
                    "last_block_time": {
                      "type": "uint64",
                      "id": 3,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    }
                  }
                },
                "signature_data": {
                  "fields": {
                    "vrf_proof": {
                      "type": "bytes",
                      "id": 1,
                      "options": {
                        "(btype)": "BASE64"
                      }
                    },
                    "vrf_hash": {
                      "type": "bytes",
                      "id": 2,
                      "options": {
                        "(btype)": "BASE64"
                      }
                    },
                    "signature": {
                      "type": "bytes",
                      "id": 3,
                      "options": {
                        "(btype)": "BASE64"
                      }
                    }
                  }
                },
                "vrf_payload": {
                  "fields": {
                    "seed": {
                      "type": "bytes",
                      "id": 1,
                      "options": {
                        "(btype)": "BASE64"
                      }
                    },
                    "block_time": {
                      "type": "uint64",
                      "id": 2,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    }
                  }
                },
                "register_public_key_arguments": {
                  "fields": {
                    "producer": {
                      "type": "bytes",
                      "id": 1,
                      "options": {
                        "(btype)": "ADDRESS"
                      }
                    },
                    "public_key": {
                      "type": "bytes",
                      "id": 2,
                      "options": {
                        "(btype)": "BASE64"
                      }
                    }
                  }
                },
                "register_public_key_result": {
                  "fields": {}
                },
                "burn_arguments": {
                  "fields": {
                    "token_amount": {
                      "type": "uint64",
                      "id": 1,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    },
                    "burn_address": {
                      "type": "bytes",
                      "id": 2,
                      "options": {
                        "(btype)": "ADDRESS"
                      }
                    },
                    "vhp_address": {
                      "type": "bytes",
                      "id": 3,
                      "options": {
                        "(btype)": "ADDRESS"
                      }
                    }
                  }
                },
                "burn_result": {
                  "fields": {}
                },
                "get_consensus_parameters_arguments": {
                  "fields": {}
                },
                "get_consensus_parameters_result": {
                  "fields": {
                    "value": {
                      "type": "consensus_parameters",
                      "id": 1
                    }
                  }
                },
                "get_metadata_arguments": {
                  "fields": {}
                },
                "get_metadata_result": {
                  "fields": {
                    "value": {
                      "type": "metadata",
                      "id": 1
                    }
                  }
                },
                "register_public_key_event": {
                  "fields": {
                    "address": {
                      "type": "bytes",
                      "id": 1,
                      "options": {
                        "(btype)": "ADDRESS"
                      }
                    },
                    "public_key": {
                      "type": "bytes",
                      "id": 2,
                      "options": {
                        "(btype)": "BASE64"
                      }
                    }
                  }
                },
                "get_public_key_arguments": {
                  "fields": {
                    "producer": {
                      "type": "bytes",
                      "id": 1,
                      "options": {
                        "(btype)": "ADDRESS"
                      }
                    }
                  }
                },
                "get_public_key_result": {
                  "fields": {
                    "value": {
                      "type": "bytes",
                      "id": 1,
                      "options": {
                        "(btype)": "BASE64"
                      }
                    }
                  }
                },
                "update_consensus_parameters_arguments": {
                  "fields": {
                    "value": {
                      "type": "consensus_parameters",
                      "id": 1
                    }
                  }
                },
                "update_consensus_parameters_result": {
                  "fields": {}
                }
              }
            },
            "governance": {
              "options": {
                "go_package": "github.com/koinos/koinos-proto-golang/koinos/contracts/governance"
              },
              "nested": {
                "proposal_status": {
                  "values": {
                    "pending": 0,
                    "active": 1,
                    "approved": 2,
                    "expired": 3,
                    "applied": 4,
                    "failed": 5,
                    "reverted": 6
                  }
                },
                "proposal_record": {
                  "fields": {
                    "operations": {
                      "rule": "repeated",
                      "type": "koinos.protocol.operation",
                      "id": 1
                    },
                    "operation_merkle_root": {
                      "type": "bytes",
                      "id": 2
                    },
                    "vote_start_height": {
                      "type": "uint64",
                      "id": 3
                    },
                    "vote_tally": {
                      "type": "uint64",
                      "id": 4
                    },
                    "vote_threshold": {
                      "type": "uint64",
                      "id": 5
                    },
                    "shall_authorize": {
                      "type": "bool",
                      "id": 6
                    },
                    "updates_governance": {
                      "type": "bool",
                      "id": 7
                    },
                    "status": {
                      "type": "proposal_status",
                      "id": 8
                    },
                    "fee": {
                      "type": "uint64",
                      "id": 9
                    }
                  }
                },
                "submit_proposal_arguments": {
                  "fields": {
                    "operations": {
                      "rule": "repeated",
                      "type": "koinos.protocol.operation",
                      "id": 1
                    },
                    "operation_merkle_root": {
                      "type": "bytes",
                      "id": 2
                    },
                    "fee": {
                      "type": "uint64",
                      "id": 3
                    }
                  }
                },
                "submit_proposal_result": {
                  "fields": {}
                },
                "get_proposal_by_id_arguments": {
                  "fields": {
                    "proposal_id": {
                      "type": "bytes",
                      "id": 1,
                      "options": {
                        "(btype)": "TRANSACTION_ID"
                      }
                    }
                  }
                },
                "get_proposal_by_id_result": {
                  "fields": {
                    "value": {
                      "type": "proposal_record",
                      "id": 1
                    }
                  }
                },
                "get_proposals_by_status_arguments": {
                  "fields": {
                    "start_proposal": {
                      "type": "bytes",
                      "id": 1,
                      "options": {
                        "(btype)": "TRANSACTION_ID"
                      }
                    },
                    "limit": {
                      "type": "uint64",
                      "id": 2
                    },
                    "status": {
                      "type": "proposal_status",
                      "id": 3
                    }
                  }
                },
                "get_proposals_by_status_result": {
                  "fields": {
                    "value": {
                      "rule": "repeated",
                      "type": "proposal_record",
                      "id": 1
                    }
                  }
                },
                "get_proposals_arguments": {
                  "fields": {
                    "start_proposal": {
                      "type": "bytes",
                      "id": 1,
                      "options": {
                        "(btype)": "TRANSACTION_ID"
                      }
                    },
                    "limit": {
                      "type": "uint64",
                      "id": 2
                    }
                  }
                },
                "get_proposals_result": {
                  "fields": {
                    "value": {
                      "rule": "repeated",
                      "type": "proposal_record",
                      "id": 1
                    }
                  }
                },
                "proposal_submission_event": {
                  "fields": {
                    "proposal": {
                      "type": "proposal_record",
                      "id": 1
                    }
                  }
                },
                "proposal_status_event": {
                  "fields": {
                    "id": {
                      "type": "bytes",
                      "id": 1,
                      "options": {
                        "(btype)": "TRANSACTION_ID"
                      }
                    },
                    "status": {
                      "type": "proposal_status",
                      "id": 2
                    }
                  }
                },
                "proposal_vote_event": {
                  "fields": {
                    "id": {
                      "type": "bytes",
                      "id": 1,
                      "options": {
                        "(btype)": "TRANSACTION_ID"
                      }
                    },
                    "vote_tally": {
                      "type": "uint64",
                      "id": 2
                    },
                    "vote_threshold": {
                      "type": "uint64",
                      "id": 3
                    }
                  }
                }
              }
            }
          }
        },
        "rpc": {
          "options": {
            "go_package": "github.com/koinos/koinos-proto-golang/koinos/rpc"
          },
          "nested": {
            "chain": {
              "options": {
                "go_package": "github.com/koinos/koinos-proto-golang/koinos/rpc/chain"
              },
              "nested": {
                "submit_block_request": {
                  "fields": {
                    "block": {
                      "type": "protocol.block",
                      "id": 1
                    }
                  }
                },
                "submit_block_response": {
                  "fields": {
                    "receipt": {
                      "type": "protocol.block_receipt",
                      "id": 1
                    }
                  }
                },
                "submit_transaction_request": {
                  "fields": {
                    "transaction": {
                      "type": "protocol.transaction",
                      "id": 1
                    },
                    "broadcast": {
                      "type": "bool",
                      "id": 2
                    }
                  }
                },
                "submit_transaction_response": {
                  "fields": {
                    "receipt": {
                      "type": "protocol.transaction_receipt",
                      "id": 1
                    }
                  }
                },
                "get_head_info_request": {
                  "fields": {}
                },
                "get_head_info_response": {
                  "fields": {
                    "head_topology": {
                      "type": "block_topology",
                      "id": 1
                    },
                    "last_irreversible_block": {
                      "type": "uint64",
                      "id": 2,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    },
                    "head_state_merkle_root": {
                      "type": "bytes",
                      "id": 3
                    },
                    "head_block_time": {
                      "type": "uint64",
                      "id": 4,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    }
                  }
                },
                "get_chain_id_request": {
                  "fields": {}
                },
                "get_chain_id_response": {
                  "fields": {
                    "chain_id": {
                      "type": "bytes",
                      "id": 1
                    }
                  }
                },
                "get_fork_heads_request": {
                  "fields": {}
                },
                "get_fork_heads_response": {
                  "fields": {
                    "last_irreversible_block": {
                      "type": "block_topology",
                      "id": 1
                    },
                    "fork_heads": {
                      "rule": "repeated",
                      "type": "block_topology",
                      "id": 2
                    }
                  }
                },
                "read_contract_request": {
                  "fields": {
                    "contract_id": {
                      "type": "bytes",
                      "id": 1,
                      "options": {
                        "(btype)": "CONTRACT_ID"
                      }
                    },
                    "entry_point": {
                      "type": "uint32",
                      "id": 2
                    },
                    "args": {
                      "type": "bytes",
                      "id": 3
                    }
                  }
                },
                "read_contract_response": {
                  "fields": {
                    "result": {
                      "type": "bytes",
                      "id": 1
                    },
                    "logs": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 2
                    }
                  }
                },
                "get_account_nonce_request": {
                  "fields": {
                    "account": {
                      "type": "bytes",
                      "id": 1,
                      "options": {
                        "(btype)": "ADDRESS"
                      }
                    }
                  }
                },
                "get_account_nonce_response": {
                  "fields": {
                    "nonce": {
                      "type": "bytes",
                      "id": 1
                    }
                  }
                },
                "get_account_rc_request": {
                  "fields": {
                    "account": {
                      "type": "bytes",
                      "id": 1,
                      "options": {
                        "(btype)": "ADDRESS"
                      }
                    }
                  }
                },
                "get_account_rc_response": {
                  "fields": {
                    "rc": {
                      "type": "uint64",
                      "id": 1,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    }
                  }
                },
                "get_resource_limits_request": {
                  "fields": {}
                },
                "get_resource_limits_response": {
                  "fields": {
                    "resource_limit_data": {
                      "type": "koinos.chain.resource_limit_data",
                      "id": 1
                    }
                  }
                },
                "invoke_system_call_request": {
                  "oneofs": {
                    "system_call": {
                      "oneof": [
                        "id",
                        "name"
                      ]
                    },
                    "_caller_data": {
                      "oneof": [
                        "caller_data"
                      ]
                    }
                  },
                  "fields": {
                    "id": {
                      "type": "int64",
                      "id": 1
                    },
                    "name": {
                      "type": "string",
                      "id": 2
                    },
                    "args": {
                      "type": "bytes",
                      "id": 3
                    },
                    "caller_data": {
                      "type": "koinos.chain.caller_data",
                      "id": 4,
                      "options": {
                        "proto3_optional": true
                      }
                    }
                  }
                },
                "invoke_system_call_response": {
                  "fields": {
                    "value": {
                      "type": "bytes",
                      "id": 1
                    }
                  }
                },
                "chain_request": {
                  "oneofs": {
                    "request": {
                      "oneof": [
                        "reserved",
                        "submit_block",
                        "submit_transaction",
                        "get_head_info",
                        "get_chain_id",
                        "get_fork_heads",
                        "read_contract",
                        "get_account_nonce",
                        "get_account_rc",
                        "get_resource_limits",
                        "invoke_system_call"
                      ]
                    }
                  },
                  "fields": {
                    "reserved": {
                      "type": "rpc.reserved_rpc",
                      "id": 1
                    },
                    "submit_block": {
                      "type": "submit_block_request",
                      "id": 2
                    },
                    "submit_transaction": {
                      "type": "submit_transaction_request",
                      "id": 3
                    },
                    "get_head_info": {
                      "type": "get_head_info_request",
                      "id": 4
                    },
                    "get_chain_id": {
                      "type": "get_chain_id_request",
                      "id": 5
                    },
                    "get_fork_heads": {
                      "type": "get_fork_heads_request",
                      "id": 6
                    },
                    "read_contract": {
                      "type": "read_contract_request",
                      "id": 7
                    },
                    "get_account_nonce": {
                      "type": "get_account_nonce_request",
                      "id": 8
                    },
                    "get_account_rc": {
                      "type": "get_account_rc_request",
                      "id": 9
                    },
                    "get_resource_limits": {
                      "type": "get_resource_limits_request",
                      "id": 10
                    },
                    "invoke_system_call": {
                      "type": "invoke_system_call_request",
                      "id": 11
                    }
                  }
                },
                "chain_response": {
                  "oneofs": {
                    "response": {
                      "oneof": [
                        "reserved",
                        "error",
                        "submit_block",
                        "submit_transaction",
                        "get_head_info",
                        "get_chain_id",
                        "get_fork_heads",
                        "read_contract",
                        "get_account_nonce",
                        "get_account_rc",
                        "get_resource_limits",
                        "invoke_system_call"
                      ]
                    }
                  },
                  "fields": {
                    "reserved": {
                      "type": "rpc.reserved_rpc",
                      "id": 1
                    },
                    "error": {
                      "type": "rpc.error_response",
                      "id": 2
                    },
                    "submit_block": {
                      "type": "submit_block_response",
                      "id": 3
                    },
                    "submit_transaction": {
                      "type": "submit_transaction_response",
                      "id": 4
                    },
                    "get_head_info": {
                      "type": "get_head_info_response",
                      "id": 5
                    },
                    "get_chain_id": {
                      "type": "get_chain_id_response",
                      "id": 6
                    },
                    "get_fork_heads": {
                      "type": "get_fork_heads_response",
                      "id": 7
                    },
                    "read_contract": {
                      "type": "read_contract_response",
                      "id": 8
                    },
                    "get_account_nonce": {
                      "type": "get_account_nonce_response",
                      "id": 9
                    },
                    "get_account_rc": {
                      "type": "get_account_rc_response",
                      "id": 10
                    },
                    "get_resource_limits": {
                      "type": "get_resource_limits_response",
                      "id": 11
                    },
                    "invoke_system_call": {
                      "type": "invoke_system_call_response",
                      "id": 12
                    }
                  }
                }
              }
            },
            "transaction_store": {
              "options": {
                "go_package": "github.com/koinos/koinos-proto-golang/koinos/rpc/transaction_store"
              },
              "nested": {
                "get_transactions_by_id_request": {
                  "fields": {
                    "transaction_ids": {
                      "rule": "repeated",
                      "type": "bytes",
                      "id": 1,
                      "options": {
                        "(btype)": "TRANSACTION_ID"
                      }
                    }
                  }
                },
                "get_transactions_by_id_response": {
                  "fields": {
                    "transactions": {
                      "rule": "repeated",
                      "type": "koinos.transaction_store.transaction_item",
                      "id": 1
                    }
                  }
                },
                "transaction_store_request": {
                  "oneofs": {
                    "request": {
                      "oneof": [
                        "reserved",
                        "get_transactions_by_id"
                      ]
                    }
                  },
                  "fields": {
                    "reserved": {
                      "type": "rpc.reserved_rpc",
                      "id": 1
                    },
                    "get_transactions_by_id": {
                      "type": "get_transactions_by_id_request",
                      "id": 2
                    }
                  }
                },
                "transaction_store_response": {
                  "oneofs": {
                    "response": {
                      "oneof": [
                        "reserved",
                        "error",
                        "get_transactions_by_id"
                      ]
                    }
                  },
                  "fields": {
                    "reserved": {
                      "type": "rpc.reserved_rpc",
                      "id": 1
                    },
                    "error": {
                      "type": "rpc.error_response",
                      "id": 2
                    },
                    "get_transactions_by_id": {
                      "type": "get_transactions_by_id_response",
                      "id": 3
                    }
                  }
                }
              }
            },
            "contract_meta_store": {
              "options": {
                "go_package": "github.com/koinos/koinos-proto-golang/koinos/rpc/contract_meta_store"
              },
              "nested": {
                "get_contract_meta_request": {
                  "fields": {
                    "contract_id": {
                      "type": "bytes",
                      "id": 1,
                      "options": {
                        "(btype)": "CONTRACT_ID"
                      }
                    }
                  }
                },
                "get_contract_meta_response": {
                  "fields": {
                    "meta": {
                      "type": "koinos.contract_meta_store.contract_meta_item",
                      "id": 1
                    }
                  }
                },
                "contract_meta_store_request": {
                  "oneofs": {
                    "request": {
                      "oneof": [
                        "reserved",
                        "get_contract_meta"
                      ]
                    }
                  },
                  "fields": {
                    "reserved": {
                      "type": "rpc.reserved_rpc",
                      "id": 1
                    },
                    "get_contract_meta": {
                      "type": "get_contract_meta_request",
                      "id": 2
                    }
                  }
                },
                "contract_meta_store_response": {
                  "oneofs": {
                    "response": {
                      "oneof": [
                        "reserved",
                        "error",
                        "get_contract_meta"
                      ]
                    }
                  },
                  "fields": {
                    "reserved": {
                      "type": "rpc.reserved_rpc",
                      "id": 1
                    },
                    "error": {
                      "type": "rpc.error_response",
                      "id": 2
                    },
                    "get_contract_meta": {
                      "type": "get_contract_meta_response",
                      "id": 3
                    }
                  }
                }
              }
            },
            "reserved_rpc": {
              "fields": {}
            },
            "error_response": {
              "fields": {
                "message": {
                  "type": "string",
                  "id": 1
                },
                "data": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "account_history": {
              "options": {
                "go_package": "github.com/koinos/koinos-proto-golang/koinos/rpc/account_history"
              },
              "nested": {
                "account_history_entry": {
                  "oneofs": {
                    "record": {
                      "oneof": [
                        "trx",
                        "block"
                      ]
                    }
                  },
                  "fields": {
                    "seq_num": {
                      "type": "uint64",
                      "id": 1,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    },
                    "trx": {
                      "type": ".koinos.account_history.transaction_record",
                      "id": 2
                    },
                    "block": {
                      "type": ".koinos.account_history.block_record",
                      "id": 3
                    }
                  }
                },
                "get_account_history_request": {
                  "oneofs": {
                    "_seq_num": {
                      "oneof": [
                        "seq_num"
                      ]
                    }
                  },
                  "fields": {
                    "address": {
                      "type": "bytes",
                      "id": 1,
                      "options": {
                        "(btype)": "ADDRESS"
                      }
                    },
                    "seq_num": {
                      "type": "uint64",
                      "id": 2,
                      "options": {
                        "jstype": "JS_STRING",
                        "proto3_optional": true
                      }
                    },
                    "limit": {
                      "type": "uint64",
                      "id": 3,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    },
                    "ascending": {
                      "type": "bool",
                      "id": 4
                    },
                    "irreversible": {
                      "type": "bool",
                      "id": 5
                    }
                  }
                },
                "get_account_history_response": {
                  "fields": {
                    "values": {
                      "rule": "repeated",
                      "type": "account_history_entry",
                      "id": 1
                    }
                  }
                },
                "account_history_request": {
                  "oneofs": {
                    "request": {
                      "oneof": [
                        "reserved",
                        "get_account_history"
                      ]
                    }
                  },
                  "fields": {
                    "reserved": {
                      "type": "rpc.reserved_rpc",
                      "id": 1
                    },
                    "get_account_history": {
                      "type": "get_account_history_request",
                      "id": 2
                    }
                  }
                },
                "account_history_response": {
                  "oneofs": {
                    "response": {
                      "oneof": [
                        "reserved",
                        "error",
                        "get_account_history"
                      ]
                    }
                  },
                  "fields": {
                    "reserved": {
                      "type": "rpc.reserved_rpc",
                      "id": 1
                    },
                    "error": {
                      "type": "rpc.error_response",
                      "id": 2
                    },
                    "get_account_history": {
                      "type": "get_account_history_response",
                      "id": 3
                    }
                  }
                }
              }
            },
            "block_store": {
              "options": {
                "go_package": "github.com/koinos/koinos-proto-golang/koinos/rpc/block_store"
              },
              "nested": {
                "get_blocks_by_id_request": {
                  "fields": {
                    "block_ids": {
                      "rule": "repeated",
                      "type": "bytes",
                      "id": 1,
                      "options": {
                        "(btype)": "BLOCK_ID"
                      }
                    },
                    "return_block": {
                      "type": "bool",
                      "id": 2
                    },
                    "return_receipt": {
                      "type": "bool",
                      "id": 3
                    }
                  }
                },
                "get_blocks_by_id_response": {
                  "fields": {
                    "block_items": {
                      "rule": "repeated",
                      "type": ".koinos.block_store.block_item",
                      "id": 1
                    }
                  }
                },
                "get_blocks_by_height_request": {
                  "fields": {
                    "head_block_id": {
                      "type": "bytes",
                      "id": 1,
                      "options": {
                        "(btype)": "BLOCK_ID"
                      }
                    },
                    "ancestor_start_height": {
                      "type": "uint64",
                      "id": 2,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    },
                    "num_blocks": {
                      "type": "uint32",
                      "id": 3
                    },
                    "return_block": {
                      "type": "bool",
                      "id": 4
                    },
                    "return_receipt": {
                      "type": "bool",
                      "id": 5
                    }
                  }
                },
                "get_blocks_by_height_response": {
                  "fields": {
                    "block_items": {
                      "rule": "repeated",
                      "type": ".koinos.block_store.block_item",
                      "id": 1
                    }
                  }
                },
                "add_block_request": {
                  "fields": {
                    "block_to_add": {
                      "type": "protocol.block",
                      "id": 1
                    },
                    "receipt_to_add": {
                      "type": "protocol.block_receipt",
                      "id": 2
                    }
                  }
                },
                "add_block_response": {
                  "fields": {}
                },
                "get_highest_block_request": {
                  "fields": {}
                },
                "get_highest_block_response": {
                  "fields": {
                    "topology": {
                      "type": "block_topology",
                      "id": 1
                    }
                  }
                },
                "block_store_request": {
                  "oneofs": {
                    "request": {
                      "oneof": [
                        "reserved",
                        "get_blocks_by_id",
                        "get_blocks_by_height",
                        "add_block",
                        "get_highest_block"
                      ]
                    }
                  },
                  "fields": {
                    "reserved": {
                      "type": "rpc.reserved_rpc",
                      "id": 1
                    },
                    "get_blocks_by_id": {
                      "type": "get_blocks_by_id_request",
                      "id": 2
                    },
                    "get_blocks_by_height": {
                      "type": "get_blocks_by_height_request",
                      "id": 3
                    },
                    "add_block": {
                      "type": "add_block_request",
                      "id": 4
                    },
                    "get_highest_block": {
                      "type": "get_highest_block_request",
                      "id": 5
                    }
                  }
                },
                "block_store_response": {
                  "oneofs": {
                    "response": {
                      "oneof": [
                        "reserved",
                        "error",
                        "get_blocks_by_id",
                        "get_blocks_by_height",
                        "add_block",
                        "get_highest_block"
                      ]
                    }
                  },
                  "fields": {
                    "reserved": {
                      "type": "rpc.reserved_rpc",
                      "id": 1
                    },
                    "error": {
                      "type": "rpc.error_response",
                      "id": 2
                    },
                    "get_blocks_by_id": {
                      "type": "get_blocks_by_id_response",
                      "id": 3
                    },
                    "get_blocks_by_height": {
                      "type": "get_blocks_by_height_response",
                      "id": 4
                    },
                    "add_block": {
                      "type": "add_block_response",
                      "id": 5
                    },
                    "get_highest_block": {
                      "type": "get_highest_block_response",
                      "id": 6
                    }
                  }
                }
              }
            },
            "p2p": {
              "options": {
                "go_package": "github.com/koinos/koinos-proto-golang/koinos/rpc/p2p"
              },
              "nested": {
                "get_gossip_status_request": {
                  "fields": {}
                },
                "get_gossip_status_response": {
                  "fields": {
                    "enabled": {
                      "type": "bool",
                      "id": 1
                    }
                  }
                },
                "p2p_request": {
                  "oneofs": {
                    "request": {
                      "oneof": [
                        "reserved",
                        "get_gossip_status"
                      ]
                    }
                  },
                  "fields": {
                    "reserved": {
                      "type": "rpc.reserved_rpc",
                      "id": 1
                    },
                    "get_gossip_status": {
                      "type": "get_gossip_status_request",
                      "id": 2
                    }
                  }
                },
                "p2p_response": {
                  "oneofs": {
                    "response": {
                      "oneof": [
                        "reserved",
                        "error",
                        "get_gossip_status"
                      ]
                    }
                  },
                  "fields": {
                    "reserved": {
                      "type": "rpc.reserved_rpc",
                      "id": 1
                    },
                    "error": {
                      "type": "rpc.error_response",
                      "id": 2
                    },
                    "get_gossip_status": {
                      "type": "get_gossip_status_response",
                      "id": 3
                    }
                  }
                }
              }
            },
            "mempool": {
              "options": {
                "go_package": "github.com/koinos/koinos-proto-golang/koinos/rpc/mempool"
              },
              "nested": {
                "pending_transaction": {
                  "fields": {
                    "transaction": {
                      "type": "protocol.transaction",
                      "id": 1
                    },
                    "disk_storage_used": {
                      "type": "uint64",
                      "id": 2,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    },
                    "network_bandwidth_used": {
                      "type": "uint64",
                      "id": 3,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    },
                    "compute_bandwidth_used": {
                      "type": "uint64",
                      "id": 4,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    }
                  }
                },
                "check_pending_account_resources_request": {
                  "oneofs": {
                    "_block_id": {
                      "oneof": [
                        "block_id"
                      ]
                    }
                  },
                  "fields": {
                    "payer": {
                      "type": "bytes",
                      "id": 1,
                      "options": {
                        "(btype)": "ADDRESS"
                      }
                    },
                    "max_payer_rc": {
                      "type": "uint64",
                      "id": 2,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    },
                    "rc_limit": {
                      "type": "uint64",
                      "id": 3,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    },
                    "block_id": {
                      "type": "bytes",
                      "id": 4,
                      "options": {
                        "(btype)": "BLOCK_ID",
                        "proto3_optional": true
                      }
                    }
                  }
                },
                "check_pending_account_resources_response": {
                  "fields": {
                    "success": {
                      "type": "bool",
                      "id": 1
                    }
                  }
                },
                "get_pending_transactions_request": {
                  "oneofs": {
                    "_block_id": {
                      "oneof": [
                        "block_id"
                      ]
                    }
                  },
                  "fields": {
                    "limit": {
                      "type": "uint64",
                      "id": 1,
                      "options": {
                        "jstype": "JS_STRING"
                      }
                    },
                    "block_id": {
                      "type": "bytes",
                      "id": 2,
                      "options": {
                        "(btype)": "BLOCK_ID",
                        "proto3_optional": true
                      }
                    }
                  }
                },
                "get_pending_transactions_response": {
                  "fields": {
                    "pending_transactions": {
                      "rule": "repeated",
                      "type": "pending_transaction",
                      "id": 1
                    }
                  }
                },
                "mempool_request": {
                  "oneofs": {
                    "request": {
                      "oneof": [
                        "reserved",
                        "check_pending_account_resources",
                        "get_pending_transactions"
                      ]
                    }
                  },
                  "fields": {
                    "reserved": {
                      "type": "rpc.reserved_rpc",
                      "id": 1
                    },
                    "check_pending_account_resources": {
                      "type": "check_pending_account_resources_request",
                      "id": 2
                    },
                    "get_pending_transactions": {
                      "type": "get_pending_transactions_request",
                      "id": 3
                    }
                  }
                },
                "mempool_response": {
                  "oneofs": {
                    "response": {
                      "oneof": [
                        "reserved",
                        "error",
                        "check_pending_account_resources",
                        "get_pending_transactions"
                      ]
                    }
                  },
                  "fields": {
                    "reserved": {
                      "type": "rpc.reserved_rpc",
                      "id": 1
                    },
                    "error": {
                      "type": "rpc.error_response",
                      "id": 2
                    },
                    "check_pending_account_resources": {
                      "type": "check_pending_account_resources_response",
                      "id": 3
                    },
                    "get_pending_transactions": {
                      "type": "get_pending_transactions_response",
                      "id": 4
                    }
                  }
                }
              }
            }
          }
        },
        "services": {
          "options": {
            "go_package": "github.com/koinos/koinos-proto-golang/koinos/services"
          },
          "nested": {
            "koinos": {
              "methods": {
                "get_account_history": {
                  "requestType": ".koinos.rpc.account_history.get_account_history_request",
                  "responseType": ".koinos.rpc.account_history.get_account_history_response"
                },
                "get_blocks_by_id": {
                  "requestType": ".koinos.rpc.block_store.get_blocks_by_id_request",
                  "responseType": ".koinos.rpc.block_store.get_blocks_by_id_response"
                },
                "get_blocks_by_height": {
                  "requestType": ".koinos.rpc.block_store.get_blocks_by_height_request",
                  "responseType": ".koinos.rpc.block_store.get_blocks_by_height_response"
                },
                "get_highest_block": {
                  "requestType": ".koinos.rpc.block_store.get_highest_block_request",
                  "responseType": ".koinos.rpc.block_store.get_highest_block_response"
                },
                "submit_block": {
                  "requestType": ".koinos.rpc.chain.submit_block_request",
                  "responseType": ".koinos.rpc.chain.submit_block_response"
                },
                "submit_transaction": {
                  "requestType": ".koinos.rpc.chain.submit_transaction_request",
                  "responseType": ".koinos.rpc.chain.submit_transaction_response"
                },
                "get_head_info": {
                  "requestType": ".koinos.rpc.chain.get_head_info_request",
                  "responseType": ".koinos.rpc.chain.get_head_info_response"
                },
                "get_chain_id": {
                  "requestType": ".koinos.rpc.chain.get_chain_id_request",
                  "responseType": ".koinos.rpc.chain.get_chain_id_response"
                },
                "get_fork_heads": {
                  "requestType": ".koinos.rpc.chain.get_fork_heads_request",
                  "responseType": ".koinos.rpc.chain.get_fork_heads_response"
                },
                "read_contract": {
                  "requestType": ".koinos.rpc.chain.read_contract_request",
                  "responseType": ".koinos.rpc.chain.read_contract_response"
                },
                "get_account_nonce": {
                  "requestType": ".koinos.rpc.chain.get_account_nonce_request",
                  "responseType": ".koinos.rpc.chain.get_account_nonce_response"
                },
                "get_account_rc": {
                  "requestType": ".koinos.rpc.chain.get_account_rc_request",
                  "responseType": ".koinos.rpc.chain.get_account_rc_response"
                },
                "get_resource_limits": {
                  "requestType": ".koinos.rpc.chain.get_resource_limits_request",
                  "responseType": ".koinos.rpc.chain.get_resource_limits_response"
                },
                "invoke_system_call": {
                  "requestType": ".koinos.rpc.chain.invoke_system_call_request",
                  "responseType": ".koinos.rpc.chain.invoke_system_call_response"
                },
                "get_contract_meta": {
                  "requestType": ".koinos.rpc.contract_meta_store.get_contract_meta_request",
                  "responseType": ".koinos.rpc.contract_meta_store.get_contract_meta_response"
                },
                "get_pending_transactions": {
                  "requestType": ".koinos.rpc.mempool.get_pending_transactions_request",
                  "responseType": ".koinos.rpc.mempool.get_pending_transactions_response"
                },
                "check_pending_account_resources": {
                  "requestType": ".koinos.rpc.mempool.check_pending_account_resources_request",
                  "responseType": ".koinos.rpc.mempool.check_pending_account_resources_response"
                },
                "get_gossip_status": {
                  "requestType": ".koinos.rpc.p2p.get_gossip_status_request",
                  "responseType": ".koinos.rpc.p2p.get_gossip_status_response"
                },
                "get_transactions_by_id": {
                  "requestType": ".koinos.rpc.transaction_store.get_transactions_by_id_request",
                  "responseType": ".koinos.rpc.transaction_store.get_transactions_by_id_response"
                }
              }
            }
          }
        },
        "bytes_type": {
          "values": {
            "BASE64": 0,
            "BASE58": 1,
            "HEX": 2,
            "BLOCK_ID": 3,
            "TRANSACTION_ID": 4,
            "CONTRACT_ID": 5,
            "ADDRESS": 6
          }
        },
        "_btype": {
          "oneof": [
            "btype"
          ]
        },
        "btype": {
          "type": "bytes_type",
          "id": 50000,
          "extend": "google.protobuf.FieldOptions",
          "options": {
            "proto3_optional": true
          }
        }
      }
    },
    "google": {
      "nested": {
        "protobuf": {
          "options": {
            "go_package": "google.golang.org/protobuf/types/descriptorpb",
            "java_package": "com.google.protobuf",
            "java_outer_classname": "DescriptorProtos",
            "csharp_namespace": "Google.Protobuf.Reflection",
            "objc_class_prefix": "GPB",
            "cc_enable_arenas": true,
            "optimize_for": "SPEED"
          },
          "nested": {
            "Any": {
              "fields": {
                "type_url": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "type": "bytes",
                  "id": 2
                }
              }
            },
            "FileDescriptorSet": {
              "fields": {
                "file": {
                  "rule": "repeated",
                  "type": "FileDescriptorProto",
                  "id": 1
                }
              }
            },
            "FileDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "package": {
                  "type": "string",
                  "id": 2
                },
                "dependency": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 3
                },
                "public_dependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 10,
                  "options": {
                    "packed": false
                  }
                },
                "weak_dependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 11,
                  "options": {
                    "packed": false
                  }
                },
                "message_type": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 4
                },
                "enum_type": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 5
                },
                "service": {
                  "rule": "repeated",
                  "type": "ServiceDescriptorProto",
                  "id": 6
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 7
                },
                "options": {
                  "type": "FileOptions",
                  "id": 8
                },
                "source_code_info": {
                  "type": "SourceCodeInfo",
                  "id": 9
                },
                "syntax": {
                  "type": "string",
                  "id": 12
                }
              }
            },
            "DescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "field": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 2
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 6
                },
                "nested_type": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 3
                },
                "enum_type": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 4
                },
                "extension_range": {
                  "rule": "repeated",
                  "type": "ExtensionRange",
                  "id": 5
                },
                "oneof_decl": {
                  "rule": "repeated",
                  "type": "OneofDescriptorProto",
                  "id": 8
                },
                "options": {
                  "type": "MessageOptions",
                  "id": 7
                },
                "reserved_range": {
                  "rule": "repeated",
                  "type": "ReservedRange",
                  "id": 9
                },
                "reserved_name": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 10
                }
              },
              "nested": {
                "ExtensionRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                },
                "ReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "FieldDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 3
                },
                "label": {
                  "type": "Label",
                  "id": 4
                },
                "type": {
                  "type": "Type",
                  "id": 5
                },
                "type_name": {
                  "type": "string",
                  "id": 6
                },
                "extendee": {
                  "type": "string",
                  "id": 2
                },
                "default_value": {
                  "type": "string",
                  "id": 7
                },
                "oneof_index": {
                  "type": "int32",
                  "id": 9
                },
                "json_name": {
                  "type": "string",
                  "id": 10
                },
                "options": {
                  "type": "FieldOptions",
                  "id": 8
                }
              },
              "nested": {
                "Type": {
                  "values": {
                    "TYPE_DOUBLE": 1,
                    "TYPE_FLOAT": 2,
                    "TYPE_INT64": 3,
                    "TYPE_UINT64": 4,
                    "TYPE_INT32": 5,
                    "TYPE_FIXED64": 6,
                    "TYPE_FIXED32": 7,
                    "TYPE_BOOL": 8,
                    "TYPE_STRING": 9,
                    "TYPE_GROUP": 10,
                    "TYPE_MESSAGE": 11,
                    "TYPE_BYTES": 12,
                    "TYPE_UINT32": 13,
                    "TYPE_ENUM": 14,
                    "TYPE_SFIXED32": 15,
                    "TYPE_SFIXED64": 16,
                    "TYPE_SINT32": 17,
                    "TYPE_SINT64": 18
                  }
                },
                "Label": {
                  "values": {
                    "LABEL_OPTIONAL": 1,
                    "LABEL_REQUIRED": 2,
                    "LABEL_REPEATED": 3
                  }
                }
              }
            },
            "OneofDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "options": {
                  "type": "OneofOptions",
                  "id": 2
                }
              }
            },
            "EnumDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "rule": "repeated",
                  "type": "EnumValueDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "EnumOptions",
                  "id": 3
                }
              }
            },
            "EnumValueDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 2
                },
                "options": {
                  "type": "EnumValueOptions",
                  "id": 3
                }
              }
            },
            "ServiceDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "method": {
                  "rule": "repeated",
                  "type": "MethodDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "ServiceOptions",
                  "id": 3
                }
              }
            },
            "MethodDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "input_type": {
                  "type": "string",
                  "id": 2
                },
                "output_type": {
                  "type": "string",
                  "id": 3
                },
                "options": {
                  "type": "MethodOptions",
                  "id": 4
                },
                "client_streaming": {
                  "type": "bool",
                  "id": 5
                },
                "server_streaming": {
                  "type": "bool",
                  "id": 6
                }
              }
            },
            "FileOptions": {
              "fields": {
                "java_package": {
                  "type": "string",
                  "id": 1
                },
                "java_outer_classname": {
                  "type": "string",
                  "id": 8
                },
                "java_multiple_files": {
                  "type": "bool",
                  "id": 10
                },
                "java_generate_equals_and_hash": {
                  "type": "bool",
                  "id": 20,
                  "options": {
                    "deprecated": true
                  }
                },
                "java_string_check_utf8": {
                  "type": "bool",
                  "id": 27
                },
                "optimize_for": {
                  "type": "OptimizeMode",
                  "id": 9,
                  "options": {
                    "default": "SPEED"
                  }
                },
                "go_package": {
                  "type": "string",
                  "id": 11
                },
                "cc_generic_services": {
                  "type": "bool",
                  "id": 16
                },
                "java_generic_services": {
                  "type": "bool",
                  "id": 17
                },
                "py_generic_services": {
                  "type": "bool",
                  "id": 18
                },
                "deprecated": {
                  "type": "bool",
                  "id": 23
                },
                "cc_enable_arenas": {
                  "type": "bool",
                  "id": 31
                },
                "objc_class_prefix": {
                  "type": "string",
                  "id": 36
                },
                "csharp_namespace": {
                  "type": "string",
                  "id": 37
                },
                "uninterpreted_option": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  38,
                  38
                ]
              ],
              "nested": {
                "OptimizeMode": {
                  "values": {
                    "SPEED": 1,
                    "CODE_SIZE": 2,
                    "LITE_RUNTIME": 3
                  }
                }
              }
            },
            "MessageOptions": {
              "fields": {
                "message_set_wire_format": {
                  "type": "bool",
                  "id": 1
                },
                "no_standard_descriptor_accessor": {
                  "type": "bool",
                  "id": 2
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3
                },
                "map_entry": {
                  "type": "bool",
                  "id": 7
                },
                "uninterpreted_option": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  8,
                  8
                ]
              ]
            },
            "FieldOptions": {
              "fields": {
                "ctype": {
                  "type": "CType",
                  "id": 1,
                  "options": {
                    "default": "STRING"
                  }
                },
                "packed": {
                  "type": "bool",
                  "id": 2
                },
                "jstype": {
                  "type": "JSType",
                  "id": 6,
                  "options": {
                    "default": "JS_NORMAL"
                  }
                },
                "lazy": {
                  "type": "bool",
                  "id": 5
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3
                },
                "weak": {
                  "type": "bool",
                  "id": 10
                },
                "uninterpreted_option": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ]
              ],
              "nested": {
                "CType": {
                  "values": {
                    "STRING": 0,
                    "CORD": 1,
                    "STRING_PIECE": 2
                  }
                },
                "JSType": {
                  "values": {
                    "JS_NORMAL": 0,
                    "JS_STRING": 1,
                    "JS_NUMBER": 2
                  }
                }
              }
            },
            "OneofOptions": {
              "fields": {
                "uninterpreted_option": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "EnumOptions": {
              "fields": {
                "allow_alias": {
                  "type": "bool",
                  "id": 2
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3
                },
                "uninterpreted_option": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "EnumValueOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 1
                },
                "uninterpreted_option": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "ServiceOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33
                },
                "uninterpreted_option": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "MethodOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33
                },
                "uninterpreted_option": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "UninterpretedOption": {
              "fields": {
                "name": {
                  "rule": "repeated",
                  "type": "NamePart",
                  "id": 2
                },
                "identifier_value": {
                  "type": "string",
                  "id": 3
                },
                "positive_int_value": {
                  "type": "uint64",
                  "id": 4
                },
                "negative_int_value": {
                  "type": "int64",
                  "id": 5
                },
                "double_value": {
                  "type": "double",
                  "id": 6
                },
                "string_value": {
                  "type": "bytes",
                  "id": 7
                },
                "aggregate_value": {
                  "type": "string",
                  "id": 8
                }
              },
              "nested": {
                "NamePart": {
                  "fields": {
                    "name_part": {
                      "rule": "required",
                      "type": "string",
                      "id": 1
                    },
                    "is_extension": {
                      "rule": "required",
                      "type": "bool",
                      "id": 2
                    }
                  }
                }
              }
            },
            "SourceCodeInfo": {
              "fields": {
                "location": {
                  "rule": "repeated",
                  "type": "Location",
                  "id": 1
                }
              },
              "nested": {
                "Location": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "span": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 2
                    },
                    "leading_comments": {
                      "type": "string",
                      "id": 3
                    },
                    "trailing_comments": {
                      "type": "string",
                      "id": 4
                    },
                    "leading_detached_comments": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 6
                    }
                  }
                }
              }
            },
            "GeneratedCodeInfo": {
              "fields": {
                "annotation": {
                  "rule": "repeated",
                  "type": "Annotation",
                  "id": 1
                }
              },
              "nested": {
                "Annotation": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "source_file": {
                      "type": "string",
                      "id": 2
                    },
                    "begin": {
                      "type": "int32",
                      "id": 3
                    },
                    "end": {
                      "type": "int32",
                      "id": 4
                    }
                  }
                }
              }
            }
          }
        },
        "api": {
          "options": {
            "cc_enable_arenas": true,
            "go_package": "google.golang.org/genproto/googleapis/api/annotations;annotations",
            "java_multiple_files": true,
            "java_outer_classname": "AnnotationsProto",
            "java_package": "com.google.api",
            "objc_class_prefix": "GAPI"
          },
          "nested": {
            "HttpBody": {
              "fields": {
                "content_type": {
                  "type": "string",
                  "id": 1
                },
                "data": {
                  "type": "bytes",
                  "id": 2
                },
                "extensions": {
                  "rule": "repeated",
                  "type": "google.protobuf.Any",
                  "id": 3
                }
              }
            },
            "FieldBehavior": {
              "values": {
                "FIELD_BEHAVIOR_UNSPECIFIED": 0,
                "OPTIONAL": 1,
                "REQUIRED": 2,
                "OUTPUT_ONLY": 3,
                "INPUT_ONLY": 4,
                "IMMUTABLE": 5
              }
            },
            "field_behavior": {
              "rule": "repeated",
              "type": "FieldBehavior",
              "id": 1052,
              "extend": "google.protobuf.FieldOptions"
            },
            "default_host": {
              "type": "string",
              "id": 1049,
              "extend": "google.protobuf.ServiceOptions"
            },
            "oauth_scopes": {
              "type": "string",
              "id": 1050,
              "extend": "google.protobuf.ServiceOptions"
            },
            "method_signature": {
              "rule": "repeated",
              "type": "string",
              "id": 1051,
              "extend": "google.protobuf.MethodOptions"
            },
            "resource_reference": {
              "type": "google.api.ResourceReference",
              "id": 1055,
              "extend": "google.protobuf.FieldOptions"
            },
            "resource_definition": {
              "rule": "repeated",
              "type": "google.api.ResourceDescriptor",
              "id": 1053,
              "extend": "google.protobuf.FileOptions"
            },
            "resource": {
              "type": "google.api.ResourceDescriptor",
              "id": 1053,
              "extend": "google.protobuf.MessageOptions"
            },
            "ResourceDescriptor": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 1
                },
                "pattern": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 2
                },
                "name_field": {
                  "type": "string",
                  "id": 3
                },
                "history": {
                  "type": "History",
                  "id": 4
                },
                "plural": {
                  "type": "string",
                  "id": 5
                },
                "singular": {
                  "type": "string",
                  "id": 6
                },
                "style": {
                  "rule": "repeated",
                  "type": "Style",
                  "id": 10
                }
              },
              "nested": {
                "History": {
                  "values": {
                    "HISTORY_UNSPECIFIED": 0,
                    "ORIGINALLY_SINGLE_PATTERN": 1,
                    "FUTURE_MULTI_PATTERN": 2
                  }
                },
                "Style": {
                  "values": {
                    "STYLE_UNSPECIFIED": 0,
                    "DECLARATIVE_FRIENDLY": 1
                  }
                }
              }
            },
            "ResourceReference": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 1
                },
                "child_type": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "Http": {
              "fields": {
                "rules": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 1
                },
                "fully_decode_reserved_expansion": {
                  "type": "bool",
                  "id": 2
                }
              }
            },
            "HttpRule": {
              "oneofs": {
                "pattern": {
                  "oneof": [
                    "get",
                    "put",
                    "post",
                    "delete",
                    "patch",
                    "custom"
                  ]
                }
              },
              "fields": {
                "selector": {
                  "type": "string",
                  "id": 1
                },
                "get": {
                  "type": "string",
                  "id": 2
                },
                "put": {
                  "type": "string",
                  "id": 3
                },
                "post": {
                  "type": "string",
                  "id": 4
                },
                "delete": {
                  "type": "string",
                  "id": 5
                },
                "patch": {
                  "type": "string",
                  "id": 6
                },
                "custom": {
                  "type": "CustomHttpPattern",
                  "id": 8
                },
                "body": {
                  "type": "string",
                  "id": 7
                },
                "response_body": {
                  "type": "string",
                  "id": 12
                },
                "additional_bindings": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 11
                }
              }
            },
            "CustomHttpPattern": {
              "fields": {
                "kind": {
                  "type": "string",
                  "id": 1
                },
                "path": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "http": {
              "type": "HttpRule",
              "id": 72295728,
              "extend": "google.protobuf.MethodOptions"
            }
          }
        }
      }
    }
  }
}