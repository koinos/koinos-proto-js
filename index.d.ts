import * as $protobuf from "protobufjs";
/** Namespace koinos. */
export namespace koinos {

    /** Namespace koindx_tracker. */
    namespace koindx_tracker {

        /** Properties of a liquidity_record. */
        interface Iliquidity_record {

            /** liquidity_record address */
            address?: (Uint8Array|null);

            /** liquidity_record balance */
            balance?: (number|Long|null);

            /** liquidity_record prev_coin_ms_hi */
            prev_coin_ms_hi?: (number|Long|null);

            /** liquidity_record prev_coin_ms_lo */
            prev_coin_ms_lo?: (number|Long|null);

            /** liquidity_record last_update */
            last_update?: (number|Long|null);
        }

        /** Represents a liquidity_record. */
        class liquidity_record implements Iliquidity_record {

            /**
             * Constructs a new liquidity_record.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.koindx_tracker.Iliquidity_record);

            /** liquidity_record address. */
            public address: Uint8Array;

            /** liquidity_record balance. */
            public balance: (number|Long);

            /** liquidity_record prev_coin_ms_hi. */
            public prev_coin_ms_hi: (number|Long);

            /** liquidity_record prev_coin_ms_lo. */
            public prev_coin_ms_lo: (number|Long);

            /** liquidity_record last_update. */
            public last_update: (number|Long);

            /**
             * Creates a new liquidity_record instance using the specified properties.
             * @param [properties] Properties to set
             * @returns liquidity_record instance
             */
            public static create(properties?: koinos.koindx_tracker.Iliquidity_record): koinos.koindx_tracker.liquidity_record;

            /**
             * Encodes the specified liquidity_record message. Does not implicitly {@link koinos.koindx_tracker.liquidity_record.verify|verify} messages.
             * @param message liquidity_record message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.koindx_tracker.Iliquidity_record, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified liquidity_record message, length delimited. Does not implicitly {@link koinos.koindx_tracker.liquidity_record.verify|verify} messages.
             * @param message liquidity_record message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.koindx_tracker.Iliquidity_record, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a liquidity_record message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns liquidity_record
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.koindx_tracker.liquidity_record;

            /**
             * Decodes a liquidity_record message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns liquidity_record
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.koindx_tracker.liquidity_record;

            /**
             * Verifies a liquidity_record message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a liquidity_record message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns liquidity_record
             */
            public static fromObject(object: { [k: string]: any }): koinos.koindx_tracker.liquidity_record;

            /**
             * Creates a plain object from a liquidity_record message. Also converts values to other types if specified.
             * @param message liquidity_record
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.koindx_tracker.liquidity_record, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this liquidity_record to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a tvl_record. */
        interface Itvl_record {

            /** tvl_record value */
            value?: (number|Long|null);
        }

        /** Represents a tvl_record. */
        class tvl_record implements Itvl_record {

            /**
             * Constructs a new tvl_record.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.koindx_tracker.Itvl_record);

            /** tvl_record value. */
            public value: (number|Long);

            /**
             * Creates a new tvl_record instance using the specified properties.
             * @param [properties] Properties to set
             * @returns tvl_record instance
             */
            public static create(properties?: koinos.koindx_tracker.Itvl_record): koinos.koindx_tracker.tvl_record;

            /**
             * Encodes the specified tvl_record message. Does not implicitly {@link koinos.koindx_tracker.tvl_record.verify|verify} messages.
             * @param message tvl_record message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.koindx_tracker.Itvl_record, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified tvl_record message, length delimited. Does not implicitly {@link koinos.koindx_tracker.tvl_record.verify|verify} messages.
             * @param message tvl_record message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.koindx_tracker.Itvl_record, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a tvl_record message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns tvl_record
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.koindx_tracker.tvl_record;

            /**
             * Decodes a tvl_record message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns tvl_record
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.koindx_tracker.tvl_record;

            /**
             * Verifies a tvl_record message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a tvl_record message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns tvl_record
             */
            public static fromObject(object: { [k: string]: any }): koinos.koindx_tracker.tvl_record;

            /**
             * Creates a plain object from a tvl_record message. Also converts values to other types if specified.
             * @param message tvl_record
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.koindx_tracker.tvl_record, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this tvl_record to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an initialize_event. */
        interface Iinitialize_event {

            /** initialize_event token_a */
            token_a?: (string|null);

            /** initialize_event token_b */
            token_b?: (string|null);
        }

        /** Represents an initialize_event. */
        class initialize_event implements Iinitialize_event {

            /**
             * Constructs a new initialize_event.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.koindx_tracker.Iinitialize_event);

            /** initialize_event token_a. */
            public token_a: string;

            /** initialize_event token_b. */
            public token_b: string;

            /**
             * Creates a new initialize_event instance using the specified properties.
             * @param [properties] Properties to set
             * @returns initialize_event instance
             */
            public static create(properties?: koinos.koindx_tracker.Iinitialize_event): koinos.koindx_tracker.initialize_event;

            /**
             * Encodes the specified initialize_event message. Does not implicitly {@link koinos.koindx_tracker.initialize_event.verify|verify} messages.
             * @param message initialize_event message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.koindx_tracker.Iinitialize_event, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified initialize_event message, length delimited. Does not implicitly {@link koinos.koindx_tracker.initialize_event.verify|verify} messages.
             * @param message initialize_event message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.koindx_tracker.Iinitialize_event, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an initialize_event message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns initialize_event
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.koindx_tracker.initialize_event;

            /**
             * Decodes an initialize_event message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns initialize_event
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.koindx_tracker.initialize_event;

            /**
             * Verifies an initialize_event message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an initialize_event message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns initialize_event
             */
            public static fromObject(object: { [k: string]: any }): koinos.koindx_tracker.initialize_event;

            /**
             * Creates a plain object from an initialize_event message. Also converts values to other types if specified.
             * @param message initialize_event
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.koindx_tracker.initialize_event, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this initialize_event to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a sync_event. */
        interface Isync_event {

            /** sync_event reserve_a */
            reserve_a?: (number|Long|null);

            /** sync_event reserve_b */
            reserve_b?: (number|Long|null);
        }

        /** Represents a sync_event. */
        class sync_event implements Isync_event {

            /**
             * Constructs a new sync_event.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.koindx_tracker.Isync_event);

            /** sync_event reserve_a. */
            public reserve_a: (number|Long);

            /** sync_event reserve_b. */
            public reserve_b: (number|Long);

            /**
             * Creates a new sync_event instance using the specified properties.
             * @param [properties] Properties to set
             * @returns sync_event instance
             */
            public static create(properties?: koinos.koindx_tracker.Isync_event): koinos.koindx_tracker.sync_event;

            /**
             * Encodes the specified sync_event message. Does not implicitly {@link koinos.koindx_tracker.sync_event.verify|verify} messages.
             * @param message sync_event message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.koindx_tracker.Isync_event, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified sync_event message, length delimited. Does not implicitly {@link koinos.koindx_tracker.sync_event.verify|verify} messages.
             * @param message sync_event message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.koindx_tracker.Isync_event, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a sync_event message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns sync_event
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.koindx_tracker.sync_event;

            /**
             * Decodes a sync_event message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns sync_event
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.koindx_tracker.sync_event;

            /**
             * Verifies a sync_event message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a sync_event message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns sync_event
             */
            public static fromObject(object: { [k: string]: any }): koinos.koindx_tracker.sync_event;

            /**
             * Creates a plain object from a sync_event message. Also converts values to other types if specified.
             * @param message sync_event
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.koindx_tracker.sync_event, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this sync_event to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Namespace chain. */
    namespace chain {

        /** Properties of a set_system_call_event. */
        interface Iset_system_call_event {

            /** set_system_call_event call_id */
            call_id?: (number|null);

            /** set_system_call_event target */
            target?: (koinos.protocol.Isystem_call_target|null);
        }

        /** Represents a set_system_call_event. */
        class set_system_call_event implements Iset_system_call_event {

            /**
             * Constructs a new set_system_call_event.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iset_system_call_event);

            /** set_system_call_event call_id. */
            public call_id: number;

            /** set_system_call_event target. */
            public target?: (koinos.protocol.Isystem_call_target|null);

            /**
             * Creates a new set_system_call_event instance using the specified properties.
             * @param [properties] Properties to set
             * @returns set_system_call_event instance
             */
            public static create(properties?: koinos.chain.Iset_system_call_event): koinos.chain.set_system_call_event;

            /**
             * Encodes the specified set_system_call_event message. Does not implicitly {@link koinos.chain.set_system_call_event.verify|verify} messages.
             * @param message set_system_call_event message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iset_system_call_event, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified set_system_call_event message, length delimited. Does not implicitly {@link koinos.chain.set_system_call_event.verify|verify} messages.
             * @param message set_system_call_event message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iset_system_call_event, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a set_system_call_event message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns set_system_call_event
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.set_system_call_event;

            /**
             * Decodes a set_system_call_event message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns set_system_call_event
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.set_system_call_event;

            /**
             * Verifies a set_system_call_event message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a set_system_call_event message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns set_system_call_event
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.set_system_call_event;

            /**
             * Creates a plain object from a set_system_call_event message. Also converts values to other types if specified.
             * @param message set_system_call_event
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.set_system_call_event, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this set_system_call_event to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a set_system_contract_event. */
        interface Iset_system_contract_event {

            /** set_system_contract_event contract_id */
            contract_id?: (Uint8Array|null);

            /** set_system_contract_event system_contract */
            system_contract?: (boolean|null);
        }

        /** Represents a set_system_contract_event. */
        class set_system_contract_event implements Iset_system_contract_event {

            /**
             * Constructs a new set_system_contract_event.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iset_system_contract_event);

            /** set_system_contract_event contract_id. */
            public contract_id: Uint8Array;

            /** set_system_contract_event system_contract. */
            public system_contract: boolean;

            /**
             * Creates a new set_system_contract_event instance using the specified properties.
             * @param [properties] Properties to set
             * @returns set_system_contract_event instance
             */
            public static create(properties?: koinos.chain.Iset_system_contract_event): koinos.chain.set_system_contract_event;

            /**
             * Encodes the specified set_system_contract_event message. Does not implicitly {@link koinos.chain.set_system_contract_event.verify|verify} messages.
             * @param message set_system_contract_event message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iset_system_contract_event, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified set_system_contract_event message, length delimited. Does not implicitly {@link koinos.chain.set_system_contract_event.verify|verify} messages.
             * @param message set_system_contract_event message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iset_system_contract_event, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a set_system_contract_event message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns set_system_contract_event
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.set_system_contract_event;

            /**
             * Decodes a set_system_contract_event message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns set_system_contract_event
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.set_system_contract_event;

            /**
             * Verifies a set_system_contract_event message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a set_system_contract_event message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns set_system_contract_event
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.set_system_contract_event;

            /**
             * Creates a plain object from a set_system_contract_event message. Also converts values to other types if specified.
             * @param message set_system_contract_event
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.set_system_contract_event, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this set_system_contract_event to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a value_type. */
        interface Ivalue_type {

            /** value_type message_value */
            message_value?: (google.protobuf.IAny|null);

            /** value_type int32_value */
            int32_value?: (number|null);

            /** value_type int64_value */
            int64_value?: (number|Long|null);

            /** value_type uint32_value */
            uint32_value?: (number|null);

            /** value_type uint64_value */
            uint64_value?: (number|Long|null);

            /** value_type sint32_value */
            sint32_value?: (number|null);

            /** value_type sint64_value */
            sint64_value?: (number|Long|null);

            /** value_type fixed32_value */
            fixed32_value?: (number|null);

            /** value_type fixed64_value */
            fixed64_value?: (number|Long|null);

            /** value_type sfixed32_value */
            sfixed32_value?: (number|null);

            /** value_type sfixed64_value */
            sfixed64_value?: (number|Long|null);

            /** value_type bool_value */
            bool_value?: (boolean|null);

            /** value_type string_value */
            string_value?: (string|null);

            /** value_type bytes_value */
            bytes_value?: (Uint8Array|null);
        }

        /** Represents a value_type. */
        class value_type implements Ivalue_type {

            /**
             * Constructs a new value_type.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Ivalue_type);

            /** value_type message_value. */
            public message_value?: (google.protobuf.IAny|null);

            /** value_type int32_value. */
            public int32_value?: (number|null);

            /** value_type int64_value. */
            public int64_value?: (number|Long|null);

            /** value_type uint32_value. */
            public uint32_value?: (number|null);

            /** value_type uint64_value. */
            public uint64_value?: (number|Long|null);

            /** value_type sint32_value. */
            public sint32_value?: (number|null);

            /** value_type sint64_value. */
            public sint64_value?: (number|Long|null);

            /** value_type fixed32_value. */
            public fixed32_value?: (number|null);

            /** value_type fixed64_value. */
            public fixed64_value?: (number|Long|null);

            /** value_type sfixed32_value. */
            public sfixed32_value?: (number|null);

            /** value_type sfixed64_value. */
            public sfixed64_value?: (number|Long|null);

            /** value_type bool_value. */
            public bool_value?: (boolean|null);

            /** value_type string_value. */
            public string_value?: (string|null);

            /** value_type bytes_value. */
            public bytes_value?: (Uint8Array|null);

            /** value_type kind. */
            public kind?: ("message_value"|"int32_value"|"int64_value"|"uint32_value"|"uint64_value"|"sint32_value"|"sint64_value"|"fixed32_value"|"fixed64_value"|"sfixed32_value"|"sfixed64_value"|"bool_value"|"string_value"|"bytes_value");

            /**
             * Creates a new value_type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns value_type instance
             */
            public static create(properties?: koinos.chain.Ivalue_type): koinos.chain.value_type;

            /**
             * Encodes the specified value_type message. Does not implicitly {@link koinos.chain.value_type.verify|verify} messages.
             * @param message value_type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Ivalue_type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified value_type message, length delimited. Does not implicitly {@link koinos.chain.value_type.verify|verify} messages.
             * @param message value_type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Ivalue_type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a value_type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns value_type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.value_type;

            /**
             * Decodes a value_type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns value_type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.value_type;

            /**
             * Verifies a value_type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a value_type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns value_type
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.value_type;

            /**
             * Creates a plain object from a value_type message. Also converts values to other types if specified.
             * @param message value_type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.value_type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this value_type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an enum_type. */
        interface Ienum_type {

            /** enum_type name */
            name?: (string|null);

            /** enum_type number */
            number?: (number|null);
        }

        /** Represents an enum_type. */
        class enum_type implements Ienum_type {

            /**
             * Constructs a new enum_type.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Ienum_type);

            /** enum_type name. */
            public name: string;

            /** enum_type number. */
            public number: number;

            /**
             * Creates a new enum_type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns enum_type instance
             */
            public static create(properties?: koinos.chain.Ienum_type): koinos.chain.enum_type;

            /**
             * Encodes the specified enum_type message. Does not implicitly {@link koinos.chain.enum_type.verify|verify} messages.
             * @param message enum_type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Ienum_type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified enum_type message, length delimited. Does not implicitly {@link koinos.chain.enum_type.verify|verify} messages.
             * @param message enum_type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Ienum_type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an enum_type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns enum_type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.enum_type;

            /**
             * Decodes an enum_type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns enum_type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.enum_type;

            /**
             * Verifies an enum_type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an enum_type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns enum_type
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.enum_type;

            /**
             * Creates a plain object from an enum_type message. Also converts values to other types if specified.
             * @param message enum_type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.enum_type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this enum_type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a list_type. */
        interface Ilist_type {

            /** list_type values */
            values?: (koinos.chain.Ivalue_type[]|null);
        }

        /** Represents a list_type. */
        class list_type implements Ilist_type {

            /**
             * Constructs a new list_type.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Ilist_type);

            /** list_type values. */
            public values: koinos.chain.Ivalue_type[];

            /**
             * Creates a new list_type instance using the specified properties.
             * @param [properties] Properties to set
             * @returns list_type instance
             */
            public static create(properties?: koinos.chain.Ilist_type): koinos.chain.list_type;

            /**
             * Encodes the specified list_type message. Does not implicitly {@link koinos.chain.list_type.verify|verify} messages.
             * @param message list_type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Ilist_type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified list_type message, length delimited. Does not implicitly {@link koinos.chain.list_type.verify|verify} messages.
             * @param message list_type message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Ilist_type, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a list_type message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns list_type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.list_type;

            /**
             * Decodes a list_type message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns list_type
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.list_type;

            /**
             * Verifies a list_type message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a list_type message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns list_type
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.list_type;

            /**
             * Creates a plain object from a list_type message. Also converts values to other types if specified.
             * @param message list_type
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.list_type, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this list_type to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** system_call_id enum. */
        enum system_call_id {
            nop = 0,
            get_head_info = 1,
            apply_block = 2,
            apply_transaction = 3,
            apply_upload_contract_operation = 4,
            apply_call_contract_operation = 5,
            apply_set_system_call_operation = 6,
            apply_set_system_contract_operation = 7,
            pre_block_callback = 8,
            post_block_callback = 9,
            pre_transaction_callback = 10,
            post_transaction_callback = 11,
            get_chain_id = 12,
            process_block_signature = 101,
            get_transaction = 102,
            get_transaction_field = 103,
            get_block = 104,
            get_block_field = 105,
            get_last_irreversible_block = 106,
            get_account_nonce = 107,
            verify_account_nonce = 108,
            set_account_nonce = 109,
            check_system_authority = 110,
            get_operation = 111,
            get_contract_metadata = 112,
            get_account_rc = 201,
            consume_account_rc = 202,
            get_resource_limits = 203,
            consume_block_resources = 204,
            put_object = 301,
            remove_object = 302,
            get_object = 303,
            get_next_object = 304,
            get_prev_object = 305,
            log = 401,
            event = 402,
            hash = 501,
            recover_public_key = 502,
            verify_merkle_root = 503,
            verify_signature = 504,
            verify_vrf_proof = 505,
            call = 601,
            exit = 602,
            get_arguments = 603,
            get_contract_id = 604,
            get_caller = 605,
            check_authority = 606,
            get_contract_name = 10000,
            get_contract_address = 10001
        }

        /** authorization_type enum. */
        enum authorization_type {
            contract_call = 0,
            transaction_application = 1,
            contract_upload = 2
        }

        /** Properties of a call_data. */
        interface Icall_data {

            /** call_data contract_id */
            contract_id?: (Uint8Array|null);

            /** call_data entry_point */
            entry_point?: (number|null);

            /** call_data caller */
            caller?: (Uint8Array|null);

            /** call_data data */
            data?: (Uint8Array|null);
        }

        /** Represents a call_data. */
        class call_data implements Icall_data {

            /**
             * Constructs a new call_data.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Icall_data);

            /** call_data contract_id. */
            public contract_id: Uint8Array;

            /** call_data entry_point. */
            public entry_point: number;

            /** call_data caller. */
            public caller: Uint8Array;

            /** call_data data. */
            public data: Uint8Array;

            /**
             * Creates a new call_data instance using the specified properties.
             * @param [properties] Properties to set
             * @returns call_data instance
             */
            public static create(properties?: koinos.chain.Icall_data): koinos.chain.call_data;

            /**
             * Encodes the specified call_data message. Does not implicitly {@link koinos.chain.call_data.verify|verify} messages.
             * @param message call_data message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Icall_data, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified call_data message, length delimited. Does not implicitly {@link koinos.chain.call_data.verify|verify} messages.
             * @param message call_data message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Icall_data, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a call_data message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns call_data
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.call_data;

            /**
             * Decodes a call_data message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns call_data
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.call_data;

            /**
             * Verifies a call_data message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a call_data message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns call_data
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.call_data;

            /**
             * Creates a plain object from a call_data message. Also converts values to other types if specified.
             * @param message call_data
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.call_data, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this call_data to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an authorize_arguments. */
        interface Iauthorize_arguments {

            /** authorize_arguments type */
            type?: (koinos.chain.authorization_type|null);

            /** authorize_arguments call */
            call?: (koinos.chain.Icall_data|null);
        }

        /** Represents an authorize_arguments. */
        class authorize_arguments implements Iauthorize_arguments {

            /**
             * Constructs a new authorize_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iauthorize_arguments);

            /** authorize_arguments type. */
            public type: koinos.chain.authorization_type;

            /** authorize_arguments call. */
            public call?: (koinos.chain.Icall_data|null);

            /** authorize_arguments _call. */
            public _call?: "call";

            /**
             * Creates a new authorize_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns authorize_arguments instance
             */
            public static create(properties?: koinos.chain.Iauthorize_arguments): koinos.chain.authorize_arguments;

            /**
             * Encodes the specified authorize_arguments message. Does not implicitly {@link koinos.chain.authorize_arguments.verify|verify} messages.
             * @param message authorize_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iauthorize_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified authorize_arguments message, length delimited. Does not implicitly {@link koinos.chain.authorize_arguments.verify|verify} messages.
             * @param message authorize_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iauthorize_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an authorize_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns authorize_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.authorize_arguments;

            /**
             * Decodes an authorize_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns authorize_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.authorize_arguments;

            /**
             * Verifies an authorize_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an authorize_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns authorize_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.authorize_arguments;

            /**
             * Creates a plain object from an authorize_arguments message. Also converts values to other types if specified.
             * @param message authorize_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.authorize_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this authorize_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an authorize_result. */
        interface Iauthorize_result {

            /** authorize_result value */
            value?: (boolean|null);
        }

        /** Represents an authorize_result. */
        class authorize_result implements Iauthorize_result {

            /**
             * Constructs a new authorize_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iauthorize_result);

            /** authorize_result value. */
            public value: boolean;

            /**
             * Creates a new authorize_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns authorize_result instance
             */
            public static create(properties?: koinos.chain.Iauthorize_result): koinos.chain.authorize_result;

            /**
             * Encodes the specified authorize_result message. Does not implicitly {@link koinos.chain.authorize_result.verify|verify} messages.
             * @param message authorize_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iauthorize_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified authorize_result message, length delimited. Does not implicitly {@link koinos.chain.authorize_result.verify|verify} messages.
             * @param message authorize_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iauthorize_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an authorize_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns authorize_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.authorize_result;

            /**
             * Decodes an authorize_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns authorize_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.authorize_result;

            /**
             * Verifies an authorize_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an authorize_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns authorize_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.authorize_result;

            /**
             * Creates a plain object from an authorize_result message. Also converts values to other types if specified.
             * @param message authorize_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.authorize_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this authorize_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an error_data. */
        interface Ierror_data {

            /** error_data message */
            message?: (string|null);
        }

        /** Represents an error_data. */
        class error_data implements Ierror_data {

            /**
             * Constructs a new error_data.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Ierror_data);

            /** error_data message. */
            public message: string;

            /**
             * Creates a new error_data instance using the specified properties.
             * @param [properties] Properties to set
             * @returns error_data instance
             */
            public static create(properties?: koinos.chain.Ierror_data): koinos.chain.error_data;

            /**
             * Encodes the specified error_data message. Does not implicitly {@link koinos.chain.error_data.verify|verify} messages.
             * @param message error_data message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Ierror_data, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified error_data message, length delimited. Does not implicitly {@link koinos.chain.error_data.verify|verify} messages.
             * @param message error_data message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Ierror_data, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an error_data message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns error_data
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.error_data;

            /**
             * Decodes an error_data message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns error_data
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.error_data;

            /**
             * Verifies an error_data message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an error_data message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns error_data
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.error_data;

            /**
             * Creates a plain object from an error_data message. Also converts values to other types if specified.
             * @param message error_data
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.error_data, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this error_data to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a result. */
        interface Iresult {

            /** result object */
            object?: (Uint8Array|null);

            /** result error */
            error?: (koinos.chain.Ierror_data|null);
        }

        /** Represents a result. */
        class result implements Iresult {

            /**
             * Constructs a new result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iresult);

            /** result object. */
            public object?: (Uint8Array|null);

            /** result error. */
            public error?: (koinos.chain.Ierror_data|null);

            /** result value. */
            public value?: ("object"|"error");

            /**
             * Creates a new result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns result instance
             */
            public static create(properties?: koinos.chain.Iresult): koinos.chain.result;

            /**
             * Encodes the specified result message. Does not implicitly {@link koinos.chain.result.verify|verify} messages.
             * @param message result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iresult, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified result message, length delimited. Does not implicitly {@link koinos.chain.result.verify|verify} messages.
             * @param message result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iresult, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.result;

            /**
             * Decodes a result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.result;

            /**
             * Verifies a result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.result;

            /**
             * Creates a plain object from a result message. Also converts values to other types if specified.
             * @param message result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an object_space. */
        interface Iobject_space {

            /** object_space system */
            system?: (boolean|null);

            /** object_space zone */
            zone?: (Uint8Array|null);

            /** object_space id */
            id?: (number|null);
        }

        /** Represents an object_space. */
        class object_space implements Iobject_space {

            /**
             * Constructs a new object_space.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iobject_space);

            /** object_space system. */
            public system: boolean;

            /** object_space zone. */
            public zone: Uint8Array;

            /** object_space id. */
            public id: number;

            /**
             * Creates a new object_space instance using the specified properties.
             * @param [properties] Properties to set
             * @returns object_space instance
             */
            public static create(properties?: koinos.chain.Iobject_space): koinos.chain.object_space;

            /**
             * Encodes the specified object_space message. Does not implicitly {@link koinos.chain.object_space.verify|verify} messages.
             * @param message object_space message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iobject_space, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified object_space message, length delimited. Does not implicitly {@link koinos.chain.object_space.verify|verify} messages.
             * @param message object_space message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iobject_space, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an object_space message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns object_space
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.object_space;

            /**
             * Decodes an object_space message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns object_space
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.object_space;

            /**
             * Verifies an object_space message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an object_space message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns object_space
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.object_space;

            /**
             * Creates a plain object from an object_space message. Also converts values to other types if specified.
             * @param message object_space
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.object_space, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this object_space to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a database_key. */
        interface Idatabase_key {

            /** database_key space */
            space?: (koinos.chain.Iobject_space|null);

            /** database_key key */
            key?: (Uint8Array|null);
        }

        /** Represents a database_key. */
        class database_key implements Idatabase_key {

            /**
             * Constructs a new database_key.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Idatabase_key);

            /** database_key space. */
            public space?: (koinos.chain.Iobject_space|null);

            /** database_key key. */
            public key: Uint8Array;

            /**
             * Creates a new database_key instance using the specified properties.
             * @param [properties] Properties to set
             * @returns database_key instance
             */
            public static create(properties?: koinos.chain.Idatabase_key): koinos.chain.database_key;

            /**
             * Encodes the specified database_key message. Does not implicitly {@link koinos.chain.database_key.verify|verify} messages.
             * @param message database_key message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Idatabase_key, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified database_key message, length delimited. Does not implicitly {@link koinos.chain.database_key.verify|verify} messages.
             * @param message database_key message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Idatabase_key, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a database_key message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns database_key
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.database_key;

            /**
             * Decodes a database_key message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns database_key
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.database_key;

            /**
             * Verifies a database_key message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a database_key message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns database_key
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.database_key;

            /**
             * Creates a plain object from a database_key message. Also converts values to other types if specified.
             * @param message database_key
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.database_key, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this database_key to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a max_account_resources. */
        interface Imax_account_resources {

            /** max_account_resources value */
            value?: (number|Long|null);
        }

        /** Represents a max_account_resources. */
        class max_account_resources implements Imax_account_resources {

            /**
             * Constructs a new max_account_resources.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Imax_account_resources);

            /** max_account_resources value. */
            public value: (number|Long);

            /**
             * Creates a new max_account_resources instance using the specified properties.
             * @param [properties] Properties to set
             * @returns max_account_resources instance
             */
            public static create(properties?: koinos.chain.Imax_account_resources): koinos.chain.max_account_resources;

            /**
             * Encodes the specified max_account_resources message. Does not implicitly {@link koinos.chain.max_account_resources.verify|verify} messages.
             * @param message max_account_resources message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Imax_account_resources, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified max_account_resources message, length delimited. Does not implicitly {@link koinos.chain.max_account_resources.verify|verify} messages.
             * @param message max_account_resources message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Imax_account_resources, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a max_account_resources message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns max_account_resources
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.max_account_resources;

            /**
             * Decodes a max_account_resources message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns max_account_resources
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.max_account_resources;

            /**
             * Verifies a max_account_resources message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a max_account_resources message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns max_account_resources
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.max_account_resources;

            /**
             * Creates a plain object from a max_account_resources message. Also converts values to other types if specified.
             * @param message max_account_resources
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.max_account_resources, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this max_account_resources to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** privilege enum. */
        enum privilege {
            kernel_mode = 0,
            user_mode = 1
        }

        /** Properties of a head_info. */
        interface Ihead_info {

            /** head_info head_topology */
            head_topology?: (koinos.Iblock_topology|null);

            /** head_info head_block_time */
            head_block_time?: (number|Long|null);

            /** head_info last_irreversible_block */
            last_irreversible_block?: (number|Long|null);
        }

        /** Represents a head_info. */
        class head_info implements Ihead_info {

            /**
             * Constructs a new head_info.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Ihead_info);

            /** head_info head_topology. */
            public head_topology?: (koinos.Iblock_topology|null);

            /** head_info head_block_time. */
            public head_block_time: (number|Long);

            /** head_info last_irreversible_block. */
            public last_irreversible_block: (number|Long);

            /**
             * Creates a new head_info instance using the specified properties.
             * @param [properties] Properties to set
             * @returns head_info instance
             */
            public static create(properties?: koinos.chain.Ihead_info): koinos.chain.head_info;

            /**
             * Encodes the specified head_info message. Does not implicitly {@link koinos.chain.head_info.verify|verify} messages.
             * @param message head_info message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Ihead_info, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified head_info message, length delimited. Does not implicitly {@link koinos.chain.head_info.verify|verify} messages.
             * @param message head_info message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Ihead_info, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a head_info message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns head_info
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.head_info;

            /**
             * Decodes a head_info message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns head_info
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.head_info;

            /**
             * Verifies a head_info message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a head_info message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns head_info
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.head_info;

            /**
             * Creates a plain object from a head_info message. Also converts values to other types if specified.
             * @param message head_info
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.head_info, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this head_info to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a caller_data. */
        interface Icaller_data {

            /** caller_data caller */
            caller?: (Uint8Array|null);

            /** caller_data caller_privilege */
            caller_privilege?: (koinos.chain.privilege|null);
        }

        /** Represents a caller_data. */
        class caller_data implements Icaller_data {

            /**
             * Constructs a new caller_data.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Icaller_data);

            /** caller_data caller. */
            public caller: Uint8Array;

            /** caller_data caller_privilege. */
            public caller_privilege: koinos.chain.privilege;

            /**
             * Creates a new caller_data instance using the specified properties.
             * @param [properties] Properties to set
             * @returns caller_data instance
             */
            public static create(properties?: koinos.chain.Icaller_data): koinos.chain.caller_data;

            /**
             * Encodes the specified caller_data message. Does not implicitly {@link koinos.chain.caller_data.verify|verify} messages.
             * @param message caller_data message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Icaller_data, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified caller_data message, length delimited. Does not implicitly {@link koinos.chain.caller_data.verify|verify} messages.
             * @param message caller_data message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Icaller_data, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a caller_data message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns caller_data
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.caller_data;

            /**
             * Decodes a caller_data message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns caller_data
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.caller_data;

            /**
             * Verifies a caller_data message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a caller_data message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns caller_data
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.caller_data;

            /**
             * Creates a plain object from a caller_data message. Also converts values to other types if specified.
             * @param message caller_data
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.caller_data, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this caller_data to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an argument_data. */
        interface Iargument_data {

            /** argument_data entry_point */
            entry_point?: (number|null);

            /** argument_data arguments */
            "arguments"?: (Uint8Array|null);
        }

        /** Represents an argument_data. */
        class argument_data implements Iargument_data {

            /**
             * Constructs a new argument_data.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iargument_data);

            /** argument_data entry_point. */
            public entry_point: number;

            /** argument_data arguments. */
            public arguments: Uint8Array;

            /**
             * Creates a new argument_data instance using the specified properties.
             * @param [properties] Properties to set
             * @returns argument_data instance
             */
            public static create(properties?: koinos.chain.Iargument_data): koinos.chain.argument_data;

            /**
             * Encodes the specified argument_data message. Does not implicitly {@link koinos.chain.argument_data.verify|verify} messages.
             * @param message argument_data message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iargument_data, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified argument_data message, length delimited. Does not implicitly {@link koinos.chain.argument_data.verify|verify} messages.
             * @param message argument_data message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iargument_data, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an argument_data message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns argument_data
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.argument_data;

            /**
             * Decodes an argument_data message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns argument_data
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.argument_data;

            /**
             * Verifies an argument_data message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an argument_data message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns argument_data
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.argument_data;

            /**
             * Creates a plain object from an argument_data message. Also converts values to other types if specified.
             * @param message argument_data
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.argument_data, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this argument_data to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a resource_limit_data. */
        interface Iresource_limit_data {

            /** resource_limit_data disk_storage_limit */
            disk_storage_limit?: (number|Long|null);

            /** resource_limit_data disk_storage_cost */
            disk_storage_cost?: (number|Long|null);

            /** resource_limit_data network_bandwidth_limit */
            network_bandwidth_limit?: (number|Long|null);

            /** resource_limit_data network_bandwidth_cost */
            network_bandwidth_cost?: (number|Long|null);

            /** resource_limit_data compute_bandwidth_limit */
            compute_bandwidth_limit?: (number|Long|null);

            /** resource_limit_data compute_bandwidth_cost */
            compute_bandwidth_cost?: (number|Long|null);
        }

        /** Represents a resource_limit_data. */
        class resource_limit_data implements Iresource_limit_data {

            /**
             * Constructs a new resource_limit_data.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iresource_limit_data);

            /** resource_limit_data disk_storage_limit. */
            public disk_storage_limit: (number|Long);

            /** resource_limit_data disk_storage_cost. */
            public disk_storage_cost: (number|Long);

            /** resource_limit_data network_bandwidth_limit. */
            public network_bandwidth_limit: (number|Long);

            /** resource_limit_data network_bandwidth_cost. */
            public network_bandwidth_cost: (number|Long);

            /** resource_limit_data compute_bandwidth_limit. */
            public compute_bandwidth_limit: (number|Long);

            /** resource_limit_data compute_bandwidth_cost. */
            public compute_bandwidth_cost: (number|Long);

            /**
             * Creates a new resource_limit_data instance using the specified properties.
             * @param [properties] Properties to set
             * @returns resource_limit_data instance
             */
            public static create(properties?: koinos.chain.Iresource_limit_data): koinos.chain.resource_limit_data;

            /**
             * Encodes the specified resource_limit_data message. Does not implicitly {@link koinos.chain.resource_limit_data.verify|verify} messages.
             * @param message resource_limit_data message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iresource_limit_data, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified resource_limit_data message, length delimited. Does not implicitly {@link koinos.chain.resource_limit_data.verify|verify} messages.
             * @param message resource_limit_data message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iresource_limit_data, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a resource_limit_data message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns resource_limit_data
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.resource_limit_data;

            /**
             * Decodes a resource_limit_data message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns resource_limit_data
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.resource_limit_data;

            /**
             * Verifies a resource_limit_data message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a resource_limit_data message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns resource_limit_data
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.resource_limit_data;

            /**
             * Creates a plain object from a resource_limit_data message. Also converts values to other types if specified.
             * @param message resource_limit_data
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.resource_limit_data, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this resource_limit_data to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a contract_metadata_object. */
        interface Icontract_metadata_object {

            /** contract_metadata_object hash */
            hash?: (Uint8Array|null);

            /** contract_metadata_object system */
            system?: (boolean|null);

            /** contract_metadata_object authorizes_call_contract */
            authorizes_call_contract?: (boolean|null);

            /** contract_metadata_object authorizes_transaction_application */
            authorizes_transaction_application?: (boolean|null);

            /** contract_metadata_object authorizes_upload_contract */
            authorizes_upload_contract?: (boolean|null);
        }

        /** Represents a contract_metadata_object. */
        class contract_metadata_object implements Icontract_metadata_object {

            /**
             * Constructs a new contract_metadata_object.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Icontract_metadata_object);

            /** contract_metadata_object hash. */
            public hash: Uint8Array;

            /** contract_metadata_object system. */
            public system: boolean;

            /** contract_metadata_object authorizes_call_contract. */
            public authorizes_call_contract: boolean;

            /** contract_metadata_object authorizes_transaction_application. */
            public authorizes_transaction_application: boolean;

            /** contract_metadata_object authorizes_upload_contract. */
            public authorizes_upload_contract: boolean;

            /**
             * Creates a new contract_metadata_object instance using the specified properties.
             * @param [properties] Properties to set
             * @returns contract_metadata_object instance
             */
            public static create(properties?: koinos.chain.Icontract_metadata_object): koinos.chain.contract_metadata_object;

            /**
             * Encodes the specified contract_metadata_object message. Does not implicitly {@link koinos.chain.contract_metadata_object.verify|verify} messages.
             * @param message contract_metadata_object message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Icontract_metadata_object, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified contract_metadata_object message, length delimited. Does not implicitly {@link koinos.chain.contract_metadata_object.verify|verify} messages.
             * @param message contract_metadata_object message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Icontract_metadata_object, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a contract_metadata_object message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns contract_metadata_object
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.contract_metadata_object;

            /**
             * Decodes a contract_metadata_object message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns contract_metadata_object
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.contract_metadata_object;

            /**
             * Verifies a contract_metadata_object message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a contract_metadata_object message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns contract_metadata_object
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.contract_metadata_object;

            /**
             * Creates a plain object from a contract_metadata_object message. Also converts values to other types if specified.
             * @param message contract_metadata_object
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.contract_metadata_object, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this contract_metadata_object to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a compute_bandwidth_entry. */
        interface Icompute_bandwidth_entry {

            /** compute_bandwidth_entry name */
            name?: (string|null);

            /** compute_bandwidth_entry compute */
            compute?: (number|Long|null);
        }

        /** Represents a compute_bandwidth_entry. */
        class compute_bandwidth_entry implements Icompute_bandwidth_entry {

            /**
             * Constructs a new compute_bandwidth_entry.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Icompute_bandwidth_entry);

            /** compute_bandwidth_entry name. */
            public name: string;

            /** compute_bandwidth_entry compute. */
            public compute: (number|Long);

            /**
             * Creates a new compute_bandwidth_entry instance using the specified properties.
             * @param [properties] Properties to set
             * @returns compute_bandwidth_entry instance
             */
            public static create(properties?: koinos.chain.Icompute_bandwidth_entry): koinos.chain.compute_bandwidth_entry;

            /**
             * Encodes the specified compute_bandwidth_entry message. Does not implicitly {@link koinos.chain.compute_bandwidth_entry.verify|verify} messages.
             * @param message compute_bandwidth_entry message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Icompute_bandwidth_entry, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified compute_bandwidth_entry message, length delimited. Does not implicitly {@link koinos.chain.compute_bandwidth_entry.verify|verify} messages.
             * @param message compute_bandwidth_entry message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Icompute_bandwidth_entry, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a compute_bandwidth_entry message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns compute_bandwidth_entry
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.compute_bandwidth_entry;

            /**
             * Decodes a compute_bandwidth_entry message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns compute_bandwidth_entry
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.compute_bandwidth_entry;

            /**
             * Verifies a compute_bandwidth_entry message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a compute_bandwidth_entry message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns compute_bandwidth_entry
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.compute_bandwidth_entry;

            /**
             * Creates a plain object from a compute_bandwidth_entry message. Also converts values to other types if specified.
             * @param message compute_bandwidth_entry
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.compute_bandwidth_entry, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this compute_bandwidth_entry to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a compute_bandwidth_registry. */
        interface Icompute_bandwidth_registry {

            /** compute_bandwidth_registry entries */
            entries?: (koinos.chain.Icompute_bandwidth_entry[]|null);
        }

        /** Represents a compute_bandwidth_registry. */
        class compute_bandwidth_registry implements Icompute_bandwidth_registry {

            /**
             * Constructs a new compute_bandwidth_registry.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Icompute_bandwidth_registry);

            /** compute_bandwidth_registry entries. */
            public entries: koinos.chain.Icompute_bandwidth_entry[];

            /**
             * Creates a new compute_bandwidth_registry instance using the specified properties.
             * @param [properties] Properties to set
             * @returns compute_bandwidth_registry instance
             */
            public static create(properties?: koinos.chain.Icompute_bandwidth_registry): koinos.chain.compute_bandwidth_registry;

            /**
             * Encodes the specified compute_bandwidth_registry message. Does not implicitly {@link koinos.chain.compute_bandwidth_registry.verify|verify} messages.
             * @param message compute_bandwidth_registry message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Icompute_bandwidth_registry, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified compute_bandwidth_registry message, length delimited. Does not implicitly {@link koinos.chain.compute_bandwidth_registry.verify|verify} messages.
             * @param message compute_bandwidth_registry message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Icompute_bandwidth_registry, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a compute_bandwidth_registry message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns compute_bandwidth_registry
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.compute_bandwidth_registry;

            /**
             * Decodes a compute_bandwidth_registry message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns compute_bandwidth_registry
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.compute_bandwidth_registry;

            /**
             * Verifies a compute_bandwidth_registry message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a compute_bandwidth_registry message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns compute_bandwidth_registry
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.compute_bandwidth_registry;

            /**
             * Creates a plain object from a compute_bandwidth_registry message. Also converts values to other types if specified.
             * @param message compute_bandwidth_registry
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.compute_bandwidth_registry, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this compute_bandwidth_registry to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a genesis_entry. */
        interface Igenesis_entry {

            /** genesis_entry space */
            space?: (koinos.chain.Iobject_space|null);

            /** genesis_entry key */
            key?: (Uint8Array|null);

            /** genesis_entry value */
            value?: (Uint8Array|null);
        }

        /** Represents a genesis_entry. */
        class genesis_entry implements Igenesis_entry {

            /**
             * Constructs a new genesis_entry.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Igenesis_entry);

            /** genesis_entry space. */
            public space?: (koinos.chain.Iobject_space|null);

            /** genesis_entry key. */
            public key: Uint8Array;

            /** genesis_entry value. */
            public value: Uint8Array;

            /**
             * Creates a new genesis_entry instance using the specified properties.
             * @param [properties] Properties to set
             * @returns genesis_entry instance
             */
            public static create(properties?: koinos.chain.Igenesis_entry): koinos.chain.genesis_entry;

            /**
             * Encodes the specified genesis_entry message. Does not implicitly {@link koinos.chain.genesis_entry.verify|verify} messages.
             * @param message genesis_entry message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Igenesis_entry, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified genesis_entry message, length delimited. Does not implicitly {@link koinos.chain.genesis_entry.verify|verify} messages.
             * @param message genesis_entry message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Igenesis_entry, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a genesis_entry message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns genesis_entry
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.genesis_entry;

            /**
             * Decodes a genesis_entry message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns genesis_entry
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.genesis_entry;

            /**
             * Verifies a genesis_entry message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a genesis_entry message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns genesis_entry
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.genesis_entry;

            /**
             * Creates a plain object from a genesis_entry message. Also converts values to other types if specified.
             * @param message genesis_entry
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.genesis_entry, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this genesis_entry to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a genesis_data. */
        interface Igenesis_data {

            /** genesis_data entries */
            entries?: (koinos.chain.Igenesis_entry[]|null);
        }

        /** Represents a genesis_data. */
        class genesis_data implements Igenesis_data {

            /**
             * Constructs a new genesis_data.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Igenesis_data);

            /** genesis_data entries. */
            public entries: koinos.chain.Igenesis_entry[];

            /**
             * Creates a new genesis_data instance using the specified properties.
             * @param [properties] Properties to set
             * @returns genesis_data instance
             */
            public static create(properties?: koinos.chain.Igenesis_data): koinos.chain.genesis_data;

            /**
             * Encodes the specified genesis_data message. Does not implicitly {@link koinos.chain.genesis_data.verify|verify} messages.
             * @param message genesis_data message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Igenesis_data, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified genesis_data message, length delimited. Does not implicitly {@link koinos.chain.genesis_data.verify|verify} messages.
             * @param message genesis_data message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Igenesis_data, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a genesis_data message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns genesis_data
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.genesis_data;

            /**
             * Decodes a genesis_data message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns genesis_data
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.genesis_data;

            /**
             * Verifies a genesis_data message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a genesis_data message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns genesis_data
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.genesis_data;

            /**
             * Creates a plain object from a genesis_data message. Also converts values to other types if specified.
             * @param message genesis_data
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.genesis_data, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this genesis_data to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** dsa enum. */
        enum dsa {
            ecdsa_secp256k1 = 0
        }

        /** system_space_id enum. */
        enum system_space_id {
            metadata = 0,
            system_call_dispatch = 1,
            contract_bytecode = 2,
            contract_metadata = 3,
            transaction_nonce = 4
        }

        /** Properties of a nop_arguments. */
        interface Inop_arguments {
        }

        /** Represents a nop_arguments. */
        class nop_arguments implements Inop_arguments {

            /**
             * Constructs a new nop_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Inop_arguments);

            /**
             * Creates a new nop_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns nop_arguments instance
             */
            public static create(properties?: koinos.chain.Inop_arguments): koinos.chain.nop_arguments;

            /**
             * Encodes the specified nop_arguments message. Does not implicitly {@link koinos.chain.nop_arguments.verify|verify} messages.
             * @param message nop_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Inop_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified nop_arguments message, length delimited. Does not implicitly {@link koinos.chain.nop_arguments.verify|verify} messages.
             * @param message nop_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Inop_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a nop_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns nop_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.nop_arguments;

            /**
             * Decodes a nop_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns nop_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.nop_arguments;

            /**
             * Verifies a nop_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a nop_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns nop_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.nop_arguments;

            /**
             * Creates a plain object from a nop_arguments message. Also converts values to other types if specified.
             * @param message nop_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.nop_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this nop_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a nop_result. */
        interface Inop_result {
        }

        /** Represents a nop_result. */
        class nop_result implements Inop_result {

            /**
             * Constructs a new nop_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Inop_result);

            /**
             * Creates a new nop_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns nop_result instance
             */
            public static create(properties?: koinos.chain.Inop_result): koinos.chain.nop_result;

            /**
             * Encodes the specified nop_result message. Does not implicitly {@link koinos.chain.nop_result.verify|verify} messages.
             * @param message nop_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Inop_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified nop_result message, length delimited. Does not implicitly {@link koinos.chain.nop_result.verify|verify} messages.
             * @param message nop_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Inop_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a nop_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns nop_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.nop_result;

            /**
             * Decodes a nop_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns nop_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.nop_result;

            /**
             * Verifies a nop_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a nop_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns nop_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.nop_result;

            /**
             * Creates a plain object from a nop_result message. Also converts values to other types if specified.
             * @param message nop_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.nop_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this nop_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a get_head_info_arguments. */
        interface Iget_head_info_arguments {
        }

        /** Represents a get_head_info_arguments. */
        class get_head_info_arguments implements Iget_head_info_arguments {

            /**
             * Constructs a new get_head_info_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iget_head_info_arguments);

            /**
             * Creates a new get_head_info_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns get_head_info_arguments instance
             */
            public static create(properties?: koinos.chain.Iget_head_info_arguments): koinos.chain.get_head_info_arguments;

            /**
             * Encodes the specified get_head_info_arguments message. Does not implicitly {@link koinos.chain.get_head_info_arguments.verify|verify} messages.
             * @param message get_head_info_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iget_head_info_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified get_head_info_arguments message, length delimited. Does not implicitly {@link koinos.chain.get_head_info_arguments.verify|verify} messages.
             * @param message get_head_info_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iget_head_info_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a get_head_info_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns get_head_info_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.get_head_info_arguments;

            /**
             * Decodes a get_head_info_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns get_head_info_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.get_head_info_arguments;

            /**
             * Verifies a get_head_info_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a get_head_info_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns get_head_info_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.get_head_info_arguments;

            /**
             * Creates a plain object from a get_head_info_arguments message. Also converts values to other types if specified.
             * @param message get_head_info_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.get_head_info_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this get_head_info_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a get_head_info_result. */
        interface Iget_head_info_result {

            /** get_head_info_result value */
            value?: (koinos.chain.Ihead_info|null);
        }

        /** Represents a get_head_info_result. */
        class get_head_info_result implements Iget_head_info_result {

            /**
             * Constructs a new get_head_info_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iget_head_info_result);

            /** get_head_info_result value. */
            public value?: (koinos.chain.Ihead_info|null);

            /**
             * Creates a new get_head_info_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns get_head_info_result instance
             */
            public static create(properties?: koinos.chain.Iget_head_info_result): koinos.chain.get_head_info_result;

            /**
             * Encodes the specified get_head_info_result message. Does not implicitly {@link koinos.chain.get_head_info_result.verify|verify} messages.
             * @param message get_head_info_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iget_head_info_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified get_head_info_result message, length delimited. Does not implicitly {@link koinos.chain.get_head_info_result.verify|verify} messages.
             * @param message get_head_info_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iget_head_info_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a get_head_info_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns get_head_info_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.get_head_info_result;

            /**
             * Decodes a get_head_info_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns get_head_info_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.get_head_info_result;

            /**
             * Verifies a get_head_info_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a get_head_info_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns get_head_info_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.get_head_info_result;

            /**
             * Creates a plain object from a get_head_info_result message. Also converts values to other types if specified.
             * @param message get_head_info_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.get_head_info_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this get_head_info_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an apply_block_arguments. */
        interface Iapply_block_arguments {

            /** apply_block_arguments block */
            block?: (koinos.protocol.Iblock|null);
        }

        /** Represents an apply_block_arguments. */
        class apply_block_arguments implements Iapply_block_arguments {

            /**
             * Constructs a new apply_block_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iapply_block_arguments);

            /** apply_block_arguments block. */
            public block?: (koinos.protocol.Iblock|null);

            /**
             * Creates a new apply_block_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns apply_block_arguments instance
             */
            public static create(properties?: koinos.chain.Iapply_block_arguments): koinos.chain.apply_block_arguments;

            /**
             * Encodes the specified apply_block_arguments message. Does not implicitly {@link koinos.chain.apply_block_arguments.verify|verify} messages.
             * @param message apply_block_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iapply_block_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified apply_block_arguments message, length delimited. Does not implicitly {@link koinos.chain.apply_block_arguments.verify|verify} messages.
             * @param message apply_block_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iapply_block_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an apply_block_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns apply_block_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.apply_block_arguments;

            /**
             * Decodes an apply_block_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns apply_block_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.apply_block_arguments;

            /**
             * Verifies an apply_block_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an apply_block_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns apply_block_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.apply_block_arguments;

            /**
             * Creates a plain object from an apply_block_arguments message. Also converts values to other types if specified.
             * @param message apply_block_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.apply_block_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this apply_block_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an apply_block_result. */
        interface Iapply_block_result {
        }

        /** Represents an apply_block_result. */
        class apply_block_result implements Iapply_block_result {

            /**
             * Constructs a new apply_block_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iapply_block_result);

            /**
             * Creates a new apply_block_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns apply_block_result instance
             */
            public static create(properties?: koinos.chain.Iapply_block_result): koinos.chain.apply_block_result;

            /**
             * Encodes the specified apply_block_result message. Does not implicitly {@link koinos.chain.apply_block_result.verify|verify} messages.
             * @param message apply_block_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iapply_block_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified apply_block_result message, length delimited. Does not implicitly {@link koinos.chain.apply_block_result.verify|verify} messages.
             * @param message apply_block_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iapply_block_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an apply_block_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns apply_block_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.apply_block_result;

            /**
             * Decodes an apply_block_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns apply_block_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.apply_block_result;

            /**
             * Verifies an apply_block_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an apply_block_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns apply_block_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.apply_block_result;

            /**
             * Creates a plain object from an apply_block_result message. Also converts values to other types if specified.
             * @param message apply_block_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.apply_block_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this apply_block_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an apply_transaction_arguments. */
        interface Iapply_transaction_arguments {

            /** apply_transaction_arguments transaction */
            transaction?: (koinos.protocol.Itransaction|null);
        }

        /** Represents an apply_transaction_arguments. */
        class apply_transaction_arguments implements Iapply_transaction_arguments {

            /**
             * Constructs a new apply_transaction_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iapply_transaction_arguments);

            /** apply_transaction_arguments transaction. */
            public transaction?: (koinos.protocol.Itransaction|null);

            /**
             * Creates a new apply_transaction_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns apply_transaction_arguments instance
             */
            public static create(properties?: koinos.chain.Iapply_transaction_arguments): koinos.chain.apply_transaction_arguments;

            /**
             * Encodes the specified apply_transaction_arguments message. Does not implicitly {@link koinos.chain.apply_transaction_arguments.verify|verify} messages.
             * @param message apply_transaction_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iapply_transaction_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified apply_transaction_arguments message, length delimited. Does not implicitly {@link koinos.chain.apply_transaction_arguments.verify|verify} messages.
             * @param message apply_transaction_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iapply_transaction_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an apply_transaction_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns apply_transaction_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.apply_transaction_arguments;

            /**
             * Decodes an apply_transaction_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns apply_transaction_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.apply_transaction_arguments;

            /**
             * Verifies an apply_transaction_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an apply_transaction_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns apply_transaction_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.apply_transaction_arguments;

            /**
             * Creates a plain object from an apply_transaction_arguments message. Also converts values to other types if specified.
             * @param message apply_transaction_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.apply_transaction_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this apply_transaction_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an apply_transaction_result. */
        interface Iapply_transaction_result {
        }

        /** Represents an apply_transaction_result. */
        class apply_transaction_result implements Iapply_transaction_result {

            /**
             * Constructs a new apply_transaction_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iapply_transaction_result);

            /**
             * Creates a new apply_transaction_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns apply_transaction_result instance
             */
            public static create(properties?: koinos.chain.Iapply_transaction_result): koinos.chain.apply_transaction_result;

            /**
             * Encodes the specified apply_transaction_result message. Does not implicitly {@link koinos.chain.apply_transaction_result.verify|verify} messages.
             * @param message apply_transaction_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iapply_transaction_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified apply_transaction_result message, length delimited. Does not implicitly {@link koinos.chain.apply_transaction_result.verify|verify} messages.
             * @param message apply_transaction_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iapply_transaction_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an apply_transaction_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns apply_transaction_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.apply_transaction_result;

            /**
             * Decodes an apply_transaction_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns apply_transaction_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.apply_transaction_result;

            /**
             * Verifies an apply_transaction_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an apply_transaction_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns apply_transaction_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.apply_transaction_result;

            /**
             * Creates a plain object from an apply_transaction_result message. Also converts values to other types if specified.
             * @param message apply_transaction_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.apply_transaction_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this apply_transaction_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an apply_upload_contract_operation_arguments. */
        interface Iapply_upload_contract_operation_arguments {

            /** apply_upload_contract_operation_arguments op */
            op?: (koinos.protocol.Iupload_contract_operation|null);
        }

        /** Represents an apply_upload_contract_operation_arguments. */
        class apply_upload_contract_operation_arguments implements Iapply_upload_contract_operation_arguments {

            /**
             * Constructs a new apply_upload_contract_operation_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iapply_upload_contract_operation_arguments);

            /** apply_upload_contract_operation_arguments op. */
            public op?: (koinos.protocol.Iupload_contract_operation|null);

            /**
             * Creates a new apply_upload_contract_operation_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns apply_upload_contract_operation_arguments instance
             */
            public static create(properties?: koinos.chain.Iapply_upload_contract_operation_arguments): koinos.chain.apply_upload_contract_operation_arguments;

            /**
             * Encodes the specified apply_upload_contract_operation_arguments message. Does not implicitly {@link koinos.chain.apply_upload_contract_operation_arguments.verify|verify} messages.
             * @param message apply_upload_contract_operation_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iapply_upload_contract_operation_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified apply_upload_contract_operation_arguments message, length delimited. Does not implicitly {@link koinos.chain.apply_upload_contract_operation_arguments.verify|verify} messages.
             * @param message apply_upload_contract_operation_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iapply_upload_contract_operation_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an apply_upload_contract_operation_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns apply_upload_contract_operation_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.apply_upload_contract_operation_arguments;

            /**
             * Decodes an apply_upload_contract_operation_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns apply_upload_contract_operation_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.apply_upload_contract_operation_arguments;

            /**
             * Verifies an apply_upload_contract_operation_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an apply_upload_contract_operation_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns apply_upload_contract_operation_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.apply_upload_contract_operation_arguments;

            /**
             * Creates a plain object from an apply_upload_contract_operation_arguments message. Also converts values to other types if specified.
             * @param message apply_upload_contract_operation_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.apply_upload_contract_operation_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this apply_upload_contract_operation_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an apply_upload_contract_operation_result. */
        interface Iapply_upload_contract_operation_result {
        }

        /** Represents an apply_upload_contract_operation_result. */
        class apply_upload_contract_operation_result implements Iapply_upload_contract_operation_result {

            /**
             * Constructs a new apply_upload_contract_operation_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iapply_upload_contract_operation_result);

            /**
             * Creates a new apply_upload_contract_operation_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns apply_upload_contract_operation_result instance
             */
            public static create(properties?: koinos.chain.Iapply_upload_contract_operation_result): koinos.chain.apply_upload_contract_operation_result;

            /**
             * Encodes the specified apply_upload_contract_operation_result message. Does not implicitly {@link koinos.chain.apply_upload_contract_operation_result.verify|verify} messages.
             * @param message apply_upload_contract_operation_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iapply_upload_contract_operation_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified apply_upload_contract_operation_result message, length delimited. Does not implicitly {@link koinos.chain.apply_upload_contract_operation_result.verify|verify} messages.
             * @param message apply_upload_contract_operation_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iapply_upload_contract_operation_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an apply_upload_contract_operation_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns apply_upload_contract_operation_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.apply_upload_contract_operation_result;

            /**
             * Decodes an apply_upload_contract_operation_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns apply_upload_contract_operation_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.apply_upload_contract_operation_result;

            /**
             * Verifies an apply_upload_contract_operation_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an apply_upload_contract_operation_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns apply_upload_contract_operation_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.apply_upload_contract_operation_result;

            /**
             * Creates a plain object from an apply_upload_contract_operation_result message. Also converts values to other types if specified.
             * @param message apply_upload_contract_operation_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.apply_upload_contract_operation_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this apply_upload_contract_operation_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an apply_call_contract_operation_arguments. */
        interface Iapply_call_contract_operation_arguments {

            /** apply_call_contract_operation_arguments op */
            op?: (koinos.protocol.Icall_contract_operation|null);
        }

        /** Represents an apply_call_contract_operation_arguments. */
        class apply_call_contract_operation_arguments implements Iapply_call_contract_operation_arguments {

            /**
             * Constructs a new apply_call_contract_operation_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iapply_call_contract_operation_arguments);

            /** apply_call_contract_operation_arguments op. */
            public op?: (koinos.protocol.Icall_contract_operation|null);

            /**
             * Creates a new apply_call_contract_operation_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns apply_call_contract_operation_arguments instance
             */
            public static create(properties?: koinos.chain.Iapply_call_contract_operation_arguments): koinos.chain.apply_call_contract_operation_arguments;

            /**
             * Encodes the specified apply_call_contract_operation_arguments message. Does not implicitly {@link koinos.chain.apply_call_contract_operation_arguments.verify|verify} messages.
             * @param message apply_call_contract_operation_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iapply_call_contract_operation_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified apply_call_contract_operation_arguments message, length delimited. Does not implicitly {@link koinos.chain.apply_call_contract_operation_arguments.verify|verify} messages.
             * @param message apply_call_contract_operation_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iapply_call_contract_operation_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an apply_call_contract_operation_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns apply_call_contract_operation_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.apply_call_contract_operation_arguments;

            /**
             * Decodes an apply_call_contract_operation_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns apply_call_contract_operation_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.apply_call_contract_operation_arguments;

            /**
             * Verifies an apply_call_contract_operation_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an apply_call_contract_operation_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns apply_call_contract_operation_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.apply_call_contract_operation_arguments;

            /**
             * Creates a plain object from an apply_call_contract_operation_arguments message. Also converts values to other types if specified.
             * @param message apply_call_contract_operation_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.apply_call_contract_operation_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this apply_call_contract_operation_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an apply_call_contract_operation_result. */
        interface Iapply_call_contract_operation_result {
        }

        /** Represents an apply_call_contract_operation_result. */
        class apply_call_contract_operation_result implements Iapply_call_contract_operation_result {

            /**
             * Constructs a new apply_call_contract_operation_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iapply_call_contract_operation_result);

            /**
             * Creates a new apply_call_contract_operation_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns apply_call_contract_operation_result instance
             */
            public static create(properties?: koinos.chain.Iapply_call_contract_operation_result): koinos.chain.apply_call_contract_operation_result;

            /**
             * Encodes the specified apply_call_contract_operation_result message. Does not implicitly {@link koinos.chain.apply_call_contract_operation_result.verify|verify} messages.
             * @param message apply_call_contract_operation_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iapply_call_contract_operation_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified apply_call_contract_operation_result message, length delimited. Does not implicitly {@link koinos.chain.apply_call_contract_operation_result.verify|verify} messages.
             * @param message apply_call_contract_operation_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iapply_call_contract_operation_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an apply_call_contract_operation_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns apply_call_contract_operation_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.apply_call_contract_operation_result;

            /**
             * Decodes an apply_call_contract_operation_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns apply_call_contract_operation_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.apply_call_contract_operation_result;

            /**
             * Verifies an apply_call_contract_operation_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an apply_call_contract_operation_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns apply_call_contract_operation_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.apply_call_contract_operation_result;

            /**
             * Creates a plain object from an apply_call_contract_operation_result message. Also converts values to other types if specified.
             * @param message apply_call_contract_operation_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.apply_call_contract_operation_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this apply_call_contract_operation_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an apply_set_system_call_operation_arguments. */
        interface Iapply_set_system_call_operation_arguments {

            /** apply_set_system_call_operation_arguments op */
            op?: (koinos.protocol.Iset_system_call_operation|null);
        }

        /** Represents an apply_set_system_call_operation_arguments. */
        class apply_set_system_call_operation_arguments implements Iapply_set_system_call_operation_arguments {

            /**
             * Constructs a new apply_set_system_call_operation_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iapply_set_system_call_operation_arguments);

            /** apply_set_system_call_operation_arguments op. */
            public op?: (koinos.protocol.Iset_system_call_operation|null);

            /**
             * Creates a new apply_set_system_call_operation_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns apply_set_system_call_operation_arguments instance
             */
            public static create(properties?: koinos.chain.Iapply_set_system_call_operation_arguments): koinos.chain.apply_set_system_call_operation_arguments;

            /**
             * Encodes the specified apply_set_system_call_operation_arguments message. Does not implicitly {@link koinos.chain.apply_set_system_call_operation_arguments.verify|verify} messages.
             * @param message apply_set_system_call_operation_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iapply_set_system_call_operation_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified apply_set_system_call_operation_arguments message, length delimited. Does not implicitly {@link koinos.chain.apply_set_system_call_operation_arguments.verify|verify} messages.
             * @param message apply_set_system_call_operation_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iapply_set_system_call_operation_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an apply_set_system_call_operation_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns apply_set_system_call_operation_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.apply_set_system_call_operation_arguments;

            /**
             * Decodes an apply_set_system_call_operation_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns apply_set_system_call_operation_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.apply_set_system_call_operation_arguments;

            /**
             * Verifies an apply_set_system_call_operation_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an apply_set_system_call_operation_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns apply_set_system_call_operation_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.apply_set_system_call_operation_arguments;

            /**
             * Creates a plain object from an apply_set_system_call_operation_arguments message. Also converts values to other types if specified.
             * @param message apply_set_system_call_operation_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.apply_set_system_call_operation_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this apply_set_system_call_operation_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an apply_set_system_call_operation_result. */
        interface Iapply_set_system_call_operation_result {
        }

        /** Represents an apply_set_system_call_operation_result. */
        class apply_set_system_call_operation_result implements Iapply_set_system_call_operation_result {

            /**
             * Constructs a new apply_set_system_call_operation_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iapply_set_system_call_operation_result);

            /**
             * Creates a new apply_set_system_call_operation_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns apply_set_system_call_operation_result instance
             */
            public static create(properties?: koinos.chain.Iapply_set_system_call_operation_result): koinos.chain.apply_set_system_call_operation_result;

            /**
             * Encodes the specified apply_set_system_call_operation_result message. Does not implicitly {@link koinos.chain.apply_set_system_call_operation_result.verify|verify} messages.
             * @param message apply_set_system_call_operation_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iapply_set_system_call_operation_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified apply_set_system_call_operation_result message, length delimited. Does not implicitly {@link koinos.chain.apply_set_system_call_operation_result.verify|verify} messages.
             * @param message apply_set_system_call_operation_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iapply_set_system_call_operation_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an apply_set_system_call_operation_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns apply_set_system_call_operation_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.apply_set_system_call_operation_result;

            /**
             * Decodes an apply_set_system_call_operation_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns apply_set_system_call_operation_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.apply_set_system_call_operation_result;

            /**
             * Verifies an apply_set_system_call_operation_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an apply_set_system_call_operation_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns apply_set_system_call_operation_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.apply_set_system_call_operation_result;

            /**
             * Creates a plain object from an apply_set_system_call_operation_result message. Also converts values to other types if specified.
             * @param message apply_set_system_call_operation_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.apply_set_system_call_operation_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this apply_set_system_call_operation_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an apply_set_system_contract_operation_arguments. */
        interface Iapply_set_system_contract_operation_arguments {

            /** apply_set_system_contract_operation_arguments op */
            op?: (koinos.protocol.Iset_system_contract_operation|null);
        }

        /** Represents an apply_set_system_contract_operation_arguments. */
        class apply_set_system_contract_operation_arguments implements Iapply_set_system_contract_operation_arguments {

            /**
             * Constructs a new apply_set_system_contract_operation_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iapply_set_system_contract_operation_arguments);

            /** apply_set_system_contract_operation_arguments op. */
            public op?: (koinos.protocol.Iset_system_contract_operation|null);

            /**
             * Creates a new apply_set_system_contract_operation_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns apply_set_system_contract_operation_arguments instance
             */
            public static create(properties?: koinos.chain.Iapply_set_system_contract_operation_arguments): koinos.chain.apply_set_system_contract_operation_arguments;

            /**
             * Encodes the specified apply_set_system_contract_operation_arguments message. Does not implicitly {@link koinos.chain.apply_set_system_contract_operation_arguments.verify|verify} messages.
             * @param message apply_set_system_contract_operation_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iapply_set_system_contract_operation_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified apply_set_system_contract_operation_arguments message, length delimited. Does not implicitly {@link koinos.chain.apply_set_system_contract_operation_arguments.verify|verify} messages.
             * @param message apply_set_system_contract_operation_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iapply_set_system_contract_operation_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an apply_set_system_contract_operation_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns apply_set_system_contract_operation_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.apply_set_system_contract_operation_arguments;

            /**
             * Decodes an apply_set_system_contract_operation_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns apply_set_system_contract_operation_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.apply_set_system_contract_operation_arguments;

            /**
             * Verifies an apply_set_system_contract_operation_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an apply_set_system_contract_operation_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns apply_set_system_contract_operation_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.apply_set_system_contract_operation_arguments;

            /**
             * Creates a plain object from an apply_set_system_contract_operation_arguments message. Also converts values to other types if specified.
             * @param message apply_set_system_contract_operation_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.apply_set_system_contract_operation_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this apply_set_system_contract_operation_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an apply_set_system_contract_operation_result. */
        interface Iapply_set_system_contract_operation_result {
        }

        /** Represents an apply_set_system_contract_operation_result. */
        class apply_set_system_contract_operation_result implements Iapply_set_system_contract_operation_result {

            /**
             * Constructs a new apply_set_system_contract_operation_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iapply_set_system_contract_operation_result);

            /**
             * Creates a new apply_set_system_contract_operation_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns apply_set_system_contract_operation_result instance
             */
            public static create(properties?: koinos.chain.Iapply_set_system_contract_operation_result): koinos.chain.apply_set_system_contract_operation_result;

            /**
             * Encodes the specified apply_set_system_contract_operation_result message. Does not implicitly {@link koinos.chain.apply_set_system_contract_operation_result.verify|verify} messages.
             * @param message apply_set_system_contract_operation_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iapply_set_system_contract_operation_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified apply_set_system_contract_operation_result message, length delimited. Does not implicitly {@link koinos.chain.apply_set_system_contract_operation_result.verify|verify} messages.
             * @param message apply_set_system_contract_operation_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iapply_set_system_contract_operation_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an apply_set_system_contract_operation_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns apply_set_system_contract_operation_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.apply_set_system_contract_operation_result;

            /**
             * Decodes an apply_set_system_contract_operation_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns apply_set_system_contract_operation_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.apply_set_system_contract_operation_result;

            /**
             * Verifies an apply_set_system_contract_operation_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an apply_set_system_contract_operation_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns apply_set_system_contract_operation_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.apply_set_system_contract_operation_result;

            /**
             * Creates a plain object from an apply_set_system_contract_operation_result message. Also converts values to other types if specified.
             * @param message apply_set_system_contract_operation_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.apply_set_system_contract_operation_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this apply_set_system_contract_operation_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a pre_block_callback_arguments. */
        interface Ipre_block_callback_arguments {
        }

        /** Represents a pre_block_callback_arguments. */
        class pre_block_callback_arguments implements Ipre_block_callback_arguments {

            /**
             * Constructs a new pre_block_callback_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Ipre_block_callback_arguments);

            /**
             * Creates a new pre_block_callback_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns pre_block_callback_arguments instance
             */
            public static create(properties?: koinos.chain.Ipre_block_callback_arguments): koinos.chain.pre_block_callback_arguments;

            /**
             * Encodes the specified pre_block_callback_arguments message. Does not implicitly {@link koinos.chain.pre_block_callback_arguments.verify|verify} messages.
             * @param message pre_block_callback_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Ipre_block_callback_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified pre_block_callback_arguments message, length delimited. Does not implicitly {@link koinos.chain.pre_block_callback_arguments.verify|verify} messages.
             * @param message pre_block_callback_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Ipre_block_callback_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a pre_block_callback_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns pre_block_callback_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.pre_block_callback_arguments;

            /**
             * Decodes a pre_block_callback_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns pre_block_callback_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.pre_block_callback_arguments;

            /**
             * Verifies a pre_block_callback_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a pre_block_callback_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns pre_block_callback_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.pre_block_callback_arguments;

            /**
             * Creates a plain object from a pre_block_callback_arguments message. Also converts values to other types if specified.
             * @param message pre_block_callback_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.pre_block_callback_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this pre_block_callback_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a pre_block_callback_result. */
        interface Ipre_block_callback_result {
        }

        /** Represents a pre_block_callback_result. */
        class pre_block_callback_result implements Ipre_block_callback_result {

            /**
             * Constructs a new pre_block_callback_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Ipre_block_callback_result);

            /**
             * Creates a new pre_block_callback_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns pre_block_callback_result instance
             */
            public static create(properties?: koinos.chain.Ipre_block_callback_result): koinos.chain.pre_block_callback_result;

            /**
             * Encodes the specified pre_block_callback_result message. Does not implicitly {@link koinos.chain.pre_block_callback_result.verify|verify} messages.
             * @param message pre_block_callback_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Ipre_block_callback_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified pre_block_callback_result message, length delimited. Does not implicitly {@link koinos.chain.pre_block_callback_result.verify|verify} messages.
             * @param message pre_block_callback_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Ipre_block_callback_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a pre_block_callback_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns pre_block_callback_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.pre_block_callback_result;

            /**
             * Decodes a pre_block_callback_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns pre_block_callback_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.pre_block_callback_result;

            /**
             * Verifies a pre_block_callback_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a pre_block_callback_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns pre_block_callback_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.pre_block_callback_result;

            /**
             * Creates a plain object from a pre_block_callback_result message. Also converts values to other types if specified.
             * @param message pre_block_callback_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.pre_block_callback_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this pre_block_callback_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a post_block_callback_arguments. */
        interface Ipost_block_callback_arguments {
        }

        /** Represents a post_block_callback_arguments. */
        class post_block_callback_arguments implements Ipost_block_callback_arguments {

            /**
             * Constructs a new post_block_callback_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Ipost_block_callback_arguments);

            /**
             * Creates a new post_block_callback_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns post_block_callback_arguments instance
             */
            public static create(properties?: koinos.chain.Ipost_block_callback_arguments): koinos.chain.post_block_callback_arguments;

            /**
             * Encodes the specified post_block_callback_arguments message. Does not implicitly {@link koinos.chain.post_block_callback_arguments.verify|verify} messages.
             * @param message post_block_callback_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Ipost_block_callback_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified post_block_callback_arguments message, length delimited. Does not implicitly {@link koinos.chain.post_block_callback_arguments.verify|verify} messages.
             * @param message post_block_callback_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Ipost_block_callback_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a post_block_callback_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns post_block_callback_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.post_block_callback_arguments;

            /**
             * Decodes a post_block_callback_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns post_block_callback_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.post_block_callback_arguments;

            /**
             * Verifies a post_block_callback_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a post_block_callback_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns post_block_callback_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.post_block_callback_arguments;

            /**
             * Creates a plain object from a post_block_callback_arguments message. Also converts values to other types if specified.
             * @param message post_block_callback_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.post_block_callback_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this post_block_callback_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a post_block_callback_result. */
        interface Ipost_block_callback_result {
        }

        /** Represents a post_block_callback_result. */
        class post_block_callback_result implements Ipost_block_callback_result {

            /**
             * Constructs a new post_block_callback_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Ipost_block_callback_result);

            /**
             * Creates a new post_block_callback_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns post_block_callback_result instance
             */
            public static create(properties?: koinos.chain.Ipost_block_callback_result): koinos.chain.post_block_callback_result;

            /**
             * Encodes the specified post_block_callback_result message. Does not implicitly {@link koinos.chain.post_block_callback_result.verify|verify} messages.
             * @param message post_block_callback_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Ipost_block_callback_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified post_block_callback_result message, length delimited. Does not implicitly {@link koinos.chain.post_block_callback_result.verify|verify} messages.
             * @param message post_block_callback_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Ipost_block_callback_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a post_block_callback_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns post_block_callback_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.post_block_callback_result;

            /**
             * Decodes a post_block_callback_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns post_block_callback_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.post_block_callback_result;

            /**
             * Verifies a post_block_callback_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a post_block_callback_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns post_block_callback_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.post_block_callback_result;

            /**
             * Creates a plain object from a post_block_callback_result message. Also converts values to other types if specified.
             * @param message post_block_callback_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.post_block_callback_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this post_block_callback_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a pre_transaction_callback_arguments. */
        interface Ipre_transaction_callback_arguments {
        }

        /** Represents a pre_transaction_callback_arguments. */
        class pre_transaction_callback_arguments implements Ipre_transaction_callback_arguments {

            /**
             * Constructs a new pre_transaction_callback_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Ipre_transaction_callback_arguments);

            /**
             * Creates a new pre_transaction_callback_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns pre_transaction_callback_arguments instance
             */
            public static create(properties?: koinos.chain.Ipre_transaction_callback_arguments): koinos.chain.pre_transaction_callback_arguments;

            /**
             * Encodes the specified pre_transaction_callback_arguments message. Does not implicitly {@link koinos.chain.pre_transaction_callback_arguments.verify|verify} messages.
             * @param message pre_transaction_callback_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Ipre_transaction_callback_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified pre_transaction_callback_arguments message, length delimited. Does not implicitly {@link koinos.chain.pre_transaction_callback_arguments.verify|verify} messages.
             * @param message pre_transaction_callback_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Ipre_transaction_callback_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a pre_transaction_callback_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns pre_transaction_callback_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.pre_transaction_callback_arguments;

            /**
             * Decodes a pre_transaction_callback_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns pre_transaction_callback_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.pre_transaction_callback_arguments;

            /**
             * Verifies a pre_transaction_callback_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a pre_transaction_callback_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns pre_transaction_callback_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.pre_transaction_callback_arguments;

            /**
             * Creates a plain object from a pre_transaction_callback_arguments message. Also converts values to other types if specified.
             * @param message pre_transaction_callback_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.pre_transaction_callback_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this pre_transaction_callback_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a pre_transaction_callback_result. */
        interface Ipre_transaction_callback_result {
        }

        /** Represents a pre_transaction_callback_result. */
        class pre_transaction_callback_result implements Ipre_transaction_callback_result {

            /**
             * Constructs a new pre_transaction_callback_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Ipre_transaction_callback_result);

            /**
             * Creates a new pre_transaction_callback_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns pre_transaction_callback_result instance
             */
            public static create(properties?: koinos.chain.Ipre_transaction_callback_result): koinos.chain.pre_transaction_callback_result;

            /**
             * Encodes the specified pre_transaction_callback_result message. Does not implicitly {@link koinos.chain.pre_transaction_callback_result.verify|verify} messages.
             * @param message pre_transaction_callback_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Ipre_transaction_callback_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified pre_transaction_callback_result message, length delimited. Does not implicitly {@link koinos.chain.pre_transaction_callback_result.verify|verify} messages.
             * @param message pre_transaction_callback_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Ipre_transaction_callback_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a pre_transaction_callback_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns pre_transaction_callback_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.pre_transaction_callback_result;

            /**
             * Decodes a pre_transaction_callback_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns pre_transaction_callback_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.pre_transaction_callback_result;

            /**
             * Verifies a pre_transaction_callback_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a pre_transaction_callback_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns pre_transaction_callback_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.pre_transaction_callback_result;

            /**
             * Creates a plain object from a pre_transaction_callback_result message. Also converts values to other types if specified.
             * @param message pre_transaction_callback_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.pre_transaction_callback_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this pre_transaction_callback_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a post_transaction_callback_arguments. */
        interface Ipost_transaction_callback_arguments {
        }

        /** Represents a post_transaction_callback_arguments. */
        class post_transaction_callback_arguments implements Ipost_transaction_callback_arguments {

            /**
             * Constructs a new post_transaction_callback_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Ipost_transaction_callback_arguments);

            /**
             * Creates a new post_transaction_callback_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns post_transaction_callback_arguments instance
             */
            public static create(properties?: koinos.chain.Ipost_transaction_callback_arguments): koinos.chain.post_transaction_callback_arguments;

            /**
             * Encodes the specified post_transaction_callback_arguments message. Does not implicitly {@link koinos.chain.post_transaction_callback_arguments.verify|verify} messages.
             * @param message post_transaction_callback_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Ipost_transaction_callback_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified post_transaction_callback_arguments message, length delimited. Does not implicitly {@link koinos.chain.post_transaction_callback_arguments.verify|verify} messages.
             * @param message post_transaction_callback_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Ipost_transaction_callback_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a post_transaction_callback_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns post_transaction_callback_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.post_transaction_callback_arguments;

            /**
             * Decodes a post_transaction_callback_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns post_transaction_callback_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.post_transaction_callback_arguments;

            /**
             * Verifies a post_transaction_callback_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a post_transaction_callback_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns post_transaction_callback_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.post_transaction_callback_arguments;

            /**
             * Creates a plain object from a post_transaction_callback_arguments message. Also converts values to other types if specified.
             * @param message post_transaction_callback_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.post_transaction_callback_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this post_transaction_callback_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a post_transaction_callback_result. */
        interface Ipost_transaction_callback_result {
        }

        /** Represents a post_transaction_callback_result. */
        class post_transaction_callback_result implements Ipost_transaction_callback_result {

            /**
             * Constructs a new post_transaction_callback_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Ipost_transaction_callback_result);

            /**
             * Creates a new post_transaction_callback_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns post_transaction_callback_result instance
             */
            public static create(properties?: koinos.chain.Ipost_transaction_callback_result): koinos.chain.post_transaction_callback_result;

            /**
             * Encodes the specified post_transaction_callback_result message. Does not implicitly {@link koinos.chain.post_transaction_callback_result.verify|verify} messages.
             * @param message post_transaction_callback_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Ipost_transaction_callback_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified post_transaction_callback_result message, length delimited. Does not implicitly {@link koinos.chain.post_transaction_callback_result.verify|verify} messages.
             * @param message post_transaction_callback_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Ipost_transaction_callback_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a post_transaction_callback_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns post_transaction_callback_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.post_transaction_callback_result;

            /**
             * Decodes a post_transaction_callback_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns post_transaction_callback_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.post_transaction_callback_result;

            /**
             * Verifies a post_transaction_callback_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a post_transaction_callback_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns post_transaction_callback_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.post_transaction_callback_result;

            /**
             * Creates a plain object from a post_transaction_callback_result message. Also converts values to other types if specified.
             * @param message post_transaction_callback_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.post_transaction_callback_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this post_transaction_callback_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a get_chain_id_arguments. */
        interface Iget_chain_id_arguments {
        }

        /** Represents a get_chain_id_arguments. */
        class get_chain_id_arguments implements Iget_chain_id_arguments {

            /**
             * Constructs a new get_chain_id_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iget_chain_id_arguments);

            /**
             * Creates a new get_chain_id_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns get_chain_id_arguments instance
             */
            public static create(properties?: koinos.chain.Iget_chain_id_arguments): koinos.chain.get_chain_id_arguments;

            /**
             * Encodes the specified get_chain_id_arguments message. Does not implicitly {@link koinos.chain.get_chain_id_arguments.verify|verify} messages.
             * @param message get_chain_id_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iget_chain_id_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified get_chain_id_arguments message, length delimited. Does not implicitly {@link koinos.chain.get_chain_id_arguments.verify|verify} messages.
             * @param message get_chain_id_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iget_chain_id_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a get_chain_id_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns get_chain_id_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.get_chain_id_arguments;

            /**
             * Decodes a get_chain_id_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns get_chain_id_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.get_chain_id_arguments;

            /**
             * Verifies a get_chain_id_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a get_chain_id_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns get_chain_id_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.get_chain_id_arguments;

            /**
             * Creates a plain object from a get_chain_id_arguments message. Also converts values to other types if specified.
             * @param message get_chain_id_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.get_chain_id_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this get_chain_id_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a get_chain_id_result. */
        interface Iget_chain_id_result {

            /** get_chain_id_result value */
            value?: (Uint8Array|null);
        }

        /** Represents a get_chain_id_result. */
        class get_chain_id_result implements Iget_chain_id_result {

            /**
             * Constructs a new get_chain_id_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iget_chain_id_result);

            /** get_chain_id_result value. */
            public value: Uint8Array;

            /**
             * Creates a new get_chain_id_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns get_chain_id_result instance
             */
            public static create(properties?: koinos.chain.Iget_chain_id_result): koinos.chain.get_chain_id_result;

            /**
             * Encodes the specified get_chain_id_result message. Does not implicitly {@link koinos.chain.get_chain_id_result.verify|verify} messages.
             * @param message get_chain_id_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iget_chain_id_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified get_chain_id_result message, length delimited. Does not implicitly {@link koinos.chain.get_chain_id_result.verify|verify} messages.
             * @param message get_chain_id_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iget_chain_id_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a get_chain_id_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns get_chain_id_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.get_chain_id_result;

            /**
             * Decodes a get_chain_id_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns get_chain_id_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.get_chain_id_result;

            /**
             * Verifies a get_chain_id_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a get_chain_id_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns get_chain_id_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.get_chain_id_result;

            /**
             * Creates a plain object from a get_chain_id_result message. Also converts values to other types if specified.
             * @param message get_chain_id_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.get_chain_id_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this get_chain_id_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a process_block_signature_arguments. */
        interface Iprocess_block_signature_arguments {

            /** process_block_signature_arguments digest */
            digest?: (Uint8Array|null);

            /** process_block_signature_arguments header */
            header?: (koinos.protocol.Iblock_header|null);

            /** process_block_signature_arguments signature */
            signature?: (Uint8Array|null);
        }

        /** Represents a process_block_signature_arguments. */
        class process_block_signature_arguments implements Iprocess_block_signature_arguments {

            /**
             * Constructs a new process_block_signature_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iprocess_block_signature_arguments);

            /** process_block_signature_arguments digest. */
            public digest: Uint8Array;

            /** process_block_signature_arguments header. */
            public header?: (koinos.protocol.Iblock_header|null);

            /** process_block_signature_arguments signature. */
            public signature: Uint8Array;

            /**
             * Creates a new process_block_signature_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns process_block_signature_arguments instance
             */
            public static create(properties?: koinos.chain.Iprocess_block_signature_arguments): koinos.chain.process_block_signature_arguments;

            /**
             * Encodes the specified process_block_signature_arguments message. Does not implicitly {@link koinos.chain.process_block_signature_arguments.verify|verify} messages.
             * @param message process_block_signature_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iprocess_block_signature_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified process_block_signature_arguments message, length delimited. Does not implicitly {@link koinos.chain.process_block_signature_arguments.verify|verify} messages.
             * @param message process_block_signature_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iprocess_block_signature_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a process_block_signature_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns process_block_signature_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.process_block_signature_arguments;

            /**
             * Decodes a process_block_signature_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns process_block_signature_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.process_block_signature_arguments;

            /**
             * Verifies a process_block_signature_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a process_block_signature_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns process_block_signature_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.process_block_signature_arguments;

            /**
             * Creates a plain object from a process_block_signature_arguments message. Also converts values to other types if specified.
             * @param message process_block_signature_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.process_block_signature_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this process_block_signature_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a process_block_signature_result. */
        interface Iprocess_block_signature_result {

            /** process_block_signature_result value */
            value?: (boolean|null);
        }

        /** Represents a process_block_signature_result. */
        class process_block_signature_result implements Iprocess_block_signature_result {

            /**
             * Constructs a new process_block_signature_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iprocess_block_signature_result);

            /** process_block_signature_result value. */
            public value: boolean;

            /**
             * Creates a new process_block_signature_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns process_block_signature_result instance
             */
            public static create(properties?: koinos.chain.Iprocess_block_signature_result): koinos.chain.process_block_signature_result;

            /**
             * Encodes the specified process_block_signature_result message. Does not implicitly {@link koinos.chain.process_block_signature_result.verify|verify} messages.
             * @param message process_block_signature_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iprocess_block_signature_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified process_block_signature_result message, length delimited. Does not implicitly {@link koinos.chain.process_block_signature_result.verify|verify} messages.
             * @param message process_block_signature_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iprocess_block_signature_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a process_block_signature_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns process_block_signature_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.process_block_signature_result;

            /**
             * Decodes a process_block_signature_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns process_block_signature_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.process_block_signature_result;

            /**
             * Verifies a process_block_signature_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a process_block_signature_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns process_block_signature_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.process_block_signature_result;

            /**
             * Creates a plain object from a process_block_signature_result message. Also converts values to other types if specified.
             * @param message process_block_signature_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.process_block_signature_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this process_block_signature_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a get_transaction_arguments. */
        interface Iget_transaction_arguments {
        }

        /** Represents a get_transaction_arguments. */
        class get_transaction_arguments implements Iget_transaction_arguments {

            /**
             * Constructs a new get_transaction_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iget_transaction_arguments);

            /**
             * Creates a new get_transaction_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns get_transaction_arguments instance
             */
            public static create(properties?: koinos.chain.Iget_transaction_arguments): koinos.chain.get_transaction_arguments;

            /**
             * Encodes the specified get_transaction_arguments message. Does not implicitly {@link koinos.chain.get_transaction_arguments.verify|verify} messages.
             * @param message get_transaction_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iget_transaction_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified get_transaction_arguments message, length delimited. Does not implicitly {@link koinos.chain.get_transaction_arguments.verify|verify} messages.
             * @param message get_transaction_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iget_transaction_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a get_transaction_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns get_transaction_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.get_transaction_arguments;

            /**
             * Decodes a get_transaction_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns get_transaction_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.get_transaction_arguments;

            /**
             * Verifies a get_transaction_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a get_transaction_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns get_transaction_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.get_transaction_arguments;

            /**
             * Creates a plain object from a get_transaction_arguments message. Also converts values to other types if specified.
             * @param message get_transaction_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.get_transaction_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this get_transaction_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a get_transaction_result. */
        interface Iget_transaction_result {

            /** get_transaction_result value */
            value?: (koinos.protocol.Itransaction|null);
        }

        /** Represents a get_transaction_result. */
        class get_transaction_result implements Iget_transaction_result {

            /**
             * Constructs a new get_transaction_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iget_transaction_result);

            /** get_transaction_result value. */
            public value?: (koinos.protocol.Itransaction|null);

            /**
             * Creates a new get_transaction_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns get_transaction_result instance
             */
            public static create(properties?: koinos.chain.Iget_transaction_result): koinos.chain.get_transaction_result;

            /**
             * Encodes the specified get_transaction_result message. Does not implicitly {@link koinos.chain.get_transaction_result.verify|verify} messages.
             * @param message get_transaction_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iget_transaction_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified get_transaction_result message, length delimited. Does not implicitly {@link koinos.chain.get_transaction_result.verify|verify} messages.
             * @param message get_transaction_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iget_transaction_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a get_transaction_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns get_transaction_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.get_transaction_result;

            /**
             * Decodes a get_transaction_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns get_transaction_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.get_transaction_result;

            /**
             * Verifies a get_transaction_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a get_transaction_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns get_transaction_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.get_transaction_result;

            /**
             * Creates a plain object from a get_transaction_result message. Also converts values to other types if specified.
             * @param message get_transaction_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.get_transaction_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this get_transaction_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a get_transaction_field_arguments. */
        interface Iget_transaction_field_arguments {

            /** get_transaction_field_arguments field */
            field?: (string|null);
        }

        /** Represents a get_transaction_field_arguments. */
        class get_transaction_field_arguments implements Iget_transaction_field_arguments {

            /**
             * Constructs a new get_transaction_field_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iget_transaction_field_arguments);

            /** get_transaction_field_arguments field. */
            public field: string;

            /**
             * Creates a new get_transaction_field_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns get_transaction_field_arguments instance
             */
            public static create(properties?: koinos.chain.Iget_transaction_field_arguments): koinos.chain.get_transaction_field_arguments;

            /**
             * Encodes the specified get_transaction_field_arguments message. Does not implicitly {@link koinos.chain.get_transaction_field_arguments.verify|verify} messages.
             * @param message get_transaction_field_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iget_transaction_field_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified get_transaction_field_arguments message, length delimited. Does not implicitly {@link koinos.chain.get_transaction_field_arguments.verify|verify} messages.
             * @param message get_transaction_field_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iget_transaction_field_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a get_transaction_field_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns get_transaction_field_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.get_transaction_field_arguments;

            /**
             * Decodes a get_transaction_field_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns get_transaction_field_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.get_transaction_field_arguments;

            /**
             * Verifies a get_transaction_field_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a get_transaction_field_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns get_transaction_field_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.get_transaction_field_arguments;

            /**
             * Creates a plain object from a get_transaction_field_arguments message. Also converts values to other types if specified.
             * @param message get_transaction_field_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.get_transaction_field_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this get_transaction_field_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a get_transaction_field_result. */
        interface Iget_transaction_field_result {

            /** get_transaction_field_result value */
            value?: (koinos.chain.Ivalue_type|null);
        }

        /** Represents a get_transaction_field_result. */
        class get_transaction_field_result implements Iget_transaction_field_result {

            /**
             * Constructs a new get_transaction_field_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iget_transaction_field_result);

            /** get_transaction_field_result value. */
            public value?: (koinos.chain.Ivalue_type|null);

            /**
             * Creates a new get_transaction_field_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns get_transaction_field_result instance
             */
            public static create(properties?: koinos.chain.Iget_transaction_field_result): koinos.chain.get_transaction_field_result;

            /**
             * Encodes the specified get_transaction_field_result message. Does not implicitly {@link koinos.chain.get_transaction_field_result.verify|verify} messages.
             * @param message get_transaction_field_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iget_transaction_field_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified get_transaction_field_result message, length delimited. Does not implicitly {@link koinos.chain.get_transaction_field_result.verify|verify} messages.
             * @param message get_transaction_field_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iget_transaction_field_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a get_transaction_field_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns get_transaction_field_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.get_transaction_field_result;

            /**
             * Decodes a get_transaction_field_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns get_transaction_field_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.get_transaction_field_result;

            /**
             * Verifies a get_transaction_field_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a get_transaction_field_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns get_transaction_field_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.get_transaction_field_result;

            /**
             * Creates a plain object from a get_transaction_field_result message. Also converts values to other types if specified.
             * @param message get_transaction_field_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.get_transaction_field_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this get_transaction_field_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a get_block_arguments. */
        interface Iget_block_arguments {
        }

        /** Represents a get_block_arguments. */
        class get_block_arguments implements Iget_block_arguments {

            /**
             * Constructs a new get_block_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iget_block_arguments);

            /**
             * Creates a new get_block_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns get_block_arguments instance
             */
            public static create(properties?: koinos.chain.Iget_block_arguments): koinos.chain.get_block_arguments;

            /**
             * Encodes the specified get_block_arguments message. Does not implicitly {@link koinos.chain.get_block_arguments.verify|verify} messages.
             * @param message get_block_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iget_block_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified get_block_arguments message, length delimited. Does not implicitly {@link koinos.chain.get_block_arguments.verify|verify} messages.
             * @param message get_block_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iget_block_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a get_block_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns get_block_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.get_block_arguments;

            /**
             * Decodes a get_block_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns get_block_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.get_block_arguments;

            /**
             * Verifies a get_block_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a get_block_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns get_block_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.get_block_arguments;

            /**
             * Creates a plain object from a get_block_arguments message. Also converts values to other types if specified.
             * @param message get_block_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.get_block_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this get_block_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a get_block_result. */
        interface Iget_block_result {

            /** get_block_result value */
            value?: (koinos.protocol.Iblock|null);
        }

        /** Represents a get_block_result. */
        class get_block_result implements Iget_block_result {

            /**
             * Constructs a new get_block_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iget_block_result);

            /** get_block_result value. */
            public value?: (koinos.protocol.Iblock|null);

            /**
             * Creates a new get_block_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns get_block_result instance
             */
            public static create(properties?: koinos.chain.Iget_block_result): koinos.chain.get_block_result;

            /**
             * Encodes the specified get_block_result message. Does not implicitly {@link koinos.chain.get_block_result.verify|verify} messages.
             * @param message get_block_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iget_block_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified get_block_result message, length delimited. Does not implicitly {@link koinos.chain.get_block_result.verify|verify} messages.
             * @param message get_block_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iget_block_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a get_block_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns get_block_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.get_block_result;

            /**
             * Decodes a get_block_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns get_block_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.get_block_result;

            /**
             * Verifies a get_block_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a get_block_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns get_block_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.get_block_result;

            /**
             * Creates a plain object from a get_block_result message. Also converts values to other types if specified.
             * @param message get_block_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.get_block_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this get_block_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a get_block_field_arguments. */
        interface Iget_block_field_arguments {

            /** get_block_field_arguments field */
            field?: (string|null);
        }

        /** Represents a get_block_field_arguments. */
        class get_block_field_arguments implements Iget_block_field_arguments {

            /**
             * Constructs a new get_block_field_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iget_block_field_arguments);

            /** get_block_field_arguments field. */
            public field: string;

            /**
             * Creates a new get_block_field_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns get_block_field_arguments instance
             */
            public static create(properties?: koinos.chain.Iget_block_field_arguments): koinos.chain.get_block_field_arguments;

            /**
             * Encodes the specified get_block_field_arguments message. Does not implicitly {@link koinos.chain.get_block_field_arguments.verify|verify} messages.
             * @param message get_block_field_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iget_block_field_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified get_block_field_arguments message, length delimited. Does not implicitly {@link koinos.chain.get_block_field_arguments.verify|verify} messages.
             * @param message get_block_field_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iget_block_field_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a get_block_field_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns get_block_field_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.get_block_field_arguments;

            /**
             * Decodes a get_block_field_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns get_block_field_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.get_block_field_arguments;

            /**
             * Verifies a get_block_field_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a get_block_field_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns get_block_field_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.get_block_field_arguments;

            /**
             * Creates a plain object from a get_block_field_arguments message. Also converts values to other types if specified.
             * @param message get_block_field_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.get_block_field_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this get_block_field_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a get_block_field_result. */
        interface Iget_block_field_result {

            /** get_block_field_result value */
            value?: (koinos.chain.Ivalue_type|null);
        }

        /** Represents a get_block_field_result. */
        class get_block_field_result implements Iget_block_field_result {

            /**
             * Constructs a new get_block_field_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iget_block_field_result);

            /** get_block_field_result value. */
            public value?: (koinos.chain.Ivalue_type|null);

            /**
             * Creates a new get_block_field_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns get_block_field_result instance
             */
            public static create(properties?: koinos.chain.Iget_block_field_result): koinos.chain.get_block_field_result;

            /**
             * Encodes the specified get_block_field_result message. Does not implicitly {@link koinos.chain.get_block_field_result.verify|verify} messages.
             * @param message get_block_field_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iget_block_field_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified get_block_field_result message, length delimited. Does not implicitly {@link koinos.chain.get_block_field_result.verify|verify} messages.
             * @param message get_block_field_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iget_block_field_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a get_block_field_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns get_block_field_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.get_block_field_result;

            /**
             * Decodes a get_block_field_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns get_block_field_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.get_block_field_result;

            /**
             * Verifies a get_block_field_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a get_block_field_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns get_block_field_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.get_block_field_result;

            /**
             * Creates a plain object from a get_block_field_result message. Also converts values to other types if specified.
             * @param message get_block_field_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.get_block_field_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this get_block_field_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a get_last_irreversible_block_arguments. */
        interface Iget_last_irreversible_block_arguments {
        }

        /** Represents a get_last_irreversible_block_arguments. */
        class get_last_irreversible_block_arguments implements Iget_last_irreversible_block_arguments {

            /**
             * Constructs a new get_last_irreversible_block_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iget_last_irreversible_block_arguments);

            /**
             * Creates a new get_last_irreversible_block_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns get_last_irreversible_block_arguments instance
             */
            public static create(properties?: koinos.chain.Iget_last_irreversible_block_arguments): koinos.chain.get_last_irreversible_block_arguments;

            /**
             * Encodes the specified get_last_irreversible_block_arguments message. Does not implicitly {@link koinos.chain.get_last_irreversible_block_arguments.verify|verify} messages.
             * @param message get_last_irreversible_block_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iget_last_irreversible_block_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified get_last_irreversible_block_arguments message, length delimited. Does not implicitly {@link koinos.chain.get_last_irreversible_block_arguments.verify|verify} messages.
             * @param message get_last_irreversible_block_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iget_last_irreversible_block_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a get_last_irreversible_block_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns get_last_irreversible_block_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.get_last_irreversible_block_arguments;

            /**
             * Decodes a get_last_irreversible_block_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns get_last_irreversible_block_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.get_last_irreversible_block_arguments;

            /**
             * Verifies a get_last_irreversible_block_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a get_last_irreversible_block_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns get_last_irreversible_block_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.get_last_irreversible_block_arguments;

            /**
             * Creates a plain object from a get_last_irreversible_block_arguments message. Also converts values to other types if specified.
             * @param message get_last_irreversible_block_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.get_last_irreversible_block_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this get_last_irreversible_block_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a get_last_irreversible_block_result. */
        interface Iget_last_irreversible_block_result {

            /** get_last_irreversible_block_result value */
            value?: (number|Long|null);
        }

        /** Represents a get_last_irreversible_block_result. */
        class get_last_irreversible_block_result implements Iget_last_irreversible_block_result {

            /**
             * Constructs a new get_last_irreversible_block_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iget_last_irreversible_block_result);

            /** get_last_irreversible_block_result value. */
            public value: (number|Long);

            /**
             * Creates a new get_last_irreversible_block_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns get_last_irreversible_block_result instance
             */
            public static create(properties?: koinos.chain.Iget_last_irreversible_block_result): koinos.chain.get_last_irreversible_block_result;

            /**
             * Encodes the specified get_last_irreversible_block_result message. Does not implicitly {@link koinos.chain.get_last_irreversible_block_result.verify|verify} messages.
             * @param message get_last_irreversible_block_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iget_last_irreversible_block_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified get_last_irreversible_block_result message, length delimited. Does not implicitly {@link koinos.chain.get_last_irreversible_block_result.verify|verify} messages.
             * @param message get_last_irreversible_block_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iget_last_irreversible_block_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a get_last_irreversible_block_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns get_last_irreversible_block_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.get_last_irreversible_block_result;

            /**
             * Decodes a get_last_irreversible_block_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns get_last_irreversible_block_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.get_last_irreversible_block_result;

            /**
             * Verifies a get_last_irreversible_block_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a get_last_irreversible_block_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns get_last_irreversible_block_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.get_last_irreversible_block_result;

            /**
             * Creates a plain object from a get_last_irreversible_block_result message. Also converts values to other types if specified.
             * @param message get_last_irreversible_block_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.get_last_irreversible_block_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this get_last_irreversible_block_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a get_account_nonce_arguments. */
        interface Iget_account_nonce_arguments {

            /** get_account_nonce_arguments account */
            account?: (Uint8Array|null);
        }

        /** Represents a get_account_nonce_arguments. */
        class get_account_nonce_arguments implements Iget_account_nonce_arguments {

            /**
             * Constructs a new get_account_nonce_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iget_account_nonce_arguments);

            /** get_account_nonce_arguments account. */
            public account: Uint8Array;

            /**
             * Creates a new get_account_nonce_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns get_account_nonce_arguments instance
             */
            public static create(properties?: koinos.chain.Iget_account_nonce_arguments): koinos.chain.get_account_nonce_arguments;

            /**
             * Encodes the specified get_account_nonce_arguments message. Does not implicitly {@link koinos.chain.get_account_nonce_arguments.verify|verify} messages.
             * @param message get_account_nonce_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iget_account_nonce_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified get_account_nonce_arguments message, length delimited. Does not implicitly {@link koinos.chain.get_account_nonce_arguments.verify|verify} messages.
             * @param message get_account_nonce_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iget_account_nonce_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a get_account_nonce_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns get_account_nonce_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.get_account_nonce_arguments;

            /**
             * Decodes a get_account_nonce_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns get_account_nonce_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.get_account_nonce_arguments;

            /**
             * Verifies a get_account_nonce_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a get_account_nonce_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns get_account_nonce_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.get_account_nonce_arguments;

            /**
             * Creates a plain object from a get_account_nonce_arguments message. Also converts values to other types if specified.
             * @param message get_account_nonce_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.get_account_nonce_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this get_account_nonce_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a get_account_nonce_result. */
        interface Iget_account_nonce_result {

            /** get_account_nonce_result value */
            value?: (Uint8Array|null);
        }

        /** Represents a get_account_nonce_result. */
        class get_account_nonce_result implements Iget_account_nonce_result {

            /**
             * Constructs a new get_account_nonce_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iget_account_nonce_result);

            /** get_account_nonce_result value. */
            public value: Uint8Array;

            /**
             * Creates a new get_account_nonce_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns get_account_nonce_result instance
             */
            public static create(properties?: koinos.chain.Iget_account_nonce_result): koinos.chain.get_account_nonce_result;

            /**
             * Encodes the specified get_account_nonce_result message. Does not implicitly {@link koinos.chain.get_account_nonce_result.verify|verify} messages.
             * @param message get_account_nonce_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iget_account_nonce_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified get_account_nonce_result message, length delimited. Does not implicitly {@link koinos.chain.get_account_nonce_result.verify|verify} messages.
             * @param message get_account_nonce_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iget_account_nonce_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a get_account_nonce_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns get_account_nonce_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.get_account_nonce_result;

            /**
             * Decodes a get_account_nonce_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns get_account_nonce_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.get_account_nonce_result;

            /**
             * Verifies a get_account_nonce_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a get_account_nonce_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns get_account_nonce_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.get_account_nonce_result;

            /**
             * Creates a plain object from a get_account_nonce_result message. Also converts values to other types if specified.
             * @param message get_account_nonce_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.get_account_nonce_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this get_account_nonce_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a verify_account_nonce_arguments. */
        interface Iverify_account_nonce_arguments {

            /** verify_account_nonce_arguments account */
            account?: (Uint8Array|null);

            /** verify_account_nonce_arguments nonce */
            nonce?: (Uint8Array|null);
        }

        /** Represents a verify_account_nonce_arguments. */
        class verify_account_nonce_arguments implements Iverify_account_nonce_arguments {

            /**
             * Constructs a new verify_account_nonce_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iverify_account_nonce_arguments);

            /** verify_account_nonce_arguments account. */
            public account: Uint8Array;

            /** verify_account_nonce_arguments nonce. */
            public nonce: Uint8Array;

            /**
             * Creates a new verify_account_nonce_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns verify_account_nonce_arguments instance
             */
            public static create(properties?: koinos.chain.Iverify_account_nonce_arguments): koinos.chain.verify_account_nonce_arguments;

            /**
             * Encodes the specified verify_account_nonce_arguments message. Does not implicitly {@link koinos.chain.verify_account_nonce_arguments.verify|verify} messages.
             * @param message verify_account_nonce_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iverify_account_nonce_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified verify_account_nonce_arguments message, length delimited. Does not implicitly {@link koinos.chain.verify_account_nonce_arguments.verify|verify} messages.
             * @param message verify_account_nonce_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iverify_account_nonce_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a verify_account_nonce_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns verify_account_nonce_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.verify_account_nonce_arguments;

            /**
             * Decodes a verify_account_nonce_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns verify_account_nonce_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.verify_account_nonce_arguments;

            /**
             * Verifies a verify_account_nonce_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a verify_account_nonce_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns verify_account_nonce_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.verify_account_nonce_arguments;

            /**
             * Creates a plain object from a verify_account_nonce_arguments message. Also converts values to other types if specified.
             * @param message verify_account_nonce_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.verify_account_nonce_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this verify_account_nonce_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a verify_account_nonce_result. */
        interface Iverify_account_nonce_result {

            /** verify_account_nonce_result value */
            value?: (boolean|null);
        }

        /** Represents a verify_account_nonce_result. */
        class verify_account_nonce_result implements Iverify_account_nonce_result {

            /**
             * Constructs a new verify_account_nonce_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iverify_account_nonce_result);

            /** verify_account_nonce_result value. */
            public value: boolean;

            /**
             * Creates a new verify_account_nonce_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns verify_account_nonce_result instance
             */
            public static create(properties?: koinos.chain.Iverify_account_nonce_result): koinos.chain.verify_account_nonce_result;

            /**
             * Encodes the specified verify_account_nonce_result message. Does not implicitly {@link koinos.chain.verify_account_nonce_result.verify|verify} messages.
             * @param message verify_account_nonce_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iverify_account_nonce_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified verify_account_nonce_result message, length delimited. Does not implicitly {@link koinos.chain.verify_account_nonce_result.verify|verify} messages.
             * @param message verify_account_nonce_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iverify_account_nonce_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a verify_account_nonce_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns verify_account_nonce_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.verify_account_nonce_result;

            /**
             * Decodes a verify_account_nonce_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns verify_account_nonce_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.verify_account_nonce_result;

            /**
             * Verifies a verify_account_nonce_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a verify_account_nonce_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns verify_account_nonce_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.verify_account_nonce_result;

            /**
             * Creates a plain object from a verify_account_nonce_result message. Also converts values to other types if specified.
             * @param message verify_account_nonce_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.verify_account_nonce_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this verify_account_nonce_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a set_account_nonce_arguments. */
        interface Iset_account_nonce_arguments {

            /** set_account_nonce_arguments account */
            account?: (Uint8Array|null);

            /** set_account_nonce_arguments nonce */
            nonce?: (Uint8Array|null);
        }

        /** Represents a set_account_nonce_arguments. */
        class set_account_nonce_arguments implements Iset_account_nonce_arguments {

            /**
             * Constructs a new set_account_nonce_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iset_account_nonce_arguments);

            /** set_account_nonce_arguments account. */
            public account: Uint8Array;

            /** set_account_nonce_arguments nonce. */
            public nonce: Uint8Array;

            /**
             * Creates a new set_account_nonce_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns set_account_nonce_arguments instance
             */
            public static create(properties?: koinos.chain.Iset_account_nonce_arguments): koinos.chain.set_account_nonce_arguments;

            /**
             * Encodes the specified set_account_nonce_arguments message. Does not implicitly {@link koinos.chain.set_account_nonce_arguments.verify|verify} messages.
             * @param message set_account_nonce_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iset_account_nonce_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified set_account_nonce_arguments message, length delimited. Does not implicitly {@link koinos.chain.set_account_nonce_arguments.verify|verify} messages.
             * @param message set_account_nonce_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iset_account_nonce_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a set_account_nonce_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns set_account_nonce_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.set_account_nonce_arguments;

            /**
             * Decodes a set_account_nonce_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns set_account_nonce_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.set_account_nonce_arguments;

            /**
             * Verifies a set_account_nonce_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a set_account_nonce_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns set_account_nonce_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.set_account_nonce_arguments;

            /**
             * Creates a plain object from a set_account_nonce_arguments message. Also converts values to other types if specified.
             * @param message set_account_nonce_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.set_account_nonce_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this set_account_nonce_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a set_account_nonce_result. */
        interface Iset_account_nonce_result {
        }

        /** Represents a set_account_nonce_result. */
        class set_account_nonce_result implements Iset_account_nonce_result {

            /**
             * Constructs a new set_account_nonce_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iset_account_nonce_result);

            /**
             * Creates a new set_account_nonce_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns set_account_nonce_result instance
             */
            public static create(properties?: koinos.chain.Iset_account_nonce_result): koinos.chain.set_account_nonce_result;

            /**
             * Encodes the specified set_account_nonce_result message. Does not implicitly {@link koinos.chain.set_account_nonce_result.verify|verify} messages.
             * @param message set_account_nonce_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iset_account_nonce_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified set_account_nonce_result message, length delimited. Does not implicitly {@link koinos.chain.set_account_nonce_result.verify|verify} messages.
             * @param message set_account_nonce_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iset_account_nonce_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a set_account_nonce_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns set_account_nonce_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.set_account_nonce_result;

            /**
             * Decodes a set_account_nonce_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns set_account_nonce_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.set_account_nonce_result;

            /**
             * Verifies a set_account_nonce_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a set_account_nonce_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns set_account_nonce_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.set_account_nonce_result;

            /**
             * Creates a plain object from a set_account_nonce_result message. Also converts values to other types if specified.
             * @param message set_account_nonce_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.set_account_nonce_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this set_account_nonce_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a check_system_authority_arguments. */
        interface Icheck_system_authority_arguments {
        }

        /** Represents a check_system_authority_arguments. */
        class check_system_authority_arguments implements Icheck_system_authority_arguments {

            /**
             * Constructs a new check_system_authority_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Icheck_system_authority_arguments);

            /**
             * Creates a new check_system_authority_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns check_system_authority_arguments instance
             */
            public static create(properties?: koinos.chain.Icheck_system_authority_arguments): koinos.chain.check_system_authority_arguments;

            /**
             * Encodes the specified check_system_authority_arguments message. Does not implicitly {@link koinos.chain.check_system_authority_arguments.verify|verify} messages.
             * @param message check_system_authority_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Icheck_system_authority_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified check_system_authority_arguments message, length delimited. Does not implicitly {@link koinos.chain.check_system_authority_arguments.verify|verify} messages.
             * @param message check_system_authority_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Icheck_system_authority_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a check_system_authority_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns check_system_authority_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.check_system_authority_arguments;

            /**
             * Decodes a check_system_authority_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns check_system_authority_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.check_system_authority_arguments;

            /**
             * Verifies a check_system_authority_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a check_system_authority_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns check_system_authority_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.check_system_authority_arguments;

            /**
             * Creates a plain object from a check_system_authority_arguments message. Also converts values to other types if specified.
             * @param message check_system_authority_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.check_system_authority_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this check_system_authority_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a check_system_authority_result. */
        interface Icheck_system_authority_result {

            /** check_system_authority_result value */
            value?: (boolean|null);
        }

        /** Represents a check_system_authority_result. */
        class check_system_authority_result implements Icheck_system_authority_result {

            /**
             * Constructs a new check_system_authority_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Icheck_system_authority_result);

            /** check_system_authority_result value. */
            public value: boolean;

            /**
             * Creates a new check_system_authority_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns check_system_authority_result instance
             */
            public static create(properties?: koinos.chain.Icheck_system_authority_result): koinos.chain.check_system_authority_result;

            /**
             * Encodes the specified check_system_authority_result message. Does not implicitly {@link koinos.chain.check_system_authority_result.verify|verify} messages.
             * @param message check_system_authority_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Icheck_system_authority_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified check_system_authority_result message, length delimited. Does not implicitly {@link koinos.chain.check_system_authority_result.verify|verify} messages.
             * @param message check_system_authority_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Icheck_system_authority_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a check_system_authority_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns check_system_authority_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.check_system_authority_result;

            /**
             * Decodes a check_system_authority_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns check_system_authority_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.check_system_authority_result;

            /**
             * Verifies a check_system_authority_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a check_system_authority_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns check_system_authority_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.check_system_authority_result;

            /**
             * Creates a plain object from a check_system_authority_result message. Also converts values to other types if specified.
             * @param message check_system_authority_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.check_system_authority_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this check_system_authority_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a get_operation_arguments. */
        interface Iget_operation_arguments {
        }

        /** Represents a get_operation_arguments. */
        class get_operation_arguments implements Iget_operation_arguments {

            /**
             * Constructs a new get_operation_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iget_operation_arguments);

            /**
             * Creates a new get_operation_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns get_operation_arguments instance
             */
            public static create(properties?: koinos.chain.Iget_operation_arguments): koinos.chain.get_operation_arguments;

            /**
             * Encodes the specified get_operation_arguments message. Does not implicitly {@link koinos.chain.get_operation_arguments.verify|verify} messages.
             * @param message get_operation_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iget_operation_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified get_operation_arguments message, length delimited. Does not implicitly {@link koinos.chain.get_operation_arguments.verify|verify} messages.
             * @param message get_operation_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iget_operation_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a get_operation_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns get_operation_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.get_operation_arguments;

            /**
             * Decodes a get_operation_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns get_operation_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.get_operation_arguments;

            /**
             * Verifies a get_operation_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a get_operation_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns get_operation_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.get_operation_arguments;

            /**
             * Creates a plain object from a get_operation_arguments message. Also converts values to other types if specified.
             * @param message get_operation_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.get_operation_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this get_operation_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a get_operation_result. */
        interface Iget_operation_result {

            /** get_operation_result value */
            value?: (koinos.protocol.Ioperation|null);
        }

        /** Represents a get_operation_result. */
        class get_operation_result implements Iget_operation_result {

            /**
             * Constructs a new get_operation_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iget_operation_result);

            /** get_operation_result value. */
            public value?: (koinos.protocol.Ioperation|null);

            /**
             * Creates a new get_operation_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns get_operation_result instance
             */
            public static create(properties?: koinos.chain.Iget_operation_result): koinos.chain.get_operation_result;

            /**
             * Encodes the specified get_operation_result message. Does not implicitly {@link koinos.chain.get_operation_result.verify|verify} messages.
             * @param message get_operation_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iget_operation_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified get_operation_result message, length delimited. Does not implicitly {@link koinos.chain.get_operation_result.verify|verify} messages.
             * @param message get_operation_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iget_operation_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a get_operation_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns get_operation_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.get_operation_result;

            /**
             * Decodes a get_operation_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns get_operation_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.get_operation_result;

            /**
             * Verifies a get_operation_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a get_operation_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns get_operation_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.get_operation_result;

            /**
             * Creates a plain object from a get_operation_result message. Also converts values to other types if specified.
             * @param message get_operation_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.get_operation_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this get_operation_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a get_contract_metadata_arguments. */
        interface Iget_contract_metadata_arguments {

            /** get_contract_metadata_arguments contract_id */
            contract_id?: (Uint8Array|null);
        }

        /** Represents a get_contract_metadata_arguments. */
        class get_contract_metadata_arguments implements Iget_contract_metadata_arguments {

            /**
             * Constructs a new get_contract_metadata_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iget_contract_metadata_arguments);

            /** get_contract_metadata_arguments contract_id. */
            public contract_id: Uint8Array;

            /**
             * Creates a new get_contract_metadata_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns get_contract_metadata_arguments instance
             */
            public static create(properties?: koinos.chain.Iget_contract_metadata_arguments): koinos.chain.get_contract_metadata_arguments;

            /**
             * Encodes the specified get_contract_metadata_arguments message. Does not implicitly {@link koinos.chain.get_contract_metadata_arguments.verify|verify} messages.
             * @param message get_contract_metadata_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iget_contract_metadata_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified get_contract_metadata_arguments message, length delimited. Does not implicitly {@link koinos.chain.get_contract_metadata_arguments.verify|verify} messages.
             * @param message get_contract_metadata_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iget_contract_metadata_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a get_contract_metadata_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns get_contract_metadata_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.get_contract_metadata_arguments;

            /**
             * Decodes a get_contract_metadata_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns get_contract_metadata_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.get_contract_metadata_arguments;

            /**
             * Verifies a get_contract_metadata_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a get_contract_metadata_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns get_contract_metadata_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.get_contract_metadata_arguments;

            /**
             * Creates a plain object from a get_contract_metadata_arguments message. Also converts values to other types if specified.
             * @param message get_contract_metadata_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.get_contract_metadata_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this get_contract_metadata_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a get_contract_metadata_result. */
        interface Iget_contract_metadata_result {

            /** get_contract_metadata_result value */
            value?: (koinos.chain.Icontract_metadata_object|null);
        }

        /** Represents a get_contract_metadata_result. */
        class get_contract_metadata_result implements Iget_contract_metadata_result {

            /**
             * Constructs a new get_contract_metadata_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iget_contract_metadata_result);

            /** get_contract_metadata_result value. */
            public value?: (koinos.chain.Icontract_metadata_object|null);

            /**
             * Creates a new get_contract_metadata_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns get_contract_metadata_result instance
             */
            public static create(properties?: koinos.chain.Iget_contract_metadata_result): koinos.chain.get_contract_metadata_result;

            /**
             * Encodes the specified get_contract_metadata_result message. Does not implicitly {@link koinos.chain.get_contract_metadata_result.verify|verify} messages.
             * @param message get_contract_metadata_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iget_contract_metadata_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified get_contract_metadata_result message, length delimited. Does not implicitly {@link koinos.chain.get_contract_metadata_result.verify|verify} messages.
             * @param message get_contract_metadata_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iget_contract_metadata_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a get_contract_metadata_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns get_contract_metadata_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.get_contract_metadata_result;

            /**
             * Decodes a get_contract_metadata_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns get_contract_metadata_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.get_contract_metadata_result;

            /**
             * Verifies a get_contract_metadata_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a get_contract_metadata_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns get_contract_metadata_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.get_contract_metadata_result;

            /**
             * Creates a plain object from a get_contract_metadata_result message. Also converts values to other types if specified.
             * @param message get_contract_metadata_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.get_contract_metadata_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this get_contract_metadata_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a get_account_rc_arguments. */
        interface Iget_account_rc_arguments {

            /** get_account_rc_arguments account */
            account?: (Uint8Array|null);
        }

        /** Represents a get_account_rc_arguments. */
        class get_account_rc_arguments implements Iget_account_rc_arguments {

            /**
             * Constructs a new get_account_rc_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iget_account_rc_arguments);

            /** get_account_rc_arguments account. */
            public account: Uint8Array;

            /**
             * Creates a new get_account_rc_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns get_account_rc_arguments instance
             */
            public static create(properties?: koinos.chain.Iget_account_rc_arguments): koinos.chain.get_account_rc_arguments;

            /**
             * Encodes the specified get_account_rc_arguments message. Does not implicitly {@link koinos.chain.get_account_rc_arguments.verify|verify} messages.
             * @param message get_account_rc_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iget_account_rc_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified get_account_rc_arguments message, length delimited. Does not implicitly {@link koinos.chain.get_account_rc_arguments.verify|verify} messages.
             * @param message get_account_rc_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iget_account_rc_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a get_account_rc_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns get_account_rc_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.get_account_rc_arguments;

            /**
             * Decodes a get_account_rc_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns get_account_rc_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.get_account_rc_arguments;

            /**
             * Verifies a get_account_rc_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a get_account_rc_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns get_account_rc_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.get_account_rc_arguments;

            /**
             * Creates a plain object from a get_account_rc_arguments message. Also converts values to other types if specified.
             * @param message get_account_rc_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.get_account_rc_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this get_account_rc_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a get_account_rc_result. */
        interface Iget_account_rc_result {

            /** get_account_rc_result value */
            value?: (number|Long|null);
        }

        /** Represents a get_account_rc_result. */
        class get_account_rc_result implements Iget_account_rc_result {

            /**
             * Constructs a new get_account_rc_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iget_account_rc_result);

            /** get_account_rc_result value. */
            public value: (number|Long);

            /**
             * Creates a new get_account_rc_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns get_account_rc_result instance
             */
            public static create(properties?: koinos.chain.Iget_account_rc_result): koinos.chain.get_account_rc_result;

            /**
             * Encodes the specified get_account_rc_result message. Does not implicitly {@link koinos.chain.get_account_rc_result.verify|verify} messages.
             * @param message get_account_rc_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iget_account_rc_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified get_account_rc_result message, length delimited. Does not implicitly {@link koinos.chain.get_account_rc_result.verify|verify} messages.
             * @param message get_account_rc_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iget_account_rc_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a get_account_rc_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns get_account_rc_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.get_account_rc_result;

            /**
             * Decodes a get_account_rc_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns get_account_rc_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.get_account_rc_result;

            /**
             * Verifies a get_account_rc_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a get_account_rc_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns get_account_rc_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.get_account_rc_result;

            /**
             * Creates a plain object from a get_account_rc_result message. Also converts values to other types if specified.
             * @param message get_account_rc_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.get_account_rc_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this get_account_rc_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a consume_account_rc_arguments. */
        interface Iconsume_account_rc_arguments {

            /** consume_account_rc_arguments account */
            account?: (Uint8Array|null);

            /** consume_account_rc_arguments value */
            value?: (number|Long|null);
        }

        /** Represents a consume_account_rc_arguments. */
        class consume_account_rc_arguments implements Iconsume_account_rc_arguments {

            /**
             * Constructs a new consume_account_rc_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iconsume_account_rc_arguments);

            /** consume_account_rc_arguments account. */
            public account: Uint8Array;

            /** consume_account_rc_arguments value. */
            public value: (number|Long);

            /**
             * Creates a new consume_account_rc_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns consume_account_rc_arguments instance
             */
            public static create(properties?: koinos.chain.Iconsume_account_rc_arguments): koinos.chain.consume_account_rc_arguments;

            /**
             * Encodes the specified consume_account_rc_arguments message. Does not implicitly {@link koinos.chain.consume_account_rc_arguments.verify|verify} messages.
             * @param message consume_account_rc_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iconsume_account_rc_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified consume_account_rc_arguments message, length delimited. Does not implicitly {@link koinos.chain.consume_account_rc_arguments.verify|verify} messages.
             * @param message consume_account_rc_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iconsume_account_rc_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a consume_account_rc_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns consume_account_rc_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.consume_account_rc_arguments;

            /**
             * Decodes a consume_account_rc_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns consume_account_rc_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.consume_account_rc_arguments;

            /**
             * Verifies a consume_account_rc_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a consume_account_rc_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns consume_account_rc_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.consume_account_rc_arguments;

            /**
             * Creates a plain object from a consume_account_rc_arguments message. Also converts values to other types if specified.
             * @param message consume_account_rc_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.consume_account_rc_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this consume_account_rc_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a consume_account_rc_result. */
        interface Iconsume_account_rc_result {

            /** consume_account_rc_result value */
            value?: (boolean|null);
        }

        /** Represents a consume_account_rc_result. */
        class consume_account_rc_result implements Iconsume_account_rc_result {

            /**
             * Constructs a new consume_account_rc_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iconsume_account_rc_result);

            /** consume_account_rc_result value. */
            public value: boolean;

            /**
             * Creates a new consume_account_rc_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns consume_account_rc_result instance
             */
            public static create(properties?: koinos.chain.Iconsume_account_rc_result): koinos.chain.consume_account_rc_result;

            /**
             * Encodes the specified consume_account_rc_result message. Does not implicitly {@link koinos.chain.consume_account_rc_result.verify|verify} messages.
             * @param message consume_account_rc_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iconsume_account_rc_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified consume_account_rc_result message, length delimited. Does not implicitly {@link koinos.chain.consume_account_rc_result.verify|verify} messages.
             * @param message consume_account_rc_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iconsume_account_rc_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a consume_account_rc_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns consume_account_rc_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.consume_account_rc_result;

            /**
             * Decodes a consume_account_rc_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns consume_account_rc_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.consume_account_rc_result;

            /**
             * Verifies a consume_account_rc_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a consume_account_rc_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns consume_account_rc_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.consume_account_rc_result;

            /**
             * Creates a plain object from a consume_account_rc_result message. Also converts values to other types if specified.
             * @param message consume_account_rc_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.consume_account_rc_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this consume_account_rc_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a get_resource_limits_arguments. */
        interface Iget_resource_limits_arguments {
        }

        /** Represents a get_resource_limits_arguments. */
        class get_resource_limits_arguments implements Iget_resource_limits_arguments {

            /**
             * Constructs a new get_resource_limits_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iget_resource_limits_arguments);

            /**
             * Creates a new get_resource_limits_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns get_resource_limits_arguments instance
             */
            public static create(properties?: koinos.chain.Iget_resource_limits_arguments): koinos.chain.get_resource_limits_arguments;

            /**
             * Encodes the specified get_resource_limits_arguments message. Does not implicitly {@link koinos.chain.get_resource_limits_arguments.verify|verify} messages.
             * @param message get_resource_limits_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iget_resource_limits_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified get_resource_limits_arguments message, length delimited. Does not implicitly {@link koinos.chain.get_resource_limits_arguments.verify|verify} messages.
             * @param message get_resource_limits_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iget_resource_limits_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a get_resource_limits_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns get_resource_limits_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.get_resource_limits_arguments;

            /**
             * Decodes a get_resource_limits_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns get_resource_limits_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.get_resource_limits_arguments;

            /**
             * Verifies a get_resource_limits_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a get_resource_limits_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns get_resource_limits_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.get_resource_limits_arguments;

            /**
             * Creates a plain object from a get_resource_limits_arguments message. Also converts values to other types if specified.
             * @param message get_resource_limits_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.get_resource_limits_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this get_resource_limits_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a get_resource_limits_result. */
        interface Iget_resource_limits_result {

            /** get_resource_limits_result value */
            value?: (koinos.chain.Iresource_limit_data|null);
        }

        /** Represents a get_resource_limits_result. */
        class get_resource_limits_result implements Iget_resource_limits_result {

            /**
             * Constructs a new get_resource_limits_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iget_resource_limits_result);

            /** get_resource_limits_result value. */
            public value?: (koinos.chain.Iresource_limit_data|null);

            /**
             * Creates a new get_resource_limits_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns get_resource_limits_result instance
             */
            public static create(properties?: koinos.chain.Iget_resource_limits_result): koinos.chain.get_resource_limits_result;

            /**
             * Encodes the specified get_resource_limits_result message. Does not implicitly {@link koinos.chain.get_resource_limits_result.verify|verify} messages.
             * @param message get_resource_limits_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iget_resource_limits_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified get_resource_limits_result message, length delimited. Does not implicitly {@link koinos.chain.get_resource_limits_result.verify|verify} messages.
             * @param message get_resource_limits_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iget_resource_limits_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a get_resource_limits_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns get_resource_limits_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.get_resource_limits_result;

            /**
             * Decodes a get_resource_limits_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns get_resource_limits_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.get_resource_limits_result;

            /**
             * Verifies a get_resource_limits_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a get_resource_limits_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns get_resource_limits_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.get_resource_limits_result;

            /**
             * Creates a plain object from a get_resource_limits_result message. Also converts values to other types if specified.
             * @param message get_resource_limits_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.get_resource_limits_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this get_resource_limits_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a consume_block_resources_arguments. */
        interface Iconsume_block_resources_arguments {

            /** consume_block_resources_arguments disk_storage_consumed */
            disk_storage_consumed?: (number|Long|null);

            /** consume_block_resources_arguments network_bandwidth_consumed */
            network_bandwidth_consumed?: (number|Long|null);

            /** consume_block_resources_arguments compute_bandwidth_consumed */
            compute_bandwidth_consumed?: (number|Long|null);
        }

        /** Represents a consume_block_resources_arguments. */
        class consume_block_resources_arguments implements Iconsume_block_resources_arguments {

            /**
             * Constructs a new consume_block_resources_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iconsume_block_resources_arguments);

            /** consume_block_resources_arguments disk_storage_consumed. */
            public disk_storage_consumed: (number|Long);

            /** consume_block_resources_arguments network_bandwidth_consumed. */
            public network_bandwidth_consumed: (number|Long);

            /** consume_block_resources_arguments compute_bandwidth_consumed. */
            public compute_bandwidth_consumed: (number|Long);

            /**
             * Creates a new consume_block_resources_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns consume_block_resources_arguments instance
             */
            public static create(properties?: koinos.chain.Iconsume_block_resources_arguments): koinos.chain.consume_block_resources_arguments;

            /**
             * Encodes the specified consume_block_resources_arguments message. Does not implicitly {@link koinos.chain.consume_block_resources_arguments.verify|verify} messages.
             * @param message consume_block_resources_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iconsume_block_resources_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified consume_block_resources_arguments message, length delimited. Does not implicitly {@link koinos.chain.consume_block_resources_arguments.verify|verify} messages.
             * @param message consume_block_resources_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iconsume_block_resources_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a consume_block_resources_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns consume_block_resources_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.consume_block_resources_arguments;

            /**
             * Decodes a consume_block_resources_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns consume_block_resources_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.consume_block_resources_arguments;

            /**
             * Verifies a consume_block_resources_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a consume_block_resources_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns consume_block_resources_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.consume_block_resources_arguments;

            /**
             * Creates a plain object from a consume_block_resources_arguments message. Also converts values to other types if specified.
             * @param message consume_block_resources_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.consume_block_resources_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this consume_block_resources_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a consume_block_resources_result. */
        interface Iconsume_block_resources_result {

            /** consume_block_resources_result value */
            value?: (boolean|null);
        }

        /** Represents a consume_block_resources_result. */
        class consume_block_resources_result implements Iconsume_block_resources_result {

            /**
             * Constructs a new consume_block_resources_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iconsume_block_resources_result);

            /** consume_block_resources_result value. */
            public value: boolean;

            /**
             * Creates a new consume_block_resources_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns consume_block_resources_result instance
             */
            public static create(properties?: koinos.chain.Iconsume_block_resources_result): koinos.chain.consume_block_resources_result;

            /**
             * Encodes the specified consume_block_resources_result message. Does not implicitly {@link koinos.chain.consume_block_resources_result.verify|verify} messages.
             * @param message consume_block_resources_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iconsume_block_resources_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified consume_block_resources_result message, length delimited. Does not implicitly {@link koinos.chain.consume_block_resources_result.verify|verify} messages.
             * @param message consume_block_resources_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iconsume_block_resources_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a consume_block_resources_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns consume_block_resources_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.consume_block_resources_result;

            /**
             * Decodes a consume_block_resources_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns consume_block_resources_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.consume_block_resources_result;

            /**
             * Verifies a consume_block_resources_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a consume_block_resources_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns consume_block_resources_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.consume_block_resources_result;

            /**
             * Creates a plain object from a consume_block_resources_result message. Also converts values to other types if specified.
             * @param message consume_block_resources_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.consume_block_resources_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this consume_block_resources_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a put_object_arguments. */
        interface Iput_object_arguments {

            /** put_object_arguments space */
            space?: (koinos.chain.Iobject_space|null);

            /** put_object_arguments key */
            key?: (Uint8Array|null);

            /** put_object_arguments obj */
            obj?: (Uint8Array|null);
        }

        /** Represents a put_object_arguments. */
        class put_object_arguments implements Iput_object_arguments {

            /**
             * Constructs a new put_object_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iput_object_arguments);

            /** put_object_arguments space. */
            public space?: (koinos.chain.Iobject_space|null);

            /** put_object_arguments key. */
            public key: Uint8Array;

            /** put_object_arguments obj. */
            public obj: Uint8Array;

            /**
             * Creates a new put_object_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns put_object_arguments instance
             */
            public static create(properties?: koinos.chain.Iput_object_arguments): koinos.chain.put_object_arguments;

            /**
             * Encodes the specified put_object_arguments message. Does not implicitly {@link koinos.chain.put_object_arguments.verify|verify} messages.
             * @param message put_object_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iput_object_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified put_object_arguments message, length delimited. Does not implicitly {@link koinos.chain.put_object_arguments.verify|verify} messages.
             * @param message put_object_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iput_object_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a put_object_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns put_object_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.put_object_arguments;

            /**
             * Decodes a put_object_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns put_object_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.put_object_arguments;

            /**
             * Verifies a put_object_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a put_object_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns put_object_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.put_object_arguments;

            /**
             * Creates a plain object from a put_object_arguments message. Also converts values to other types if specified.
             * @param message put_object_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.put_object_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this put_object_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a put_object_result. */
        interface Iput_object_result {
        }

        /** Represents a put_object_result. */
        class put_object_result implements Iput_object_result {

            /**
             * Constructs a new put_object_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iput_object_result);

            /**
             * Creates a new put_object_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns put_object_result instance
             */
            public static create(properties?: koinos.chain.Iput_object_result): koinos.chain.put_object_result;

            /**
             * Encodes the specified put_object_result message. Does not implicitly {@link koinos.chain.put_object_result.verify|verify} messages.
             * @param message put_object_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iput_object_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified put_object_result message, length delimited. Does not implicitly {@link koinos.chain.put_object_result.verify|verify} messages.
             * @param message put_object_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iput_object_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a put_object_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns put_object_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.put_object_result;

            /**
             * Decodes a put_object_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns put_object_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.put_object_result;

            /**
             * Verifies a put_object_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a put_object_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns put_object_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.put_object_result;

            /**
             * Creates a plain object from a put_object_result message. Also converts values to other types if specified.
             * @param message put_object_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.put_object_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this put_object_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a remove_object_arguments. */
        interface Iremove_object_arguments {

            /** remove_object_arguments space */
            space?: (koinos.chain.Iobject_space|null);

            /** remove_object_arguments key */
            key?: (Uint8Array|null);
        }

        /** Represents a remove_object_arguments. */
        class remove_object_arguments implements Iremove_object_arguments {

            /**
             * Constructs a new remove_object_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iremove_object_arguments);

            /** remove_object_arguments space. */
            public space?: (koinos.chain.Iobject_space|null);

            /** remove_object_arguments key. */
            public key: Uint8Array;

            /**
             * Creates a new remove_object_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns remove_object_arguments instance
             */
            public static create(properties?: koinos.chain.Iremove_object_arguments): koinos.chain.remove_object_arguments;

            /**
             * Encodes the specified remove_object_arguments message. Does not implicitly {@link koinos.chain.remove_object_arguments.verify|verify} messages.
             * @param message remove_object_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iremove_object_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified remove_object_arguments message, length delimited. Does not implicitly {@link koinos.chain.remove_object_arguments.verify|verify} messages.
             * @param message remove_object_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iremove_object_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a remove_object_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns remove_object_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.remove_object_arguments;

            /**
             * Decodes a remove_object_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns remove_object_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.remove_object_arguments;

            /**
             * Verifies a remove_object_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a remove_object_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns remove_object_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.remove_object_arguments;

            /**
             * Creates a plain object from a remove_object_arguments message. Also converts values to other types if specified.
             * @param message remove_object_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.remove_object_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this remove_object_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a remove_object_result. */
        interface Iremove_object_result {
        }

        /** Represents a remove_object_result. */
        class remove_object_result implements Iremove_object_result {

            /**
             * Constructs a new remove_object_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iremove_object_result);

            /**
             * Creates a new remove_object_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns remove_object_result instance
             */
            public static create(properties?: koinos.chain.Iremove_object_result): koinos.chain.remove_object_result;

            /**
             * Encodes the specified remove_object_result message. Does not implicitly {@link koinos.chain.remove_object_result.verify|verify} messages.
             * @param message remove_object_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iremove_object_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified remove_object_result message, length delimited. Does not implicitly {@link koinos.chain.remove_object_result.verify|verify} messages.
             * @param message remove_object_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iremove_object_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a remove_object_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns remove_object_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.remove_object_result;

            /**
             * Decodes a remove_object_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns remove_object_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.remove_object_result;

            /**
             * Verifies a remove_object_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a remove_object_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns remove_object_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.remove_object_result;

            /**
             * Creates a plain object from a remove_object_result message. Also converts values to other types if specified.
             * @param message remove_object_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.remove_object_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this remove_object_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a get_object_arguments. */
        interface Iget_object_arguments {

            /** get_object_arguments space */
            space?: (koinos.chain.Iobject_space|null);

            /** get_object_arguments key */
            key?: (Uint8Array|null);
        }

        /** Represents a get_object_arguments. */
        class get_object_arguments implements Iget_object_arguments {

            /**
             * Constructs a new get_object_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iget_object_arguments);

            /** get_object_arguments space. */
            public space?: (koinos.chain.Iobject_space|null);

            /** get_object_arguments key. */
            public key: Uint8Array;

            /**
             * Creates a new get_object_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns get_object_arguments instance
             */
            public static create(properties?: koinos.chain.Iget_object_arguments): koinos.chain.get_object_arguments;

            /**
             * Encodes the specified get_object_arguments message. Does not implicitly {@link koinos.chain.get_object_arguments.verify|verify} messages.
             * @param message get_object_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iget_object_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified get_object_arguments message, length delimited. Does not implicitly {@link koinos.chain.get_object_arguments.verify|verify} messages.
             * @param message get_object_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iget_object_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a get_object_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns get_object_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.get_object_arguments;

            /**
             * Decodes a get_object_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns get_object_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.get_object_arguments;

            /**
             * Verifies a get_object_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a get_object_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns get_object_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.get_object_arguments;

            /**
             * Creates a plain object from a get_object_arguments message. Also converts values to other types if specified.
             * @param message get_object_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.get_object_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this get_object_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a database_object. */
        interface Idatabase_object {

            /** database_object exists */
            exists?: (boolean|null);

            /** database_object value */
            value?: (Uint8Array|null);

            /** database_object key */
            key?: (Uint8Array|null);
        }

        /** Represents a database_object. */
        class database_object implements Idatabase_object {

            /**
             * Constructs a new database_object.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Idatabase_object);

            /** database_object exists. */
            public exists: boolean;

            /** database_object value. */
            public value: Uint8Array;

            /** database_object key. */
            public key: Uint8Array;

            /**
             * Creates a new database_object instance using the specified properties.
             * @param [properties] Properties to set
             * @returns database_object instance
             */
            public static create(properties?: koinos.chain.Idatabase_object): koinos.chain.database_object;

            /**
             * Encodes the specified database_object message. Does not implicitly {@link koinos.chain.database_object.verify|verify} messages.
             * @param message database_object message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Idatabase_object, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified database_object message, length delimited. Does not implicitly {@link koinos.chain.database_object.verify|verify} messages.
             * @param message database_object message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Idatabase_object, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a database_object message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns database_object
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.database_object;

            /**
             * Decodes a database_object message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns database_object
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.database_object;

            /**
             * Verifies a database_object message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a database_object message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns database_object
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.database_object;

            /**
             * Creates a plain object from a database_object message. Also converts values to other types if specified.
             * @param message database_object
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.database_object, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this database_object to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a get_object_result. */
        interface Iget_object_result {

            /** get_object_result value */
            value?: (koinos.chain.Idatabase_object|null);
        }

        /** Represents a get_object_result. */
        class get_object_result implements Iget_object_result {

            /**
             * Constructs a new get_object_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iget_object_result);

            /** get_object_result value. */
            public value?: (koinos.chain.Idatabase_object|null);

            /**
             * Creates a new get_object_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns get_object_result instance
             */
            public static create(properties?: koinos.chain.Iget_object_result): koinos.chain.get_object_result;

            /**
             * Encodes the specified get_object_result message. Does not implicitly {@link koinos.chain.get_object_result.verify|verify} messages.
             * @param message get_object_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iget_object_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified get_object_result message, length delimited. Does not implicitly {@link koinos.chain.get_object_result.verify|verify} messages.
             * @param message get_object_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iget_object_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a get_object_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns get_object_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.get_object_result;

            /**
             * Decodes a get_object_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns get_object_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.get_object_result;

            /**
             * Verifies a get_object_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a get_object_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns get_object_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.get_object_result;

            /**
             * Creates a plain object from a get_object_result message. Also converts values to other types if specified.
             * @param message get_object_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.get_object_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this get_object_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a get_next_object_arguments. */
        interface Iget_next_object_arguments {

            /** get_next_object_arguments space */
            space?: (koinos.chain.Iobject_space|null);

            /** get_next_object_arguments key */
            key?: (Uint8Array|null);
        }

        /** Represents a get_next_object_arguments. */
        class get_next_object_arguments implements Iget_next_object_arguments {

            /**
             * Constructs a new get_next_object_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iget_next_object_arguments);

            /** get_next_object_arguments space. */
            public space?: (koinos.chain.Iobject_space|null);

            /** get_next_object_arguments key. */
            public key: Uint8Array;

            /**
             * Creates a new get_next_object_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns get_next_object_arguments instance
             */
            public static create(properties?: koinos.chain.Iget_next_object_arguments): koinos.chain.get_next_object_arguments;

            /**
             * Encodes the specified get_next_object_arguments message. Does not implicitly {@link koinos.chain.get_next_object_arguments.verify|verify} messages.
             * @param message get_next_object_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iget_next_object_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified get_next_object_arguments message, length delimited. Does not implicitly {@link koinos.chain.get_next_object_arguments.verify|verify} messages.
             * @param message get_next_object_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iget_next_object_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a get_next_object_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns get_next_object_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.get_next_object_arguments;

            /**
             * Decodes a get_next_object_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns get_next_object_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.get_next_object_arguments;

            /**
             * Verifies a get_next_object_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a get_next_object_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns get_next_object_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.get_next_object_arguments;

            /**
             * Creates a plain object from a get_next_object_arguments message. Also converts values to other types if specified.
             * @param message get_next_object_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.get_next_object_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this get_next_object_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a get_next_object_result. */
        interface Iget_next_object_result {

            /** get_next_object_result value */
            value?: (koinos.chain.Idatabase_object|null);
        }

        /** Represents a get_next_object_result. */
        class get_next_object_result implements Iget_next_object_result {

            /**
             * Constructs a new get_next_object_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iget_next_object_result);

            /** get_next_object_result value. */
            public value?: (koinos.chain.Idatabase_object|null);

            /**
             * Creates a new get_next_object_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns get_next_object_result instance
             */
            public static create(properties?: koinos.chain.Iget_next_object_result): koinos.chain.get_next_object_result;

            /**
             * Encodes the specified get_next_object_result message. Does not implicitly {@link koinos.chain.get_next_object_result.verify|verify} messages.
             * @param message get_next_object_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iget_next_object_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified get_next_object_result message, length delimited. Does not implicitly {@link koinos.chain.get_next_object_result.verify|verify} messages.
             * @param message get_next_object_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iget_next_object_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a get_next_object_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns get_next_object_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.get_next_object_result;

            /**
             * Decodes a get_next_object_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns get_next_object_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.get_next_object_result;

            /**
             * Verifies a get_next_object_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a get_next_object_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns get_next_object_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.get_next_object_result;

            /**
             * Creates a plain object from a get_next_object_result message. Also converts values to other types if specified.
             * @param message get_next_object_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.get_next_object_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this get_next_object_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a get_prev_object_arguments. */
        interface Iget_prev_object_arguments {

            /** get_prev_object_arguments space */
            space?: (koinos.chain.Iobject_space|null);

            /** get_prev_object_arguments key */
            key?: (Uint8Array|null);
        }

        /** Represents a get_prev_object_arguments. */
        class get_prev_object_arguments implements Iget_prev_object_arguments {

            /**
             * Constructs a new get_prev_object_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iget_prev_object_arguments);

            /** get_prev_object_arguments space. */
            public space?: (koinos.chain.Iobject_space|null);

            /** get_prev_object_arguments key. */
            public key: Uint8Array;

            /**
             * Creates a new get_prev_object_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns get_prev_object_arguments instance
             */
            public static create(properties?: koinos.chain.Iget_prev_object_arguments): koinos.chain.get_prev_object_arguments;

            /**
             * Encodes the specified get_prev_object_arguments message. Does not implicitly {@link koinos.chain.get_prev_object_arguments.verify|verify} messages.
             * @param message get_prev_object_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iget_prev_object_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified get_prev_object_arguments message, length delimited. Does not implicitly {@link koinos.chain.get_prev_object_arguments.verify|verify} messages.
             * @param message get_prev_object_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iget_prev_object_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a get_prev_object_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns get_prev_object_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.get_prev_object_arguments;

            /**
             * Decodes a get_prev_object_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns get_prev_object_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.get_prev_object_arguments;

            /**
             * Verifies a get_prev_object_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a get_prev_object_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns get_prev_object_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.get_prev_object_arguments;

            /**
             * Creates a plain object from a get_prev_object_arguments message. Also converts values to other types if specified.
             * @param message get_prev_object_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.get_prev_object_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this get_prev_object_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a get_prev_object_result. */
        interface Iget_prev_object_result {

            /** get_prev_object_result value */
            value?: (koinos.chain.Idatabase_object|null);
        }

        /** Represents a get_prev_object_result. */
        class get_prev_object_result implements Iget_prev_object_result {

            /**
             * Constructs a new get_prev_object_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iget_prev_object_result);

            /** get_prev_object_result value. */
            public value?: (koinos.chain.Idatabase_object|null);

            /**
             * Creates a new get_prev_object_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns get_prev_object_result instance
             */
            public static create(properties?: koinos.chain.Iget_prev_object_result): koinos.chain.get_prev_object_result;

            /**
             * Encodes the specified get_prev_object_result message. Does not implicitly {@link koinos.chain.get_prev_object_result.verify|verify} messages.
             * @param message get_prev_object_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iget_prev_object_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified get_prev_object_result message, length delimited. Does not implicitly {@link koinos.chain.get_prev_object_result.verify|verify} messages.
             * @param message get_prev_object_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iget_prev_object_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a get_prev_object_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns get_prev_object_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.get_prev_object_result;

            /**
             * Decodes a get_prev_object_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns get_prev_object_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.get_prev_object_result;

            /**
             * Verifies a get_prev_object_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a get_prev_object_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns get_prev_object_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.get_prev_object_result;

            /**
             * Creates a plain object from a get_prev_object_result message. Also converts values to other types if specified.
             * @param message get_prev_object_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.get_prev_object_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this get_prev_object_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a log_arguments. */
        interface Ilog_arguments {

            /** log_arguments message */
            message?: (string|null);
        }

        /** Represents a log_arguments. */
        class log_arguments implements Ilog_arguments {

            /**
             * Constructs a new log_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Ilog_arguments);

            /** log_arguments message. */
            public message: string;

            /**
             * Creates a new log_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns log_arguments instance
             */
            public static create(properties?: koinos.chain.Ilog_arguments): koinos.chain.log_arguments;

            /**
             * Encodes the specified log_arguments message. Does not implicitly {@link koinos.chain.log_arguments.verify|verify} messages.
             * @param message log_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Ilog_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified log_arguments message, length delimited. Does not implicitly {@link koinos.chain.log_arguments.verify|verify} messages.
             * @param message log_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Ilog_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a log_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns log_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.log_arguments;

            /**
             * Decodes a log_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns log_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.log_arguments;

            /**
             * Verifies a log_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a log_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns log_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.log_arguments;

            /**
             * Creates a plain object from a log_arguments message. Also converts values to other types if specified.
             * @param message log_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.log_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this log_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a log_result. */
        interface Ilog_result {
        }

        /** Represents a log_result. */
        class log_result implements Ilog_result {

            /**
             * Constructs a new log_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Ilog_result);

            /**
             * Creates a new log_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns log_result instance
             */
            public static create(properties?: koinos.chain.Ilog_result): koinos.chain.log_result;

            /**
             * Encodes the specified log_result message. Does not implicitly {@link koinos.chain.log_result.verify|verify} messages.
             * @param message log_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Ilog_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified log_result message, length delimited. Does not implicitly {@link koinos.chain.log_result.verify|verify} messages.
             * @param message log_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Ilog_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a log_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns log_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.log_result;

            /**
             * Decodes a log_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns log_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.log_result;

            /**
             * Verifies a log_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a log_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns log_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.log_result;

            /**
             * Creates a plain object from a log_result message. Also converts values to other types if specified.
             * @param message log_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.log_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this log_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an event_arguments. */
        interface Ievent_arguments {

            /** event_arguments name */
            name?: (string|null);

            /** event_arguments data */
            data?: (Uint8Array|null);

            /** event_arguments impacted */
            impacted?: (Uint8Array[]|null);
        }

        /** Represents an event_arguments. */
        class event_arguments implements Ievent_arguments {

            /**
             * Constructs a new event_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Ievent_arguments);

            /** event_arguments name. */
            public name: string;

            /** event_arguments data. */
            public data: Uint8Array;

            /** event_arguments impacted. */
            public impacted: Uint8Array[];

            /**
             * Creates a new event_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns event_arguments instance
             */
            public static create(properties?: koinos.chain.Ievent_arguments): koinos.chain.event_arguments;

            /**
             * Encodes the specified event_arguments message. Does not implicitly {@link koinos.chain.event_arguments.verify|verify} messages.
             * @param message event_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Ievent_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified event_arguments message, length delimited. Does not implicitly {@link koinos.chain.event_arguments.verify|verify} messages.
             * @param message event_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Ievent_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an event_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns event_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.event_arguments;

            /**
             * Decodes an event_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns event_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.event_arguments;

            /**
             * Verifies an event_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an event_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns event_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.event_arguments;

            /**
             * Creates a plain object from an event_arguments message. Also converts values to other types if specified.
             * @param message event_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.event_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this event_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an event_result. */
        interface Ievent_result {
        }

        /** Represents an event_result. */
        class event_result implements Ievent_result {

            /**
             * Constructs a new event_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Ievent_result);

            /**
             * Creates a new event_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns event_result instance
             */
            public static create(properties?: koinos.chain.Ievent_result): koinos.chain.event_result;

            /**
             * Encodes the specified event_result message. Does not implicitly {@link koinos.chain.event_result.verify|verify} messages.
             * @param message event_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Ievent_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified event_result message, length delimited. Does not implicitly {@link koinos.chain.event_result.verify|verify} messages.
             * @param message event_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Ievent_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an event_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns event_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.event_result;

            /**
             * Decodes an event_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns event_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.event_result;

            /**
             * Verifies an event_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an event_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns event_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.event_result;

            /**
             * Creates a plain object from an event_result message. Also converts values to other types if specified.
             * @param message event_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.event_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this event_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a hash_arguments. */
        interface Ihash_arguments {

            /** hash_arguments code */
            code?: (number|Long|null);

            /** hash_arguments obj */
            obj?: (Uint8Array|null);

            /** hash_arguments size */
            size?: (number|Long|null);
        }

        /** Represents a hash_arguments. */
        class hash_arguments implements Ihash_arguments {

            /**
             * Constructs a new hash_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Ihash_arguments);

            /** hash_arguments code. */
            public code: (number|Long);

            /** hash_arguments obj. */
            public obj: Uint8Array;

            /** hash_arguments size. */
            public size: (number|Long);

            /**
             * Creates a new hash_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns hash_arguments instance
             */
            public static create(properties?: koinos.chain.Ihash_arguments): koinos.chain.hash_arguments;

            /**
             * Encodes the specified hash_arguments message. Does not implicitly {@link koinos.chain.hash_arguments.verify|verify} messages.
             * @param message hash_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Ihash_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified hash_arguments message, length delimited. Does not implicitly {@link koinos.chain.hash_arguments.verify|verify} messages.
             * @param message hash_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Ihash_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a hash_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns hash_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.hash_arguments;

            /**
             * Decodes a hash_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns hash_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.hash_arguments;

            /**
             * Verifies a hash_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a hash_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns hash_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.hash_arguments;

            /**
             * Creates a plain object from a hash_arguments message. Also converts values to other types if specified.
             * @param message hash_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.hash_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this hash_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a hash_result. */
        interface Ihash_result {

            /** hash_result value */
            value?: (Uint8Array|null);
        }

        /** Represents a hash_result. */
        class hash_result implements Ihash_result {

            /**
             * Constructs a new hash_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Ihash_result);

            /** hash_result value. */
            public value: Uint8Array;

            /**
             * Creates a new hash_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns hash_result instance
             */
            public static create(properties?: koinos.chain.Ihash_result): koinos.chain.hash_result;

            /**
             * Encodes the specified hash_result message. Does not implicitly {@link koinos.chain.hash_result.verify|verify} messages.
             * @param message hash_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Ihash_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified hash_result message, length delimited. Does not implicitly {@link koinos.chain.hash_result.verify|verify} messages.
             * @param message hash_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Ihash_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a hash_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns hash_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.hash_result;

            /**
             * Decodes a hash_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns hash_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.hash_result;

            /**
             * Verifies a hash_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a hash_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns hash_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.hash_result;

            /**
             * Creates a plain object from a hash_result message. Also converts values to other types if specified.
             * @param message hash_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.hash_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this hash_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a recover_public_key_arguments. */
        interface Irecover_public_key_arguments {

            /** recover_public_key_arguments type */
            type?: (koinos.chain.dsa|null);

            /** recover_public_key_arguments signature */
            signature?: (Uint8Array|null);

            /** recover_public_key_arguments digest */
            digest?: (Uint8Array|null);

            /** recover_public_key_arguments compressed */
            compressed?: (boolean|null);
        }

        /** Represents a recover_public_key_arguments. */
        class recover_public_key_arguments implements Irecover_public_key_arguments {

            /**
             * Constructs a new recover_public_key_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Irecover_public_key_arguments);

            /** recover_public_key_arguments type. */
            public type: koinos.chain.dsa;

            /** recover_public_key_arguments signature. */
            public signature: Uint8Array;

            /** recover_public_key_arguments digest. */
            public digest: Uint8Array;

            /** recover_public_key_arguments compressed. */
            public compressed: boolean;

            /**
             * Creates a new recover_public_key_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns recover_public_key_arguments instance
             */
            public static create(properties?: koinos.chain.Irecover_public_key_arguments): koinos.chain.recover_public_key_arguments;

            /**
             * Encodes the specified recover_public_key_arguments message. Does not implicitly {@link koinos.chain.recover_public_key_arguments.verify|verify} messages.
             * @param message recover_public_key_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Irecover_public_key_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified recover_public_key_arguments message, length delimited. Does not implicitly {@link koinos.chain.recover_public_key_arguments.verify|verify} messages.
             * @param message recover_public_key_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Irecover_public_key_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a recover_public_key_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns recover_public_key_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.recover_public_key_arguments;

            /**
             * Decodes a recover_public_key_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns recover_public_key_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.recover_public_key_arguments;

            /**
             * Verifies a recover_public_key_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a recover_public_key_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns recover_public_key_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.recover_public_key_arguments;

            /**
             * Creates a plain object from a recover_public_key_arguments message. Also converts values to other types if specified.
             * @param message recover_public_key_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.recover_public_key_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this recover_public_key_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a recover_public_key_result. */
        interface Irecover_public_key_result {

            /** recover_public_key_result value */
            value?: (Uint8Array|null);
        }

        /** Represents a recover_public_key_result. */
        class recover_public_key_result implements Irecover_public_key_result {

            /**
             * Constructs a new recover_public_key_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Irecover_public_key_result);

            /** recover_public_key_result value. */
            public value: Uint8Array;

            /**
             * Creates a new recover_public_key_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns recover_public_key_result instance
             */
            public static create(properties?: koinos.chain.Irecover_public_key_result): koinos.chain.recover_public_key_result;

            /**
             * Encodes the specified recover_public_key_result message. Does not implicitly {@link koinos.chain.recover_public_key_result.verify|verify} messages.
             * @param message recover_public_key_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Irecover_public_key_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified recover_public_key_result message, length delimited. Does not implicitly {@link koinos.chain.recover_public_key_result.verify|verify} messages.
             * @param message recover_public_key_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Irecover_public_key_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a recover_public_key_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns recover_public_key_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.recover_public_key_result;

            /**
             * Decodes a recover_public_key_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns recover_public_key_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.recover_public_key_result;

            /**
             * Verifies a recover_public_key_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a recover_public_key_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns recover_public_key_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.recover_public_key_result;

            /**
             * Creates a plain object from a recover_public_key_result message. Also converts values to other types if specified.
             * @param message recover_public_key_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.recover_public_key_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this recover_public_key_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a verify_merkle_root_arguments. */
        interface Iverify_merkle_root_arguments {

            /** verify_merkle_root_arguments root */
            root?: (Uint8Array|null);

            /** verify_merkle_root_arguments hashes */
            hashes?: (Uint8Array[]|null);
        }

        /** Represents a verify_merkle_root_arguments. */
        class verify_merkle_root_arguments implements Iverify_merkle_root_arguments {

            /**
             * Constructs a new verify_merkle_root_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iverify_merkle_root_arguments);

            /** verify_merkle_root_arguments root. */
            public root: Uint8Array;

            /** verify_merkle_root_arguments hashes. */
            public hashes: Uint8Array[];

            /**
             * Creates a new verify_merkle_root_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns verify_merkle_root_arguments instance
             */
            public static create(properties?: koinos.chain.Iverify_merkle_root_arguments): koinos.chain.verify_merkle_root_arguments;

            /**
             * Encodes the specified verify_merkle_root_arguments message. Does not implicitly {@link koinos.chain.verify_merkle_root_arguments.verify|verify} messages.
             * @param message verify_merkle_root_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iverify_merkle_root_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified verify_merkle_root_arguments message, length delimited. Does not implicitly {@link koinos.chain.verify_merkle_root_arguments.verify|verify} messages.
             * @param message verify_merkle_root_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iverify_merkle_root_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a verify_merkle_root_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns verify_merkle_root_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.verify_merkle_root_arguments;

            /**
             * Decodes a verify_merkle_root_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns verify_merkle_root_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.verify_merkle_root_arguments;

            /**
             * Verifies a verify_merkle_root_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a verify_merkle_root_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns verify_merkle_root_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.verify_merkle_root_arguments;

            /**
             * Creates a plain object from a verify_merkle_root_arguments message. Also converts values to other types if specified.
             * @param message verify_merkle_root_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.verify_merkle_root_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this verify_merkle_root_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a verify_merkle_root_result. */
        interface Iverify_merkle_root_result {

            /** verify_merkle_root_result value */
            value?: (boolean|null);
        }

        /** Represents a verify_merkle_root_result. */
        class verify_merkle_root_result implements Iverify_merkle_root_result {

            /**
             * Constructs a new verify_merkle_root_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iverify_merkle_root_result);

            /** verify_merkle_root_result value. */
            public value: boolean;

            /**
             * Creates a new verify_merkle_root_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns verify_merkle_root_result instance
             */
            public static create(properties?: koinos.chain.Iverify_merkle_root_result): koinos.chain.verify_merkle_root_result;

            /**
             * Encodes the specified verify_merkle_root_result message. Does not implicitly {@link koinos.chain.verify_merkle_root_result.verify|verify} messages.
             * @param message verify_merkle_root_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iverify_merkle_root_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified verify_merkle_root_result message, length delimited. Does not implicitly {@link koinos.chain.verify_merkle_root_result.verify|verify} messages.
             * @param message verify_merkle_root_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iverify_merkle_root_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a verify_merkle_root_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns verify_merkle_root_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.verify_merkle_root_result;

            /**
             * Decodes a verify_merkle_root_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns verify_merkle_root_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.verify_merkle_root_result;

            /**
             * Verifies a verify_merkle_root_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a verify_merkle_root_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns verify_merkle_root_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.verify_merkle_root_result;

            /**
             * Creates a plain object from a verify_merkle_root_result message. Also converts values to other types if specified.
             * @param message verify_merkle_root_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.verify_merkle_root_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this verify_merkle_root_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a verify_signature_arguments. */
        interface Iverify_signature_arguments {

            /** verify_signature_arguments type */
            type?: (koinos.chain.dsa|null);

            /** verify_signature_arguments public_key */
            public_key?: (Uint8Array|null);

            /** verify_signature_arguments signature */
            signature?: (Uint8Array|null);

            /** verify_signature_arguments digest */
            digest?: (Uint8Array|null);

            /** verify_signature_arguments compressed */
            compressed?: (boolean|null);
        }

        /** Represents a verify_signature_arguments. */
        class verify_signature_arguments implements Iverify_signature_arguments {

            /**
             * Constructs a new verify_signature_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iverify_signature_arguments);

            /** verify_signature_arguments type. */
            public type: koinos.chain.dsa;

            /** verify_signature_arguments public_key. */
            public public_key: Uint8Array;

            /** verify_signature_arguments signature. */
            public signature: Uint8Array;

            /** verify_signature_arguments digest. */
            public digest: Uint8Array;

            /** verify_signature_arguments compressed. */
            public compressed: boolean;

            /**
             * Creates a new verify_signature_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns verify_signature_arguments instance
             */
            public static create(properties?: koinos.chain.Iverify_signature_arguments): koinos.chain.verify_signature_arguments;

            /**
             * Encodes the specified verify_signature_arguments message. Does not implicitly {@link koinos.chain.verify_signature_arguments.verify|verify} messages.
             * @param message verify_signature_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iverify_signature_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified verify_signature_arguments message, length delimited. Does not implicitly {@link koinos.chain.verify_signature_arguments.verify|verify} messages.
             * @param message verify_signature_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iverify_signature_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a verify_signature_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns verify_signature_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.verify_signature_arguments;

            /**
             * Decodes a verify_signature_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns verify_signature_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.verify_signature_arguments;

            /**
             * Verifies a verify_signature_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a verify_signature_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns verify_signature_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.verify_signature_arguments;

            /**
             * Creates a plain object from a verify_signature_arguments message. Also converts values to other types if specified.
             * @param message verify_signature_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.verify_signature_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this verify_signature_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a verify_signature_result. */
        interface Iverify_signature_result {

            /** verify_signature_result value */
            value?: (boolean|null);
        }

        /** Represents a verify_signature_result. */
        class verify_signature_result implements Iverify_signature_result {

            /**
             * Constructs a new verify_signature_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iverify_signature_result);

            /** verify_signature_result value. */
            public value: boolean;

            /**
             * Creates a new verify_signature_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns verify_signature_result instance
             */
            public static create(properties?: koinos.chain.Iverify_signature_result): koinos.chain.verify_signature_result;

            /**
             * Encodes the specified verify_signature_result message. Does not implicitly {@link koinos.chain.verify_signature_result.verify|verify} messages.
             * @param message verify_signature_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iverify_signature_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified verify_signature_result message, length delimited. Does not implicitly {@link koinos.chain.verify_signature_result.verify|verify} messages.
             * @param message verify_signature_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iverify_signature_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a verify_signature_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns verify_signature_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.verify_signature_result;

            /**
             * Decodes a verify_signature_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns verify_signature_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.verify_signature_result;

            /**
             * Verifies a verify_signature_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a verify_signature_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns verify_signature_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.verify_signature_result;

            /**
             * Creates a plain object from a verify_signature_result message. Also converts values to other types if specified.
             * @param message verify_signature_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.verify_signature_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this verify_signature_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a verify_vrf_proof_arguments. */
        interface Iverify_vrf_proof_arguments {

            /** verify_vrf_proof_arguments type */
            type?: (koinos.chain.dsa|null);

            /** verify_vrf_proof_arguments public_key */
            public_key?: (Uint8Array|null);

            /** verify_vrf_proof_arguments proof */
            proof?: (Uint8Array|null);

            /** verify_vrf_proof_arguments hash */
            hash?: (Uint8Array|null);

            /** verify_vrf_proof_arguments message */
            message?: (Uint8Array|null);
        }

        /** Represents a verify_vrf_proof_arguments. */
        class verify_vrf_proof_arguments implements Iverify_vrf_proof_arguments {

            /**
             * Constructs a new verify_vrf_proof_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iverify_vrf_proof_arguments);

            /** verify_vrf_proof_arguments type. */
            public type: koinos.chain.dsa;

            /** verify_vrf_proof_arguments public_key. */
            public public_key: Uint8Array;

            /** verify_vrf_proof_arguments proof. */
            public proof: Uint8Array;

            /** verify_vrf_proof_arguments hash. */
            public hash: Uint8Array;

            /** verify_vrf_proof_arguments message. */
            public message: Uint8Array;

            /**
             * Creates a new verify_vrf_proof_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns verify_vrf_proof_arguments instance
             */
            public static create(properties?: koinos.chain.Iverify_vrf_proof_arguments): koinos.chain.verify_vrf_proof_arguments;

            /**
             * Encodes the specified verify_vrf_proof_arguments message. Does not implicitly {@link koinos.chain.verify_vrf_proof_arguments.verify|verify} messages.
             * @param message verify_vrf_proof_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iverify_vrf_proof_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified verify_vrf_proof_arguments message, length delimited. Does not implicitly {@link koinos.chain.verify_vrf_proof_arguments.verify|verify} messages.
             * @param message verify_vrf_proof_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iverify_vrf_proof_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a verify_vrf_proof_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns verify_vrf_proof_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.verify_vrf_proof_arguments;

            /**
             * Decodes a verify_vrf_proof_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns verify_vrf_proof_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.verify_vrf_proof_arguments;

            /**
             * Verifies a verify_vrf_proof_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a verify_vrf_proof_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns verify_vrf_proof_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.verify_vrf_proof_arguments;

            /**
             * Creates a plain object from a verify_vrf_proof_arguments message. Also converts values to other types if specified.
             * @param message verify_vrf_proof_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.verify_vrf_proof_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this verify_vrf_proof_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a verify_vrf_proof_result. */
        interface Iverify_vrf_proof_result {

            /** verify_vrf_proof_result value */
            value?: (boolean|null);
        }

        /** Represents a verify_vrf_proof_result. */
        class verify_vrf_proof_result implements Iverify_vrf_proof_result {

            /**
             * Constructs a new verify_vrf_proof_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iverify_vrf_proof_result);

            /** verify_vrf_proof_result value. */
            public value: boolean;

            /**
             * Creates a new verify_vrf_proof_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns verify_vrf_proof_result instance
             */
            public static create(properties?: koinos.chain.Iverify_vrf_proof_result): koinos.chain.verify_vrf_proof_result;

            /**
             * Encodes the specified verify_vrf_proof_result message. Does not implicitly {@link koinos.chain.verify_vrf_proof_result.verify|verify} messages.
             * @param message verify_vrf_proof_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iverify_vrf_proof_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified verify_vrf_proof_result message, length delimited. Does not implicitly {@link koinos.chain.verify_vrf_proof_result.verify|verify} messages.
             * @param message verify_vrf_proof_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iverify_vrf_proof_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a verify_vrf_proof_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns verify_vrf_proof_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.verify_vrf_proof_result;

            /**
             * Decodes a verify_vrf_proof_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns verify_vrf_proof_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.verify_vrf_proof_result;

            /**
             * Verifies a verify_vrf_proof_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a verify_vrf_proof_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns verify_vrf_proof_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.verify_vrf_proof_result;

            /**
             * Creates a plain object from a verify_vrf_proof_result message. Also converts values to other types if specified.
             * @param message verify_vrf_proof_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.verify_vrf_proof_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this verify_vrf_proof_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a call_arguments. */
        interface Icall_arguments {

            /** call_arguments contract_id */
            contract_id?: (Uint8Array|null);

            /** call_arguments entry_point */
            entry_point?: (number|null);

            /** call_arguments args */
            args?: (Uint8Array|null);
        }

        /** Represents a call_arguments. */
        class call_arguments implements Icall_arguments {

            /**
             * Constructs a new call_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Icall_arguments);

            /** call_arguments contract_id. */
            public contract_id: Uint8Array;

            /** call_arguments entry_point. */
            public entry_point: number;

            /** call_arguments args. */
            public args: Uint8Array;

            /**
             * Creates a new call_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns call_arguments instance
             */
            public static create(properties?: koinos.chain.Icall_arguments): koinos.chain.call_arguments;

            /**
             * Encodes the specified call_arguments message. Does not implicitly {@link koinos.chain.call_arguments.verify|verify} messages.
             * @param message call_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Icall_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified call_arguments message, length delimited. Does not implicitly {@link koinos.chain.call_arguments.verify|verify} messages.
             * @param message call_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Icall_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a call_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns call_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.call_arguments;

            /**
             * Decodes a call_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns call_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.call_arguments;

            /**
             * Verifies a call_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a call_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns call_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.call_arguments;

            /**
             * Creates a plain object from a call_arguments message. Also converts values to other types if specified.
             * @param message call_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.call_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this call_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a call_result. */
        interface Icall_result {

            /** call_result value */
            value?: (Uint8Array|null);
        }

        /** Represents a call_result. */
        class call_result implements Icall_result {

            /**
             * Constructs a new call_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Icall_result);

            /** call_result value. */
            public value: Uint8Array;

            /**
             * Creates a new call_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns call_result instance
             */
            public static create(properties?: koinos.chain.Icall_result): koinos.chain.call_result;

            /**
             * Encodes the specified call_result message. Does not implicitly {@link koinos.chain.call_result.verify|verify} messages.
             * @param message call_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Icall_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified call_result message, length delimited. Does not implicitly {@link koinos.chain.call_result.verify|verify} messages.
             * @param message call_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Icall_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a call_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns call_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.call_result;

            /**
             * Decodes a call_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns call_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.call_result;

            /**
             * Verifies a call_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a call_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns call_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.call_result;

            /**
             * Creates a plain object from a call_result message. Also converts values to other types if specified.
             * @param message call_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.call_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this call_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a get_arguments_arguments. */
        interface Iget_arguments_arguments {
        }

        /** Represents a get_arguments_arguments. */
        class get_arguments_arguments implements Iget_arguments_arguments {

            /**
             * Constructs a new get_arguments_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iget_arguments_arguments);

            /**
             * Creates a new get_arguments_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns get_arguments_arguments instance
             */
            public static create(properties?: koinos.chain.Iget_arguments_arguments): koinos.chain.get_arguments_arguments;

            /**
             * Encodes the specified get_arguments_arguments message. Does not implicitly {@link koinos.chain.get_arguments_arguments.verify|verify} messages.
             * @param message get_arguments_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iget_arguments_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified get_arguments_arguments message, length delimited. Does not implicitly {@link koinos.chain.get_arguments_arguments.verify|verify} messages.
             * @param message get_arguments_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iget_arguments_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a get_arguments_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns get_arguments_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.get_arguments_arguments;

            /**
             * Decodes a get_arguments_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns get_arguments_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.get_arguments_arguments;

            /**
             * Verifies a get_arguments_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a get_arguments_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns get_arguments_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.get_arguments_arguments;

            /**
             * Creates a plain object from a get_arguments_arguments message. Also converts values to other types if specified.
             * @param message get_arguments_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.get_arguments_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this get_arguments_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a get_arguments_result. */
        interface Iget_arguments_result {

            /** get_arguments_result value */
            value?: (koinos.chain.Iargument_data|null);
        }

        /** Represents a get_arguments_result. */
        class get_arguments_result implements Iget_arguments_result {

            /**
             * Constructs a new get_arguments_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iget_arguments_result);

            /** get_arguments_result value. */
            public value?: (koinos.chain.Iargument_data|null);

            /**
             * Creates a new get_arguments_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns get_arguments_result instance
             */
            public static create(properties?: koinos.chain.Iget_arguments_result): koinos.chain.get_arguments_result;

            /**
             * Encodes the specified get_arguments_result message. Does not implicitly {@link koinos.chain.get_arguments_result.verify|verify} messages.
             * @param message get_arguments_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iget_arguments_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified get_arguments_result message, length delimited. Does not implicitly {@link koinos.chain.get_arguments_result.verify|verify} messages.
             * @param message get_arguments_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iget_arguments_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a get_arguments_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns get_arguments_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.get_arguments_result;

            /**
             * Decodes a get_arguments_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns get_arguments_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.get_arguments_result;

            /**
             * Verifies a get_arguments_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a get_arguments_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns get_arguments_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.get_arguments_result;

            /**
             * Creates a plain object from a get_arguments_result message. Also converts values to other types if specified.
             * @param message get_arguments_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.get_arguments_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this get_arguments_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an exit_arguments. */
        interface Iexit_arguments {

            /** exit_arguments code */
            code?: (number|null);

            /** exit_arguments res */
            res?: (koinos.chain.Iresult|null);
        }

        /** Represents an exit_arguments. */
        class exit_arguments implements Iexit_arguments {

            /**
             * Constructs a new exit_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iexit_arguments);

            /** exit_arguments code. */
            public code: number;

            /** exit_arguments res. */
            public res?: (koinos.chain.Iresult|null);

            /**
             * Creates a new exit_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns exit_arguments instance
             */
            public static create(properties?: koinos.chain.Iexit_arguments): koinos.chain.exit_arguments;

            /**
             * Encodes the specified exit_arguments message. Does not implicitly {@link koinos.chain.exit_arguments.verify|verify} messages.
             * @param message exit_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iexit_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified exit_arguments message, length delimited. Does not implicitly {@link koinos.chain.exit_arguments.verify|verify} messages.
             * @param message exit_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iexit_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an exit_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns exit_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.exit_arguments;

            /**
             * Decodes an exit_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns exit_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.exit_arguments;

            /**
             * Verifies an exit_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an exit_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns exit_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.exit_arguments;

            /**
             * Creates a plain object from an exit_arguments message. Also converts values to other types if specified.
             * @param message exit_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.exit_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this exit_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an exit_result. */
        interface Iexit_result {
        }

        /** Represents an exit_result. */
        class exit_result implements Iexit_result {

            /**
             * Constructs a new exit_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iexit_result);

            /**
             * Creates a new exit_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns exit_result instance
             */
            public static create(properties?: koinos.chain.Iexit_result): koinos.chain.exit_result;

            /**
             * Encodes the specified exit_result message. Does not implicitly {@link koinos.chain.exit_result.verify|verify} messages.
             * @param message exit_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iexit_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified exit_result message, length delimited. Does not implicitly {@link koinos.chain.exit_result.verify|verify} messages.
             * @param message exit_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iexit_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an exit_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns exit_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.exit_result;

            /**
             * Decodes an exit_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns exit_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.exit_result;

            /**
             * Verifies an exit_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an exit_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns exit_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.exit_result;

            /**
             * Creates a plain object from an exit_result message. Also converts values to other types if specified.
             * @param message exit_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.exit_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this exit_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a get_contract_id_arguments. */
        interface Iget_contract_id_arguments {
        }

        /** Represents a get_contract_id_arguments. */
        class get_contract_id_arguments implements Iget_contract_id_arguments {

            /**
             * Constructs a new get_contract_id_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iget_contract_id_arguments);

            /**
             * Creates a new get_contract_id_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns get_contract_id_arguments instance
             */
            public static create(properties?: koinos.chain.Iget_contract_id_arguments): koinos.chain.get_contract_id_arguments;

            /**
             * Encodes the specified get_contract_id_arguments message. Does not implicitly {@link koinos.chain.get_contract_id_arguments.verify|verify} messages.
             * @param message get_contract_id_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iget_contract_id_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified get_contract_id_arguments message, length delimited. Does not implicitly {@link koinos.chain.get_contract_id_arguments.verify|verify} messages.
             * @param message get_contract_id_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iget_contract_id_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a get_contract_id_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns get_contract_id_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.get_contract_id_arguments;

            /**
             * Decodes a get_contract_id_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns get_contract_id_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.get_contract_id_arguments;

            /**
             * Verifies a get_contract_id_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a get_contract_id_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns get_contract_id_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.get_contract_id_arguments;

            /**
             * Creates a plain object from a get_contract_id_arguments message. Also converts values to other types if specified.
             * @param message get_contract_id_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.get_contract_id_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this get_contract_id_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a get_contract_id_result. */
        interface Iget_contract_id_result {

            /** get_contract_id_result value */
            value?: (Uint8Array|null);
        }

        /** Represents a get_contract_id_result. */
        class get_contract_id_result implements Iget_contract_id_result {

            /**
             * Constructs a new get_contract_id_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iget_contract_id_result);

            /** get_contract_id_result value. */
            public value: Uint8Array;

            /**
             * Creates a new get_contract_id_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns get_contract_id_result instance
             */
            public static create(properties?: koinos.chain.Iget_contract_id_result): koinos.chain.get_contract_id_result;

            /**
             * Encodes the specified get_contract_id_result message. Does not implicitly {@link koinos.chain.get_contract_id_result.verify|verify} messages.
             * @param message get_contract_id_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iget_contract_id_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified get_contract_id_result message, length delimited. Does not implicitly {@link koinos.chain.get_contract_id_result.verify|verify} messages.
             * @param message get_contract_id_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iget_contract_id_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a get_contract_id_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns get_contract_id_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.get_contract_id_result;

            /**
             * Decodes a get_contract_id_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns get_contract_id_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.get_contract_id_result;

            /**
             * Verifies a get_contract_id_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a get_contract_id_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns get_contract_id_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.get_contract_id_result;

            /**
             * Creates a plain object from a get_contract_id_result message. Also converts values to other types if specified.
             * @param message get_contract_id_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.get_contract_id_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this get_contract_id_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a get_caller_arguments. */
        interface Iget_caller_arguments {
        }

        /** Represents a get_caller_arguments. */
        class get_caller_arguments implements Iget_caller_arguments {

            /**
             * Constructs a new get_caller_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iget_caller_arguments);

            /**
             * Creates a new get_caller_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns get_caller_arguments instance
             */
            public static create(properties?: koinos.chain.Iget_caller_arguments): koinos.chain.get_caller_arguments;

            /**
             * Encodes the specified get_caller_arguments message. Does not implicitly {@link koinos.chain.get_caller_arguments.verify|verify} messages.
             * @param message get_caller_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iget_caller_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified get_caller_arguments message, length delimited. Does not implicitly {@link koinos.chain.get_caller_arguments.verify|verify} messages.
             * @param message get_caller_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iget_caller_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a get_caller_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns get_caller_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.get_caller_arguments;

            /**
             * Decodes a get_caller_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns get_caller_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.get_caller_arguments;

            /**
             * Verifies a get_caller_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a get_caller_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns get_caller_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.get_caller_arguments;

            /**
             * Creates a plain object from a get_caller_arguments message. Also converts values to other types if specified.
             * @param message get_caller_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.get_caller_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this get_caller_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a get_caller_result. */
        interface Iget_caller_result {

            /** get_caller_result value */
            value?: (koinos.chain.Icaller_data|null);
        }

        /** Represents a get_caller_result. */
        class get_caller_result implements Iget_caller_result {

            /**
             * Constructs a new get_caller_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Iget_caller_result);

            /** get_caller_result value. */
            public value?: (koinos.chain.Icaller_data|null);

            /**
             * Creates a new get_caller_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns get_caller_result instance
             */
            public static create(properties?: koinos.chain.Iget_caller_result): koinos.chain.get_caller_result;

            /**
             * Encodes the specified get_caller_result message. Does not implicitly {@link koinos.chain.get_caller_result.verify|verify} messages.
             * @param message get_caller_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Iget_caller_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified get_caller_result message, length delimited. Does not implicitly {@link koinos.chain.get_caller_result.verify|verify} messages.
             * @param message get_caller_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Iget_caller_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a get_caller_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns get_caller_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.get_caller_result;

            /**
             * Decodes a get_caller_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns get_caller_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.get_caller_result;

            /**
             * Verifies a get_caller_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a get_caller_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns get_caller_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.get_caller_result;

            /**
             * Creates a plain object from a get_caller_result message. Also converts values to other types if specified.
             * @param message get_caller_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.get_caller_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this get_caller_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a check_authority_arguments. */
        interface Icheck_authority_arguments {

            /** check_authority_arguments type */
            type?: (koinos.chain.authorization_type|null);

            /** check_authority_arguments account */
            account?: (Uint8Array|null);

            /** check_authority_arguments data */
            data?: (Uint8Array|null);
        }

        /** Represents a check_authority_arguments. */
        class check_authority_arguments implements Icheck_authority_arguments {

            /**
             * Constructs a new check_authority_arguments.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Icheck_authority_arguments);

            /** check_authority_arguments type. */
            public type: koinos.chain.authorization_type;

            /** check_authority_arguments account. */
            public account: Uint8Array;

            /** check_authority_arguments data. */
            public data: Uint8Array;

            /**
             * Creates a new check_authority_arguments instance using the specified properties.
             * @param [properties] Properties to set
             * @returns check_authority_arguments instance
             */
            public static create(properties?: koinos.chain.Icheck_authority_arguments): koinos.chain.check_authority_arguments;

            /**
             * Encodes the specified check_authority_arguments message. Does not implicitly {@link koinos.chain.check_authority_arguments.verify|verify} messages.
             * @param message check_authority_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Icheck_authority_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified check_authority_arguments message, length delimited. Does not implicitly {@link koinos.chain.check_authority_arguments.verify|verify} messages.
             * @param message check_authority_arguments message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Icheck_authority_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a check_authority_arguments message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns check_authority_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.check_authority_arguments;

            /**
             * Decodes a check_authority_arguments message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns check_authority_arguments
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.check_authority_arguments;

            /**
             * Verifies a check_authority_arguments message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a check_authority_arguments message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns check_authority_arguments
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.check_authority_arguments;

            /**
             * Creates a plain object from a check_authority_arguments message. Also converts values to other types if specified.
             * @param message check_authority_arguments
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.check_authority_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this check_authority_arguments to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a check_authority_result. */
        interface Icheck_authority_result {

            /** check_authority_result value */
            value?: (boolean|null);
        }

        /** Represents a check_authority_result. */
        class check_authority_result implements Icheck_authority_result {

            /**
             * Constructs a new check_authority_result.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Icheck_authority_result);

            /** check_authority_result value. */
            public value: boolean;

            /**
             * Creates a new check_authority_result instance using the specified properties.
             * @param [properties] Properties to set
             * @returns check_authority_result instance
             */
            public static create(properties?: koinos.chain.Icheck_authority_result): koinos.chain.check_authority_result;

            /**
             * Encodes the specified check_authority_result message. Does not implicitly {@link koinos.chain.check_authority_result.verify|verify} messages.
             * @param message check_authority_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Icheck_authority_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified check_authority_result message, length delimited. Does not implicitly {@link koinos.chain.check_authority_result.verify|verify} messages.
             * @param message check_authority_result message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Icheck_authority_result, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a check_authority_result message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns check_authority_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.check_authority_result;

            /**
             * Decodes a check_authority_result message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns check_authority_result
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.check_authority_result;

            /**
             * Verifies a check_authority_result message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a check_authority_result message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns check_authority_result
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.check_authority_result;

            /**
             * Creates a plain object from a check_authority_result message. Also converts values to other types if specified.
             * @param message check_authority_result
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.check_authority_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this check_authority_result to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** error_code enum. */
        enum error_code {
            success = 0,
            reversion = 1,
            internal_error = 100,
            system_authorization_failure = 101,
            invalid_contract = 102,
            insufficient_privileges = 103,
            insufficient_rc = 104,
            insufficient_return_buffer = 105,
            unknown_thunk = 106,
            unknown_operation = 107,
            read_only_context = 108,
            failure = -1,
            field_not_found = -100,
            unknown_hash_code = -101,
            unknown_dsa = -102,
            unknown_system_call = -103,
            operation_not_found = -104,
            authorization_failure = -200,
            invalid_nonce = -201,
            invalid_signature = -202,
            malformed_block = -203,
            malformed_transaction = -204,
            block_resource_failure = -205,
            pending_transaction_limit_exceeded = -206,
            unknown_backend = -1000,
            unexpected_state = -1001,
            missing_required_arguments = -1002,
            unknown_previous_block = -1003,
            unexpected_height = -1004,
            block_state_error = -1005,
            state_merkle_mismatch = -1006,
            unexpected_receipt = -1007,
            rpc_failure = -1008,
            pending_state_error = -1009,
            timestamp_out_of_bounds = -1010,
            indexer_failure = -1011,
            network_bandwidth_limit_exceeded = -1012,
            compute_bandwidth_limit_exceeded = -1013,
            disk_storage_limit_exceeded = -1014,
            pre_irreversibility_block = -1015
        }

        /** Properties of an error_details. */
        interface Ierror_details {

            /** error_details code */
            code?: (number|null);

            /** error_details logs */
            logs?: (string[]|null);
        }

        /** Represents an error_details. */
        class error_details implements Ierror_details {

            /**
             * Constructs a new error_details.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.chain.Ierror_details);

            /** error_details code. */
            public code: number;

            /** error_details logs. */
            public logs: string[];

            /**
             * Creates a new error_details instance using the specified properties.
             * @param [properties] Properties to set
             * @returns error_details instance
             */
            public static create(properties?: koinos.chain.Ierror_details): koinos.chain.error_details;

            /**
             * Encodes the specified error_details message. Does not implicitly {@link koinos.chain.error_details.verify|verify} messages.
             * @param message error_details message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.chain.Ierror_details, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified error_details message, length delimited. Does not implicitly {@link koinos.chain.error_details.verify|verify} messages.
             * @param message error_details message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.chain.Ierror_details, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an error_details message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns error_details
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.chain.error_details;

            /**
             * Decodes an error_details message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns error_details
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.chain.error_details;

            /**
             * Verifies an error_details message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an error_details message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns error_details
             */
            public static fromObject(object: { [k: string]: any }): koinos.chain.error_details;

            /**
             * Creates a plain object from an error_details message. Also converts values to other types if specified.
             * @param message error_details
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.chain.error_details, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this error_details to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Namespace standards. */
    namespace standards {

        /** Namespace kcs1. */
        namespace kcs1 {

            /** Properties of a name_arguments. */
            interface Iname_arguments {
            }

            /** Represents a name_arguments. */
            class name_arguments implements Iname_arguments {

                /**
                 * Constructs a new name_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs1.Iname_arguments);

                /**
                 * Creates a new name_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns name_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs1.Iname_arguments): koinos.standards.kcs1.name_arguments;

                /**
                 * Encodes the specified name_arguments message. Does not implicitly {@link koinos.standards.kcs1.name_arguments.verify|verify} messages.
                 * @param message name_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs1.Iname_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified name_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs1.name_arguments.verify|verify} messages.
                 * @param message name_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs1.Iname_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a name_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns name_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs1.name_arguments;

                /**
                 * Decodes a name_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns name_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs1.name_arguments;

                /**
                 * Verifies a name_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a name_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns name_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs1.name_arguments;

                /**
                 * Creates a plain object from a name_arguments message. Also converts values to other types if specified.
                 * @param message name_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs1.name_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this name_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a name_result. */
            interface Iname_result {

                /** name_result value */
                value?: (string|null);
            }

            /** Represents a name_result. */
            class name_result implements Iname_result {

                /**
                 * Constructs a new name_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs1.Iname_result);

                /** name_result value. */
                public value: string;

                /**
                 * Creates a new name_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns name_result instance
                 */
                public static create(properties?: koinos.standards.kcs1.Iname_result): koinos.standards.kcs1.name_result;

                /**
                 * Encodes the specified name_result message. Does not implicitly {@link koinos.standards.kcs1.name_result.verify|verify} messages.
                 * @param message name_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs1.Iname_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified name_result message, length delimited. Does not implicitly {@link koinos.standards.kcs1.name_result.verify|verify} messages.
                 * @param message name_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs1.Iname_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a name_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns name_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs1.name_result;

                /**
                 * Decodes a name_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns name_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs1.name_result;

                /**
                 * Verifies a name_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a name_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns name_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs1.name_result;

                /**
                 * Creates a plain object from a name_result message. Also converts values to other types if specified.
                 * @param message name_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs1.name_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this name_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a symbol_arguments. */
            interface Isymbol_arguments {
            }

            /** Represents a symbol_arguments. */
            class symbol_arguments implements Isymbol_arguments {

                /**
                 * Constructs a new symbol_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs1.Isymbol_arguments);

                /**
                 * Creates a new symbol_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns symbol_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs1.Isymbol_arguments): koinos.standards.kcs1.symbol_arguments;

                /**
                 * Encodes the specified symbol_arguments message. Does not implicitly {@link koinos.standards.kcs1.symbol_arguments.verify|verify} messages.
                 * @param message symbol_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs1.Isymbol_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified symbol_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs1.symbol_arguments.verify|verify} messages.
                 * @param message symbol_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs1.Isymbol_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a symbol_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns symbol_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs1.symbol_arguments;

                /**
                 * Decodes a symbol_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns symbol_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs1.symbol_arguments;

                /**
                 * Verifies a symbol_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a symbol_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns symbol_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs1.symbol_arguments;

                /**
                 * Creates a plain object from a symbol_arguments message. Also converts values to other types if specified.
                 * @param message symbol_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs1.symbol_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this symbol_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a symbol_result. */
            interface Isymbol_result {

                /** symbol_result value */
                value?: (string|null);
            }

            /** Represents a symbol_result. */
            class symbol_result implements Isymbol_result {

                /**
                 * Constructs a new symbol_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs1.Isymbol_result);

                /** symbol_result value. */
                public value: string;

                /**
                 * Creates a new symbol_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns symbol_result instance
                 */
                public static create(properties?: koinos.standards.kcs1.Isymbol_result): koinos.standards.kcs1.symbol_result;

                /**
                 * Encodes the specified symbol_result message. Does not implicitly {@link koinos.standards.kcs1.symbol_result.verify|verify} messages.
                 * @param message symbol_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs1.Isymbol_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified symbol_result message, length delimited. Does not implicitly {@link koinos.standards.kcs1.symbol_result.verify|verify} messages.
                 * @param message symbol_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs1.Isymbol_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a symbol_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns symbol_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs1.symbol_result;

                /**
                 * Decodes a symbol_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns symbol_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs1.symbol_result;

                /**
                 * Verifies a symbol_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a symbol_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns symbol_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs1.symbol_result;

                /**
                 * Creates a plain object from a symbol_result message. Also converts values to other types if specified.
                 * @param message symbol_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs1.symbol_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this symbol_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a decimals_arguments. */
            interface Idecimals_arguments {
            }

            /** Represents a decimals_arguments. */
            class decimals_arguments implements Idecimals_arguments {

                /**
                 * Constructs a new decimals_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs1.Idecimals_arguments);

                /**
                 * Creates a new decimals_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns decimals_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs1.Idecimals_arguments): koinos.standards.kcs1.decimals_arguments;

                /**
                 * Encodes the specified decimals_arguments message. Does not implicitly {@link koinos.standards.kcs1.decimals_arguments.verify|verify} messages.
                 * @param message decimals_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs1.Idecimals_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified decimals_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs1.decimals_arguments.verify|verify} messages.
                 * @param message decimals_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs1.Idecimals_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a decimals_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns decimals_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs1.decimals_arguments;

                /**
                 * Decodes a decimals_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns decimals_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs1.decimals_arguments;

                /**
                 * Verifies a decimals_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a decimals_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns decimals_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs1.decimals_arguments;

                /**
                 * Creates a plain object from a decimals_arguments message. Also converts values to other types if specified.
                 * @param message decimals_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs1.decimals_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this decimals_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a decimals_result. */
            interface Idecimals_result {

                /** decimals_result value */
                value?: (number|null);
            }

            /** Represents a decimals_result. */
            class decimals_result implements Idecimals_result {

                /**
                 * Constructs a new decimals_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs1.Idecimals_result);

                /** decimals_result value. */
                public value: number;

                /**
                 * Creates a new decimals_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns decimals_result instance
                 */
                public static create(properties?: koinos.standards.kcs1.Idecimals_result): koinos.standards.kcs1.decimals_result;

                /**
                 * Encodes the specified decimals_result message. Does not implicitly {@link koinos.standards.kcs1.decimals_result.verify|verify} messages.
                 * @param message decimals_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs1.Idecimals_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified decimals_result message, length delimited. Does not implicitly {@link koinos.standards.kcs1.decimals_result.verify|verify} messages.
                 * @param message decimals_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs1.Idecimals_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a decimals_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns decimals_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs1.decimals_result;

                /**
                 * Decodes a decimals_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns decimals_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs1.decimals_result;

                /**
                 * Verifies a decimals_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a decimals_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns decimals_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs1.decimals_result;

                /**
                 * Creates a plain object from a decimals_result message. Also converts values to other types if specified.
                 * @param message decimals_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs1.decimals_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this decimals_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a total_supply_arguments. */
            interface Itotal_supply_arguments {
            }

            /** Represents a total_supply_arguments. */
            class total_supply_arguments implements Itotal_supply_arguments {

                /**
                 * Constructs a new total_supply_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs1.Itotal_supply_arguments);

                /**
                 * Creates a new total_supply_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns total_supply_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs1.Itotal_supply_arguments): koinos.standards.kcs1.total_supply_arguments;

                /**
                 * Encodes the specified total_supply_arguments message. Does not implicitly {@link koinos.standards.kcs1.total_supply_arguments.verify|verify} messages.
                 * @param message total_supply_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs1.Itotal_supply_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified total_supply_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs1.total_supply_arguments.verify|verify} messages.
                 * @param message total_supply_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs1.Itotal_supply_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a total_supply_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns total_supply_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs1.total_supply_arguments;

                /**
                 * Decodes a total_supply_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns total_supply_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs1.total_supply_arguments;

                /**
                 * Verifies a total_supply_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a total_supply_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns total_supply_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs1.total_supply_arguments;

                /**
                 * Creates a plain object from a total_supply_arguments message. Also converts values to other types if specified.
                 * @param message total_supply_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs1.total_supply_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this total_supply_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a total_supply_result. */
            interface Itotal_supply_result {

                /** total_supply_result value */
                value?: (number|Long|null);
            }

            /** Represents a total_supply_result. */
            class total_supply_result implements Itotal_supply_result {

                /**
                 * Constructs a new total_supply_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs1.Itotal_supply_result);

                /** total_supply_result value. */
                public value: (number|Long);

                /**
                 * Creates a new total_supply_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns total_supply_result instance
                 */
                public static create(properties?: koinos.standards.kcs1.Itotal_supply_result): koinos.standards.kcs1.total_supply_result;

                /**
                 * Encodes the specified total_supply_result message. Does not implicitly {@link koinos.standards.kcs1.total_supply_result.verify|verify} messages.
                 * @param message total_supply_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs1.Itotal_supply_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified total_supply_result message, length delimited. Does not implicitly {@link koinos.standards.kcs1.total_supply_result.verify|verify} messages.
                 * @param message total_supply_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs1.Itotal_supply_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a total_supply_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns total_supply_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs1.total_supply_result;

                /**
                 * Decodes a total_supply_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns total_supply_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs1.total_supply_result;

                /**
                 * Verifies a total_supply_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a total_supply_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns total_supply_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs1.total_supply_result;

                /**
                 * Creates a plain object from a total_supply_result message. Also converts values to other types if specified.
                 * @param message total_supply_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs1.total_supply_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this total_supply_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a balance_of_arguments. */
            interface Ibalance_of_arguments {

                /** balance_of_arguments owner */
                owner?: (Uint8Array|null);
            }

            /** Represents a balance_of_arguments. */
            class balance_of_arguments implements Ibalance_of_arguments {

                /**
                 * Constructs a new balance_of_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs1.Ibalance_of_arguments);

                /** balance_of_arguments owner. */
                public owner: Uint8Array;

                /**
                 * Creates a new balance_of_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns balance_of_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs1.Ibalance_of_arguments): koinos.standards.kcs1.balance_of_arguments;

                /**
                 * Encodes the specified balance_of_arguments message. Does not implicitly {@link koinos.standards.kcs1.balance_of_arguments.verify|verify} messages.
                 * @param message balance_of_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs1.Ibalance_of_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified balance_of_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs1.balance_of_arguments.verify|verify} messages.
                 * @param message balance_of_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs1.Ibalance_of_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a balance_of_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns balance_of_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs1.balance_of_arguments;

                /**
                 * Decodes a balance_of_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns balance_of_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs1.balance_of_arguments;

                /**
                 * Verifies a balance_of_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a balance_of_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns balance_of_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs1.balance_of_arguments;

                /**
                 * Creates a plain object from a balance_of_arguments message. Also converts values to other types if specified.
                 * @param message balance_of_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs1.balance_of_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this balance_of_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a balance_of_result. */
            interface Ibalance_of_result {

                /** balance_of_result value */
                value?: (number|Long|null);
            }

            /** Represents a balance_of_result. */
            class balance_of_result implements Ibalance_of_result {

                /**
                 * Constructs a new balance_of_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs1.Ibalance_of_result);

                /** balance_of_result value. */
                public value: (number|Long);

                /**
                 * Creates a new balance_of_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns balance_of_result instance
                 */
                public static create(properties?: koinos.standards.kcs1.Ibalance_of_result): koinos.standards.kcs1.balance_of_result;

                /**
                 * Encodes the specified balance_of_result message. Does not implicitly {@link koinos.standards.kcs1.balance_of_result.verify|verify} messages.
                 * @param message balance_of_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs1.Ibalance_of_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified balance_of_result message, length delimited. Does not implicitly {@link koinos.standards.kcs1.balance_of_result.verify|verify} messages.
                 * @param message balance_of_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs1.Ibalance_of_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a balance_of_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns balance_of_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs1.balance_of_result;

                /**
                 * Decodes a balance_of_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns balance_of_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs1.balance_of_result;

                /**
                 * Verifies a balance_of_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a balance_of_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns balance_of_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs1.balance_of_result;

                /**
                 * Creates a plain object from a balance_of_result message. Also converts values to other types if specified.
                 * @param message balance_of_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs1.balance_of_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this balance_of_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a transfer_arguments. */
            interface Itransfer_arguments {

                /** transfer_arguments from */
                from?: (Uint8Array|null);

                /** transfer_arguments to */
                to?: (Uint8Array|null);

                /** transfer_arguments value */
                value?: (number|Long|null);
            }

            /** Represents a transfer_arguments. */
            class transfer_arguments implements Itransfer_arguments {

                /**
                 * Constructs a new transfer_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs1.Itransfer_arguments);

                /** transfer_arguments from. */
                public from: Uint8Array;

                /** transfer_arguments to. */
                public to: Uint8Array;

                /** transfer_arguments value. */
                public value: (number|Long);

                /**
                 * Creates a new transfer_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns transfer_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs1.Itransfer_arguments): koinos.standards.kcs1.transfer_arguments;

                /**
                 * Encodes the specified transfer_arguments message. Does not implicitly {@link koinos.standards.kcs1.transfer_arguments.verify|verify} messages.
                 * @param message transfer_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs1.Itransfer_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified transfer_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs1.transfer_arguments.verify|verify} messages.
                 * @param message transfer_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs1.Itransfer_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a transfer_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns transfer_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs1.transfer_arguments;

                /**
                 * Decodes a transfer_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns transfer_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs1.transfer_arguments;

                /**
                 * Verifies a transfer_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a transfer_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns transfer_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs1.transfer_arguments;

                /**
                 * Creates a plain object from a transfer_arguments message. Also converts values to other types if specified.
                 * @param message transfer_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs1.transfer_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this transfer_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a transfer_result. */
            interface Itransfer_result {
            }

            /** Represents a transfer_result. */
            class transfer_result implements Itransfer_result {

                /**
                 * Constructs a new transfer_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs1.Itransfer_result);

                /**
                 * Creates a new transfer_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns transfer_result instance
                 */
                public static create(properties?: koinos.standards.kcs1.Itransfer_result): koinos.standards.kcs1.transfer_result;

                /**
                 * Encodes the specified transfer_result message. Does not implicitly {@link koinos.standards.kcs1.transfer_result.verify|verify} messages.
                 * @param message transfer_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs1.Itransfer_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified transfer_result message, length delimited. Does not implicitly {@link koinos.standards.kcs1.transfer_result.verify|verify} messages.
                 * @param message transfer_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs1.Itransfer_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a transfer_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns transfer_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs1.transfer_result;

                /**
                 * Decodes a transfer_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns transfer_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs1.transfer_result;

                /**
                 * Verifies a transfer_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a transfer_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns transfer_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs1.transfer_result;

                /**
                 * Creates a plain object from a transfer_result message. Also converts values to other types if specified.
                 * @param message transfer_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs1.transfer_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this transfer_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a mint_arguments. */
            interface Imint_arguments {

                /** mint_arguments to */
                to?: (Uint8Array|null);

                /** mint_arguments value */
                value?: (number|Long|null);
            }

            /** Represents a mint_arguments. */
            class mint_arguments implements Imint_arguments {

                /**
                 * Constructs a new mint_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs1.Imint_arguments);

                /** mint_arguments to. */
                public to: Uint8Array;

                /** mint_arguments value. */
                public value: (number|Long);

                /**
                 * Creates a new mint_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns mint_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs1.Imint_arguments): koinos.standards.kcs1.mint_arguments;

                /**
                 * Encodes the specified mint_arguments message. Does not implicitly {@link koinos.standards.kcs1.mint_arguments.verify|verify} messages.
                 * @param message mint_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs1.Imint_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified mint_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs1.mint_arguments.verify|verify} messages.
                 * @param message mint_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs1.Imint_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a mint_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns mint_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs1.mint_arguments;

                /**
                 * Decodes a mint_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns mint_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs1.mint_arguments;

                /**
                 * Verifies a mint_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a mint_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns mint_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs1.mint_arguments;

                /**
                 * Creates a plain object from a mint_arguments message. Also converts values to other types if specified.
                 * @param message mint_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs1.mint_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this mint_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a mint_result. */
            interface Imint_result {
            }

            /** Represents a mint_result. */
            class mint_result implements Imint_result {

                /**
                 * Constructs a new mint_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs1.Imint_result);

                /**
                 * Creates a new mint_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns mint_result instance
                 */
                public static create(properties?: koinos.standards.kcs1.Imint_result): koinos.standards.kcs1.mint_result;

                /**
                 * Encodes the specified mint_result message. Does not implicitly {@link koinos.standards.kcs1.mint_result.verify|verify} messages.
                 * @param message mint_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs1.Imint_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified mint_result message, length delimited. Does not implicitly {@link koinos.standards.kcs1.mint_result.verify|verify} messages.
                 * @param message mint_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs1.Imint_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a mint_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns mint_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs1.mint_result;

                /**
                 * Decodes a mint_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns mint_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs1.mint_result;

                /**
                 * Verifies a mint_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a mint_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns mint_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs1.mint_result;

                /**
                 * Creates a plain object from a mint_result message. Also converts values to other types if specified.
                 * @param message mint_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs1.mint_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this mint_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a burn_arguments. */
            interface Iburn_arguments {

                /** burn_arguments from */
                from?: (Uint8Array|null);

                /** burn_arguments value */
                value?: (number|Long|null);
            }

            /** Represents a burn_arguments. */
            class burn_arguments implements Iburn_arguments {

                /**
                 * Constructs a new burn_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs1.Iburn_arguments);

                /** burn_arguments from. */
                public from: Uint8Array;

                /** burn_arguments value. */
                public value: (number|Long);

                /**
                 * Creates a new burn_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns burn_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs1.Iburn_arguments): koinos.standards.kcs1.burn_arguments;

                /**
                 * Encodes the specified burn_arguments message. Does not implicitly {@link koinos.standards.kcs1.burn_arguments.verify|verify} messages.
                 * @param message burn_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs1.Iburn_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified burn_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs1.burn_arguments.verify|verify} messages.
                 * @param message burn_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs1.Iburn_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a burn_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns burn_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs1.burn_arguments;

                /**
                 * Decodes a burn_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns burn_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs1.burn_arguments;

                /**
                 * Verifies a burn_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a burn_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns burn_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs1.burn_arguments;

                /**
                 * Creates a plain object from a burn_arguments message. Also converts values to other types if specified.
                 * @param message burn_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs1.burn_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this burn_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a burn_result. */
            interface Iburn_result {
            }

            /** Represents a burn_result. */
            class burn_result implements Iburn_result {

                /**
                 * Constructs a new burn_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs1.Iburn_result);

                /**
                 * Creates a new burn_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns burn_result instance
                 */
                public static create(properties?: koinos.standards.kcs1.Iburn_result): koinos.standards.kcs1.burn_result;

                /**
                 * Encodes the specified burn_result message. Does not implicitly {@link koinos.standards.kcs1.burn_result.verify|verify} messages.
                 * @param message burn_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs1.Iburn_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified burn_result message, length delimited. Does not implicitly {@link koinos.standards.kcs1.burn_result.verify|verify} messages.
                 * @param message burn_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs1.Iburn_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a burn_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns burn_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs1.burn_result;

                /**
                 * Decodes a burn_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns burn_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs1.burn_result;

                /**
                 * Verifies a burn_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a burn_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns burn_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs1.burn_result;

                /**
                 * Creates a plain object from a burn_result message. Also converts values to other types if specified.
                 * @param message burn_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs1.burn_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this burn_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a burn_event. */
            interface Iburn_event {

                /** burn_event from */
                from?: (Uint8Array|null);

                /** burn_event value */
                value?: (number|Long|null);
            }

            /** Represents a burn_event. */
            class burn_event implements Iburn_event {

                /**
                 * Constructs a new burn_event.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs1.Iburn_event);

                /** burn_event from. */
                public from: Uint8Array;

                /** burn_event value. */
                public value: (number|Long);

                /**
                 * Creates a new burn_event instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns burn_event instance
                 */
                public static create(properties?: koinos.standards.kcs1.Iburn_event): koinos.standards.kcs1.burn_event;

                /**
                 * Encodes the specified burn_event message. Does not implicitly {@link koinos.standards.kcs1.burn_event.verify|verify} messages.
                 * @param message burn_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs1.Iburn_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified burn_event message, length delimited. Does not implicitly {@link koinos.standards.kcs1.burn_event.verify|verify} messages.
                 * @param message burn_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs1.Iburn_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a burn_event message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns burn_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs1.burn_event;

                /**
                 * Decodes a burn_event message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns burn_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs1.burn_event;

                /**
                 * Verifies a burn_event message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a burn_event message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns burn_event
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs1.burn_event;

                /**
                 * Creates a plain object from a burn_event message. Also converts values to other types if specified.
                 * @param message burn_event
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs1.burn_event, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this burn_event to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a mint_event. */
            interface Imint_event {

                /** mint_event to */
                to?: (Uint8Array|null);

                /** mint_event value */
                value?: (number|Long|null);
            }

            /** Represents a mint_event. */
            class mint_event implements Imint_event {

                /**
                 * Constructs a new mint_event.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs1.Imint_event);

                /** mint_event to. */
                public to: Uint8Array;

                /** mint_event value. */
                public value: (number|Long);

                /**
                 * Creates a new mint_event instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns mint_event instance
                 */
                public static create(properties?: koinos.standards.kcs1.Imint_event): koinos.standards.kcs1.mint_event;

                /**
                 * Encodes the specified mint_event message. Does not implicitly {@link koinos.standards.kcs1.mint_event.verify|verify} messages.
                 * @param message mint_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs1.Imint_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified mint_event message, length delimited. Does not implicitly {@link koinos.standards.kcs1.mint_event.verify|verify} messages.
                 * @param message mint_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs1.Imint_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a mint_event message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns mint_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs1.mint_event;

                /**
                 * Decodes a mint_event message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns mint_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs1.mint_event;

                /**
                 * Verifies a mint_event message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a mint_event message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns mint_event
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs1.mint_event;

                /**
                 * Creates a plain object from a mint_event message. Also converts values to other types if specified.
                 * @param message mint_event
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs1.mint_event, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this mint_event to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a transfer_event. */
            interface Itransfer_event {

                /** transfer_event from */
                from?: (Uint8Array|null);

                /** transfer_event to */
                to?: (Uint8Array|null);

                /** transfer_event value */
                value?: (number|Long|null);
            }

            /** Represents a transfer_event. */
            class transfer_event implements Itransfer_event {

                /**
                 * Constructs a new transfer_event.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs1.Itransfer_event);

                /** transfer_event from. */
                public from: Uint8Array;

                /** transfer_event to. */
                public to: Uint8Array;

                /** transfer_event value. */
                public value: (number|Long);

                /**
                 * Creates a new transfer_event instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns transfer_event instance
                 */
                public static create(properties?: koinos.standards.kcs1.Itransfer_event): koinos.standards.kcs1.transfer_event;

                /**
                 * Encodes the specified transfer_event message. Does not implicitly {@link koinos.standards.kcs1.transfer_event.verify|verify} messages.
                 * @param message transfer_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs1.Itransfer_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified transfer_event message, length delimited. Does not implicitly {@link koinos.standards.kcs1.transfer_event.verify|verify} messages.
                 * @param message transfer_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs1.Itransfer_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a transfer_event message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns transfer_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs1.transfer_event;

                /**
                 * Decodes a transfer_event message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns transfer_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs1.transfer_event;

                /**
                 * Verifies a transfer_event message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a transfer_event message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns transfer_event
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs1.transfer_event;

                /**
                 * Creates a plain object from a transfer_event message. Also converts values to other types if specified.
                 * @param message transfer_event
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs1.transfer_event, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this transfer_event to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Namespace kcs4. */
        namespace kcs4 {

            /** Properties of a name_arguments. */
            interface Iname_arguments {
            }

            /** Represents a name_arguments. */
            class name_arguments implements Iname_arguments {

                /**
                 * Constructs a new name_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs4.Iname_arguments);

                /**
                 * Creates a new name_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns name_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs4.Iname_arguments): koinos.standards.kcs4.name_arguments;

                /**
                 * Encodes the specified name_arguments message. Does not implicitly {@link koinos.standards.kcs4.name_arguments.verify|verify} messages.
                 * @param message name_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs4.Iname_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified name_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs4.name_arguments.verify|verify} messages.
                 * @param message name_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs4.Iname_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a name_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns name_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs4.name_arguments;

                /**
                 * Decodes a name_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns name_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs4.name_arguments;

                /**
                 * Verifies a name_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a name_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns name_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs4.name_arguments;

                /**
                 * Creates a plain object from a name_arguments message. Also converts values to other types if specified.
                 * @param message name_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs4.name_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this name_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a name_result. */
            interface Iname_result {

                /** name_result value */
                value?: (string|null);
            }

            /** Represents a name_result. */
            class name_result implements Iname_result {

                /**
                 * Constructs a new name_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs4.Iname_result);

                /** name_result value. */
                public value: string;

                /**
                 * Creates a new name_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns name_result instance
                 */
                public static create(properties?: koinos.standards.kcs4.Iname_result): koinos.standards.kcs4.name_result;

                /**
                 * Encodes the specified name_result message. Does not implicitly {@link koinos.standards.kcs4.name_result.verify|verify} messages.
                 * @param message name_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs4.Iname_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified name_result message, length delimited. Does not implicitly {@link koinos.standards.kcs4.name_result.verify|verify} messages.
                 * @param message name_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs4.Iname_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a name_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns name_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs4.name_result;

                /**
                 * Decodes a name_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns name_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs4.name_result;

                /**
                 * Verifies a name_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a name_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns name_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs4.name_result;

                /**
                 * Creates a plain object from a name_result message. Also converts values to other types if specified.
                 * @param message name_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs4.name_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this name_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a symbol_arguments. */
            interface Isymbol_arguments {
            }

            /** Represents a symbol_arguments. */
            class symbol_arguments implements Isymbol_arguments {

                /**
                 * Constructs a new symbol_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs4.Isymbol_arguments);

                /**
                 * Creates a new symbol_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns symbol_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs4.Isymbol_arguments): koinos.standards.kcs4.symbol_arguments;

                /**
                 * Encodes the specified symbol_arguments message. Does not implicitly {@link koinos.standards.kcs4.symbol_arguments.verify|verify} messages.
                 * @param message symbol_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs4.Isymbol_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified symbol_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs4.symbol_arguments.verify|verify} messages.
                 * @param message symbol_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs4.Isymbol_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a symbol_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns symbol_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs4.symbol_arguments;

                /**
                 * Decodes a symbol_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns symbol_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs4.symbol_arguments;

                /**
                 * Verifies a symbol_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a symbol_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns symbol_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs4.symbol_arguments;

                /**
                 * Creates a plain object from a symbol_arguments message. Also converts values to other types if specified.
                 * @param message symbol_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs4.symbol_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this symbol_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a symbol_result. */
            interface Isymbol_result {

                /** symbol_result value */
                value?: (string|null);
            }

            /** Represents a symbol_result. */
            class symbol_result implements Isymbol_result {

                /**
                 * Constructs a new symbol_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs4.Isymbol_result);

                /** symbol_result value. */
                public value: string;

                /**
                 * Creates a new symbol_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns symbol_result instance
                 */
                public static create(properties?: koinos.standards.kcs4.Isymbol_result): koinos.standards.kcs4.symbol_result;

                /**
                 * Encodes the specified symbol_result message. Does not implicitly {@link koinos.standards.kcs4.symbol_result.verify|verify} messages.
                 * @param message symbol_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs4.Isymbol_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified symbol_result message, length delimited. Does not implicitly {@link koinos.standards.kcs4.symbol_result.verify|verify} messages.
                 * @param message symbol_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs4.Isymbol_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a symbol_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns symbol_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs4.symbol_result;

                /**
                 * Decodes a symbol_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns symbol_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs4.symbol_result;

                /**
                 * Verifies a symbol_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a symbol_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns symbol_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs4.symbol_result;

                /**
                 * Creates a plain object from a symbol_result message. Also converts values to other types if specified.
                 * @param message symbol_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs4.symbol_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this symbol_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a decimals_arguments. */
            interface Idecimals_arguments {
            }

            /** Represents a decimals_arguments. */
            class decimals_arguments implements Idecimals_arguments {

                /**
                 * Constructs a new decimals_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs4.Idecimals_arguments);

                /**
                 * Creates a new decimals_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns decimals_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs4.Idecimals_arguments): koinos.standards.kcs4.decimals_arguments;

                /**
                 * Encodes the specified decimals_arguments message. Does not implicitly {@link koinos.standards.kcs4.decimals_arguments.verify|verify} messages.
                 * @param message decimals_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs4.Idecimals_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified decimals_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs4.decimals_arguments.verify|verify} messages.
                 * @param message decimals_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs4.Idecimals_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a decimals_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns decimals_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs4.decimals_arguments;

                /**
                 * Decodes a decimals_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns decimals_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs4.decimals_arguments;

                /**
                 * Verifies a decimals_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a decimals_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns decimals_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs4.decimals_arguments;

                /**
                 * Creates a plain object from a decimals_arguments message. Also converts values to other types if specified.
                 * @param message decimals_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs4.decimals_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this decimals_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a decimals_result. */
            interface Idecimals_result {

                /** decimals_result value */
                value?: (number|null);
            }

            /** Represents a decimals_result. */
            class decimals_result implements Idecimals_result {

                /**
                 * Constructs a new decimals_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs4.Idecimals_result);

                /** decimals_result value. */
                public value: number;

                /**
                 * Creates a new decimals_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns decimals_result instance
                 */
                public static create(properties?: koinos.standards.kcs4.Idecimals_result): koinos.standards.kcs4.decimals_result;

                /**
                 * Encodes the specified decimals_result message. Does not implicitly {@link koinos.standards.kcs4.decimals_result.verify|verify} messages.
                 * @param message decimals_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs4.Idecimals_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified decimals_result message, length delimited. Does not implicitly {@link koinos.standards.kcs4.decimals_result.verify|verify} messages.
                 * @param message decimals_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs4.Idecimals_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a decimals_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns decimals_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs4.decimals_result;

                /**
                 * Decodes a decimals_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns decimals_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs4.decimals_result;

                /**
                 * Verifies a decimals_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a decimals_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns decimals_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs4.decimals_result;

                /**
                 * Creates a plain object from a decimals_result message. Also converts values to other types if specified.
                 * @param message decimals_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs4.decimals_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this decimals_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a total_supply_arguments. */
            interface Itotal_supply_arguments {
            }

            /** Represents a total_supply_arguments. */
            class total_supply_arguments implements Itotal_supply_arguments {

                /**
                 * Constructs a new total_supply_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs4.Itotal_supply_arguments);

                /**
                 * Creates a new total_supply_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns total_supply_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs4.Itotal_supply_arguments): koinos.standards.kcs4.total_supply_arguments;

                /**
                 * Encodes the specified total_supply_arguments message. Does not implicitly {@link koinos.standards.kcs4.total_supply_arguments.verify|verify} messages.
                 * @param message total_supply_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs4.Itotal_supply_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified total_supply_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs4.total_supply_arguments.verify|verify} messages.
                 * @param message total_supply_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs4.Itotal_supply_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a total_supply_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns total_supply_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs4.total_supply_arguments;

                /**
                 * Decodes a total_supply_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns total_supply_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs4.total_supply_arguments;

                /**
                 * Verifies a total_supply_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a total_supply_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns total_supply_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs4.total_supply_arguments;

                /**
                 * Creates a plain object from a total_supply_arguments message. Also converts values to other types if specified.
                 * @param message total_supply_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs4.total_supply_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this total_supply_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a total_supply_result. */
            interface Itotal_supply_result {

                /** total_supply_result value */
                value?: (number|Long|null);
            }

            /** Represents a total_supply_result. */
            class total_supply_result implements Itotal_supply_result {

                /**
                 * Constructs a new total_supply_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs4.Itotal_supply_result);

                /** total_supply_result value. */
                public value: (number|Long);

                /**
                 * Creates a new total_supply_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns total_supply_result instance
                 */
                public static create(properties?: koinos.standards.kcs4.Itotal_supply_result): koinos.standards.kcs4.total_supply_result;

                /**
                 * Encodes the specified total_supply_result message. Does not implicitly {@link koinos.standards.kcs4.total_supply_result.verify|verify} messages.
                 * @param message total_supply_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs4.Itotal_supply_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified total_supply_result message, length delimited. Does not implicitly {@link koinos.standards.kcs4.total_supply_result.verify|verify} messages.
                 * @param message total_supply_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs4.Itotal_supply_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a total_supply_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns total_supply_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs4.total_supply_result;

                /**
                 * Decodes a total_supply_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns total_supply_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs4.total_supply_result;

                /**
                 * Verifies a total_supply_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a total_supply_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns total_supply_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs4.total_supply_result;

                /**
                 * Creates a plain object from a total_supply_result message. Also converts values to other types if specified.
                 * @param message total_supply_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs4.total_supply_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this total_supply_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a balance_of_arguments. */
            interface Ibalance_of_arguments {

                /** balance_of_arguments owner */
                owner?: (Uint8Array|null);
            }

            /** Represents a balance_of_arguments. */
            class balance_of_arguments implements Ibalance_of_arguments {

                /**
                 * Constructs a new balance_of_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs4.Ibalance_of_arguments);

                /** balance_of_arguments owner. */
                public owner: Uint8Array;

                /**
                 * Creates a new balance_of_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns balance_of_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs4.Ibalance_of_arguments): koinos.standards.kcs4.balance_of_arguments;

                /**
                 * Encodes the specified balance_of_arguments message. Does not implicitly {@link koinos.standards.kcs4.balance_of_arguments.verify|verify} messages.
                 * @param message balance_of_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs4.Ibalance_of_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified balance_of_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs4.balance_of_arguments.verify|verify} messages.
                 * @param message balance_of_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs4.Ibalance_of_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a balance_of_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns balance_of_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs4.balance_of_arguments;

                /**
                 * Decodes a balance_of_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns balance_of_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs4.balance_of_arguments;

                /**
                 * Verifies a balance_of_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a balance_of_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns balance_of_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs4.balance_of_arguments;

                /**
                 * Creates a plain object from a balance_of_arguments message. Also converts values to other types if specified.
                 * @param message balance_of_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs4.balance_of_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this balance_of_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a balance_of_result. */
            interface Ibalance_of_result {

                /** balance_of_result value */
                value?: (number|Long|null);
            }

            /** Represents a balance_of_result. */
            class balance_of_result implements Ibalance_of_result {

                /**
                 * Constructs a new balance_of_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs4.Ibalance_of_result);

                /** balance_of_result value. */
                public value: (number|Long);

                /**
                 * Creates a new balance_of_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns balance_of_result instance
                 */
                public static create(properties?: koinos.standards.kcs4.Ibalance_of_result): koinos.standards.kcs4.balance_of_result;

                /**
                 * Encodes the specified balance_of_result message. Does not implicitly {@link koinos.standards.kcs4.balance_of_result.verify|verify} messages.
                 * @param message balance_of_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs4.Ibalance_of_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified balance_of_result message, length delimited. Does not implicitly {@link koinos.standards.kcs4.balance_of_result.verify|verify} messages.
                 * @param message balance_of_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs4.Ibalance_of_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a balance_of_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns balance_of_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs4.balance_of_result;

                /**
                 * Decodes a balance_of_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns balance_of_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs4.balance_of_result;

                /**
                 * Verifies a balance_of_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a balance_of_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns balance_of_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs4.balance_of_result;

                /**
                 * Creates a plain object from a balance_of_result message. Also converts values to other types if specified.
                 * @param message balance_of_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs4.balance_of_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this balance_of_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_info_arguments. */
            interface Iget_info_arguments {
            }

            /** Represents a get_info_arguments. */
            class get_info_arguments implements Iget_info_arguments {

                /**
                 * Constructs a new get_info_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs4.Iget_info_arguments);

                /**
                 * Creates a new get_info_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_info_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs4.Iget_info_arguments): koinos.standards.kcs4.get_info_arguments;

                /**
                 * Encodes the specified get_info_arguments message. Does not implicitly {@link koinos.standards.kcs4.get_info_arguments.verify|verify} messages.
                 * @param message get_info_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs4.Iget_info_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_info_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs4.get_info_arguments.verify|verify} messages.
                 * @param message get_info_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs4.Iget_info_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_info_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_info_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs4.get_info_arguments;

                /**
                 * Decodes a get_info_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_info_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs4.get_info_arguments;

                /**
                 * Verifies a get_info_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_info_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_info_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs4.get_info_arguments;

                /**
                 * Creates a plain object from a get_info_arguments message. Also converts values to other types if specified.
                 * @param message get_info_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs4.get_info_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_info_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_info_result. */
            interface Iget_info_result {

                /** get_info_result name */
                name?: (string|null);

                /** get_info_result symbol */
                symbol?: (string|null);

                /** get_info_result decimals */
                decimals?: (number|null);
            }

            /** Represents a get_info_result. */
            class get_info_result implements Iget_info_result {

                /**
                 * Constructs a new get_info_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs4.Iget_info_result);

                /** get_info_result name. */
                public name: string;

                /** get_info_result symbol. */
                public symbol: string;

                /** get_info_result decimals. */
                public decimals: number;

                /**
                 * Creates a new get_info_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_info_result instance
                 */
                public static create(properties?: koinos.standards.kcs4.Iget_info_result): koinos.standards.kcs4.get_info_result;

                /**
                 * Encodes the specified get_info_result message. Does not implicitly {@link koinos.standards.kcs4.get_info_result.verify|verify} messages.
                 * @param message get_info_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs4.Iget_info_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_info_result message, length delimited. Does not implicitly {@link koinos.standards.kcs4.get_info_result.verify|verify} messages.
                 * @param message get_info_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs4.Iget_info_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_info_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_info_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs4.get_info_result;

                /**
                 * Decodes a get_info_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_info_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs4.get_info_result;

                /**
                 * Verifies a get_info_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_info_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_info_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs4.get_info_result;

                /**
                 * Creates a plain object from a get_info_result message. Also converts values to other types if specified.
                 * @param message get_info_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs4.get_info_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_info_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an allowance_arguments. */
            interface Iallowance_arguments {

                /** allowance_arguments owner */
                owner?: (Uint8Array|null);

                /** allowance_arguments spender */
                spender?: (Uint8Array|null);
            }

            /** Represents an allowance_arguments. */
            class allowance_arguments implements Iallowance_arguments {

                /**
                 * Constructs a new allowance_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs4.Iallowance_arguments);

                /** allowance_arguments owner. */
                public owner: Uint8Array;

                /** allowance_arguments spender. */
                public spender: Uint8Array;

                /**
                 * Creates a new allowance_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns allowance_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs4.Iallowance_arguments): koinos.standards.kcs4.allowance_arguments;

                /**
                 * Encodes the specified allowance_arguments message. Does not implicitly {@link koinos.standards.kcs4.allowance_arguments.verify|verify} messages.
                 * @param message allowance_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs4.Iallowance_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified allowance_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs4.allowance_arguments.verify|verify} messages.
                 * @param message allowance_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs4.Iallowance_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an allowance_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns allowance_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs4.allowance_arguments;

                /**
                 * Decodes an allowance_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns allowance_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs4.allowance_arguments;

                /**
                 * Verifies an allowance_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an allowance_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns allowance_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs4.allowance_arguments;

                /**
                 * Creates a plain object from an allowance_arguments message. Also converts values to other types if specified.
                 * @param message allowance_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs4.allowance_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this allowance_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an allowance_result. */
            interface Iallowance_result {

                /** allowance_result value */
                value?: (number|Long|null);
            }

            /** Represents an allowance_result. */
            class allowance_result implements Iallowance_result {

                /**
                 * Constructs a new allowance_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs4.Iallowance_result);

                /** allowance_result value. */
                public value: (number|Long);

                /**
                 * Creates a new allowance_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns allowance_result instance
                 */
                public static create(properties?: koinos.standards.kcs4.Iallowance_result): koinos.standards.kcs4.allowance_result;

                /**
                 * Encodes the specified allowance_result message. Does not implicitly {@link koinos.standards.kcs4.allowance_result.verify|verify} messages.
                 * @param message allowance_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs4.Iallowance_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified allowance_result message, length delimited. Does not implicitly {@link koinos.standards.kcs4.allowance_result.verify|verify} messages.
                 * @param message allowance_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs4.Iallowance_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an allowance_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns allowance_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs4.allowance_result;

                /**
                 * Decodes an allowance_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns allowance_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs4.allowance_result;

                /**
                 * Verifies an allowance_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an allowance_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns allowance_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs4.allowance_result;

                /**
                 * Creates a plain object from an allowance_result message. Also converts values to other types if specified.
                 * @param message allowance_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs4.allowance_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this allowance_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a spender_value. */
            interface Ispender_value {

                /** spender_value spender */
                spender?: (Uint8Array|null);

                /** spender_value value */
                value?: (number|Long|null);
            }

            /** Represents a spender_value. */
            class spender_value implements Ispender_value {

                /**
                 * Constructs a new spender_value.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs4.Ispender_value);

                /** spender_value spender. */
                public spender: Uint8Array;

                /** spender_value value. */
                public value: (number|Long);

                /**
                 * Creates a new spender_value instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns spender_value instance
                 */
                public static create(properties?: koinos.standards.kcs4.Ispender_value): koinos.standards.kcs4.spender_value;

                /**
                 * Encodes the specified spender_value message. Does not implicitly {@link koinos.standards.kcs4.spender_value.verify|verify} messages.
                 * @param message spender_value message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs4.Ispender_value, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified spender_value message, length delimited. Does not implicitly {@link koinos.standards.kcs4.spender_value.verify|verify} messages.
                 * @param message spender_value message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs4.Ispender_value, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a spender_value message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns spender_value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs4.spender_value;

                /**
                 * Decodes a spender_value message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns spender_value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs4.spender_value;

                /**
                 * Verifies a spender_value message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a spender_value message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns spender_value
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs4.spender_value;

                /**
                 * Creates a plain object from a spender_value message. Also converts values to other types if specified.
                 * @param message spender_value
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs4.spender_value, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this spender_value to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_allowances_arguments. */
            interface Iget_allowances_arguments {

                /** get_allowances_arguments owner */
                owner?: (Uint8Array|null);

                /** get_allowances_arguments start */
                start?: (Uint8Array|null);

                /** get_allowances_arguments limit */
                limit?: (number|null);

                /** get_allowances_arguments descending */
                descending?: (boolean|null);
            }

            /** Represents a get_allowances_arguments. */
            class get_allowances_arguments implements Iget_allowances_arguments {

                /**
                 * Constructs a new get_allowances_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs4.Iget_allowances_arguments);

                /** get_allowances_arguments owner. */
                public owner: Uint8Array;

                /** get_allowances_arguments start. */
                public start: Uint8Array;

                /** get_allowances_arguments limit. */
                public limit: number;

                /** get_allowances_arguments descending. */
                public descending: boolean;

                /**
                 * Creates a new get_allowances_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_allowances_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs4.Iget_allowances_arguments): koinos.standards.kcs4.get_allowances_arguments;

                /**
                 * Encodes the specified get_allowances_arguments message. Does not implicitly {@link koinos.standards.kcs4.get_allowances_arguments.verify|verify} messages.
                 * @param message get_allowances_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs4.Iget_allowances_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_allowances_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs4.get_allowances_arguments.verify|verify} messages.
                 * @param message get_allowances_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs4.Iget_allowances_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_allowances_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_allowances_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs4.get_allowances_arguments;

                /**
                 * Decodes a get_allowances_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_allowances_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs4.get_allowances_arguments;

                /**
                 * Verifies a get_allowances_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_allowances_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_allowances_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs4.get_allowances_arguments;

                /**
                 * Creates a plain object from a get_allowances_arguments message. Also converts values to other types if specified.
                 * @param message get_allowances_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs4.get_allowances_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_allowances_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_allowances_result. */
            interface Iget_allowances_result {

                /** get_allowances_result owner */
                owner?: (Uint8Array|null);

                /** get_allowances_result allowances */
                allowances?: (koinos.standards.kcs4.Ispender_value[]|null);
            }

            /** Represents a get_allowances_result. */
            class get_allowances_result implements Iget_allowances_result {

                /**
                 * Constructs a new get_allowances_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs4.Iget_allowances_result);

                /** get_allowances_result owner. */
                public owner: Uint8Array;

                /** get_allowances_result allowances. */
                public allowances: koinos.standards.kcs4.Ispender_value[];

                /**
                 * Creates a new get_allowances_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_allowances_result instance
                 */
                public static create(properties?: koinos.standards.kcs4.Iget_allowances_result): koinos.standards.kcs4.get_allowances_result;

                /**
                 * Encodes the specified get_allowances_result message. Does not implicitly {@link koinos.standards.kcs4.get_allowances_result.verify|verify} messages.
                 * @param message get_allowances_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs4.Iget_allowances_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_allowances_result message, length delimited. Does not implicitly {@link koinos.standards.kcs4.get_allowances_result.verify|verify} messages.
                 * @param message get_allowances_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs4.Iget_allowances_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_allowances_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_allowances_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs4.get_allowances_result;

                /**
                 * Decodes a get_allowances_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_allowances_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs4.get_allowances_result;

                /**
                 * Verifies a get_allowances_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_allowances_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_allowances_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs4.get_allowances_result;

                /**
                 * Creates a plain object from a get_allowances_result message. Also converts values to other types if specified.
                 * @param message get_allowances_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs4.get_allowances_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_allowances_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a transfer_arguments. */
            interface Itransfer_arguments {

                /** transfer_arguments from */
                from?: (Uint8Array|null);

                /** transfer_arguments to */
                to?: (Uint8Array|null);

                /** transfer_arguments value */
                value?: (number|Long|null);

                /** transfer_arguments memo */
                memo?: (string|null);
            }

            /** Represents a transfer_arguments. */
            class transfer_arguments implements Itransfer_arguments {

                /**
                 * Constructs a new transfer_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs4.Itransfer_arguments);

                /** transfer_arguments from. */
                public from: Uint8Array;

                /** transfer_arguments to. */
                public to: Uint8Array;

                /** transfer_arguments value. */
                public value: (number|Long);

                /** transfer_arguments memo. */
                public memo?: (string|null);

                /** transfer_arguments _memo. */
                public _memo?: "memo";

                /**
                 * Creates a new transfer_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns transfer_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs4.Itransfer_arguments): koinos.standards.kcs4.transfer_arguments;

                /**
                 * Encodes the specified transfer_arguments message. Does not implicitly {@link koinos.standards.kcs4.transfer_arguments.verify|verify} messages.
                 * @param message transfer_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs4.Itransfer_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified transfer_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs4.transfer_arguments.verify|verify} messages.
                 * @param message transfer_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs4.Itransfer_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a transfer_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns transfer_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs4.transfer_arguments;

                /**
                 * Decodes a transfer_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns transfer_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs4.transfer_arguments;

                /**
                 * Verifies a transfer_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a transfer_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns transfer_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs4.transfer_arguments;

                /**
                 * Creates a plain object from a transfer_arguments message. Also converts values to other types if specified.
                 * @param message transfer_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs4.transfer_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this transfer_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a transfer_result. */
            interface Itransfer_result {
            }

            /** Represents a transfer_result. */
            class transfer_result implements Itransfer_result {

                /**
                 * Constructs a new transfer_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs4.Itransfer_result);

                /**
                 * Creates a new transfer_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns transfer_result instance
                 */
                public static create(properties?: koinos.standards.kcs4.Itransfer_result): koinos.standards.kcs4.transfer_result;

                /**
                 * Encodes the specified transfer_result message. Does not implicitly {@link koinos.standards.kcs4.transfer_result.verify|verify} messages.
                 * @param message transfer_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs4.Itransfer_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified transfer_result message, length delimited. Does not implicitly {@link koinos.standards.kcs4.transfer_result.verify|verify} messages.
                 * @param message transfer_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs4.Itransfer_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a transfer_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns transfer_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs4.transfer_result;

                /**
                 * Decodes a transfer_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns transfer_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs4.transfer_result;

                /**
                 * Verifies a transfer_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a transfer_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns transfer_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs4.transfer_result;

                /**
                 * Creates a plain object from a transfer_result message. Also converts values to other types if specified.
                 * @param message transfer_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs4.transfer_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this transfer_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a mint_arguments. */
            interface Imint_arguments {

                /** mint_arguments to */
                to?: (Uint8Array|null);

                /** mint_arguments value */
                value?: (number|Long|null);

                /** mint_arguments memo */
                memo?: (string|null);
            }

            /** Represents a mint_arguments. */
            class mint_arguments implements Imint_arguments {

                /**
                 * Constructs a new mint_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs4.Imint_arguments);

                /** mint_arguments to. */
                public to: Uint8Array;

                /** mint_arguments value. */
                public value: (number|Long);

                /** mint_arguments memo. */
                public memo?: (string|null);

                /** mint_arguments _memo. */
                public _memo?: "memo";

                /**
                 * Creates a new mint_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns mint_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs4.Imint_arguments): koinos.standards.kcs4.mint_arguments;

                /**
                 * Encodes the specified mint_arguments message. Does not implicitly {@link koinos.standards.kcs4.mint_arguments.verify|verify} messages.
                 * @param message mint_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs4.Imint_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified mint_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs4.mint_arguments.verify|verify} messages.
                 * @param message mint_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs4.Imint_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a mint_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns mint_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs4.mint_arguments;

                /**
                 * Decodes a mint_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns mint_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs4.mint_arguments;

                /**
                 * Verifies a mint_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a mint_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns mint_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs4.mint_arguments;

                /**
                 * Creates a plain object from a mint_arguments message. Also converts values to other types if specified.
                 * @param message mint_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs4.mint_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this mint_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a mint_result. */
            interface Imint_result {
            }

            /** Represents a mint_result. */
            class mint_result implements Imint_result {

                /**
                 * Constructs a new mint_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs4.Imint_result);

                /**
                 * Creates a new mint_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns mint_result instance
                 */
                public static create(properties?: koinos.standards.kcs4.Imint_result): koinos.standards.kcs4.mint_result;

                /**
                 * Encodes the specified mint_result message. Does not implicitly {@link koinos.standards.kcs4.mint_result.verify|verify} messages.
                 * @param message mint_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs4.Imint_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified mint_result message, length delimited. Does not implicitly {@link koinos.standards.kcs4.mint_result.verify|verify} messages.
                 * @param message mint_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs4.Imint_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a mint_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns mint_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs4.mint_result;

                /**
                 * Decodes a mint_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns mint_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs4.mint_result;

                /**
                 * Verifies a mint_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a mint_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns mint_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs4.mint_result;

                /**
                 * Creates a plain object from a mint_result message. Also converts values to other types if specified.
                 * @param message mint_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs4.mint_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this mint_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a burn_arguments. */
            interface Iburn_arguments {

                /** burn_arguments from */
                from?: (Uint8Array|null);

                /** burn_arguments value */
                value?: (number|Long|null);

                /** burn_arguments memo */
                memo?: (string|null);
            }

            /** Represents a burn_arguments. */
            class burn_arguments implements Iburn_arguments {

                /**
                 * Constructs a new burn_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs4.Iburn_arguments);

                /** burn_arguments from. */
                public from: Uint8Array;

                /** burn_arguments value. */
                public value: (number|Long);

                /** burn_arguments memo. */
                public memo?: (string|null);

                /** burn_arguments _memo. */
                public _memo?: "memo";

                /**
                 * Creates a new burn_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns burn_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs4.Iburn_arguments): koinos.standards.kcs4.burn_arguments;

                /**
                 * Encodes the specified burn_arguments message. Does not implicitly {@link koinos.standards.kcs4.burn_arguments.verify|verify} messages.
                 * @param message burn_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs4.Iburn_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified burn_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs4.burn_arguments.verify|verify} messages.
                 * @param message burn_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs4.Iburn_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a burn_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns burn_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs4.burn_arguments;

                /**
                 * Decodes a burn_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns burn_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs4.burn_arguments;

                /**
                 * Verifies a burn_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a burn_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns burn_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs4.burn_arguments;

                /**
                 * Creates a plain object from a burn_arguments message. Also converts values to other types if specified.
                 * @param message burn_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs4.burn_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this burn_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a burn_result. */
            interface Iburn_result {
            }

            /** Represents a burn_result. */
            class burn_result implements Iburn_result {

                /**
                 * Constructs a new burn_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs4.Iburn_result);

                /**
                 * Creates a new burn_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns burn_result instance
                 */
                public static create(properties?: koinos.standards.kcs4.Iburn_result): koinos.standards.kcs4.burn_result;

                /**
                 * Encodes the specified burn_result message. Does not implicitly {@link koinos.standards.kcs4.burn_result.verify|verify} messages.
                 * @param message burn_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs4.Iburn_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified burn_result message, length delimited. Does not implicitly {@link koinos.standards.kcs4.burn_result.verify|verify} messages.
                 * @param message burn_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs4.Iburn_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a burn_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns burn_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs4.burn_result;

                /**
                 * Decodes a burn_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns burn_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs4.burn_result;

                /**
                 * Verifies a burn_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a burn_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns burn_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs4.burn_result;

                /**
                 * Creates a plain object from a burn_result message. Also converts values to other types if specified.
                 * @param message burn_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs4.burn_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this burn_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an approve_arguments. */
            interface Iapprove_arguments {

                /** approve_arguments owner */
                owner?: (Uint8Array|null);

                /** approve_arguments spender */
                spender?: (Uint8Array|null);

                /** approve_arguments value */
                value?: (number|Long|null);

                /** approve_arguments memo */
                memo?: (string|null);
            }

            /** Represents an approve_arguments. */
            class approve_arguments implements Iapprove_arguments {

                /**
                 * Constructs a new approve_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs4.Iapprove_arguments);

                /** approve_arguments owner. */
                public owner: Uint8Array;

                /** approve_arguments spender. */
                public spender: Uint8Array;

                /** approve_arguments value. */
                public value: (number|Long);

                /** approve_arguments memo. */
                public memo?: (string|null);

                /** approve_arguments _memo. */
                public _memo?: "memo";

                /**
                 * Creates a new approve_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns approve_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs4.Iapprove_arguments): koinos.standards.kcs4.approve_arguments;

                /**
                 * Encodes the specified approve_arguments message. Does not implicitly {@link koinos.standards.kcs4.approve_arguments.verify|verify} messages.
                 * @param message approve_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs4.Iapprove_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified approve_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs4.approve_arguments.verify|verify} messages.
                 * @param message approve_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs4.Iapprove_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an approve_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns approve_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs4.approve_arguments;

                /**
                 * Decodes an approve_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns approve_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs4.approve_arguments;

                /**
                 * Verifies an approve_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an approve_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns approve_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs4.approve_arguments;

                /**
                 * Creates a plain object from an approve_arguments message. Also converts values to other types if specified.
                 * @param message approve_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs4.approve_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this approve_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an approve_result. */
            interface Iapprove_result {
            }

            /** Represents an approve_result. */
            class approve_result implements Iapprove_result {

                /**
                 * Constructs a new approve_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs4.Iapprove_result);

                /**
                 * Creates a new approve_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns approve_result instance
                 */
                public static create(properties?: koinos.standards.kcs4.Iapprove_result): koinos.standards.kcs4.approve_result;

                /**
                 * Encodes the specified approve_result message. Does not implicitly {@link koinos.standards.kcs4.approve_result.verify|verify} messages.
                 * @param message approve_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs4.Iapprove_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified approve_result message, length delimited. Does not implicitly {@link koinos.standards.kcs4.approve_result.verify|verify} messages.
                 * @param message approve_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs4.Iapprove_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an approve_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns approve_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs4.approve_result;

                /**
                 * Decodes an approve_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns approve_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs4.approve_result;

                /**
                 * Verifies an approve_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an approve_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns approve_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs4.approve_result;

                /**
                 * Creates a plain object from an approve_result message. Also converts values to other types if specified.
                 * @param message approve_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs4.approve_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this approve_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a burn_event. */
            interface Iburn_event {

                /** burn_event from */
                from?: (Uint8Array|null);

                /** burn_event value */
                value?: (number|Long|null);

                /** burn_event memo */
                memo?: (string|null);
            }

            /** Represents a burn_event. */
            class burn_event implements Iburn_event {

                /**
                 * Constructs a new burn_event.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs4.Iburn_event);

                /** burn_event from. */
                public from: Uint8Array;

                /** burn_event value. */
                public value: (number|Long);

                /** burn_event memo. */
                public memo?: (string|null);

                /** burn_event _memo. */
                public _memo?: "memo";

                /**
                 * Creates a new burn_event instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns burn_event instance
                 */
                public static create(properties?: koinos.standards.kcs4.Iburn_event): koinos.standards.kcs4.burn_event;

                /**
                 * Encodes the specified burn_event message. Does not implicitly {@link koinos.standards.kcs4.burn_event.verify|verify} messages.
                 * @param message burn_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs4.Iburn_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified burn_event message, length delimited. Does not implicitly {@link koinos.standards.kcs4.burn_event.verify|verify} messages.
                 * @param message burn_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs4.Iburn_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a burn_event message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns burn_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs4.burn_event;

                /**
                 * Decodes a burn_event message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns burn_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs4.burn_event;

                /**
                 * Verifies a burn_event message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a burn_event message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns burn_event
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs4.burn_event;

                /**
                 * Creates a plain object from a burn_event message. Also converts values to other types if specified.
                 * @param message burn_event
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs4.burn_event, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this burn_event to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a mint_event. */
            interface Imint_event {

                /** mint_event to */
                to?: (Uint8Array|null);

                /** mint_event value */
                value?: (number|Long|null);

                /** mint_event memo */
                memo?: (string|null);
            }

            /** Represents a mint_event. */
            class mint_event implements Imint_event {

                /**
                 * Constructs a new mint_event.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs4.Imint_event);

                /** mint_event to. */
                public to: Uint8Array;

                /** mint_event value. */
                public value: (number|Long);

                /** mint_event memo. */
                public memo?: (string|null);

                /** mint_event _memo. */
                public _memo?: "memo";

                /**
                 * Creates a new mint_event instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns mint_event instance
                 */
                public static create(properties?: koinos.standards.kcs4.Imint_event): koinos.standards.kcs4.mint_event;

                /**
                 * Encodes the specified mint_event message. Does not implicitly {@link koinos.standards.kcs4.mint_event.verify|verify} messages.
                 * @param message mint_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs4.Imint_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified mint_event message, length delimited. Does not implicitly {@link koinos.standards.kcs4.mint_event.verify|verify} messages.
                 * @param message mint_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs4.Imint_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a mint_event message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns mint_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs4.mint_event;

                /**
                 * Decodes a mint_event message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns mint_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs4.mint_event;

                /**
                 * Verifies a mint_event message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a mint_event message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns mint_event
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs4.mint_event;

                /**
                 * Creates a plain object from a mint_event message. Also converts values to other types if specified.
                 * @param message mint_event
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs4.mint_event, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this mint_event to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a transfer_event. */
            interface Itransfer_event {

                /** transfer_event from */
                from?: (Uint8Array|null);

                /** transfer_event to */
                to?: (Uint8Array|null);

                /** transfer_event value */
                value?: (number|Long|null);

                /** transfer_event memo */
                memo?: (string|null);
            }

            /** Represents a transfer_event. */
            class transfer_event implements Itransfer_event {

                /**
                 * Constructs a new transfer_event.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs4.Itransfer_event);

                /** transfer_event from. */
                public from: Uint8Array;

                /** transfer_event to. */
                public to: Uint8Array;

                /** transfer_event value. */
                public value: (number|Long);

                /** transfer_event memo. */
                public memo?: (string|null);

                /** transfer_event _memo. */
                public _memo?: "memo";

                /**
                 * Creates a new transfer_event instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns transfer_event instance
                 */
                public static create(properties?: koinos.standards.kcs4.Itransfer_event): koinos.standards.kcs4.transfer_event;

                /**
                 * Encodes the specified transfer_event message. Does not implicitly {@link koinos.standards.kcs4.transfer_event.verify|verify} messages.
                 * @param message transfer_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs4.Itransfer_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified transfer_event message, length delimited. Does not implicitly {@link koinos.standards.kcs4.transfer_event.verify|verify} messages.
                 * @param message transfer_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs4.Itransfer_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a transfer_event message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns transfer_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs4.transfer_event;

                /**
                 * Decodes a transfer_event message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns transfer_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs4.transfer_event;

                /**
                 * Verifies a transfer_event message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a transfer_event message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns transfer_event
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs4.transfer_event;

                /**
                 * Creates a plain object from a transfer_event message. Also converts values to other types if specified.
                 * @param message transfer_event
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs4.transfer_event, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this transfer_event to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an approve_event. */
            interface Iapprove_event {

                /** approve_event owner */
                owner?: (Uint8Array|null);

                /** approve_event spender */
                spender?: (Uint8Array|null);

                /** approve_event value */
                value?: (number|Long|null);

                /** approve_event memo */
                memo?: (string|null);
            }

            /** Represents an approve_event. */
            class approve_event implements Iapprove_event {

                /**
                 * Constructs a new approve_event.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs4.Iapprove_event);

                /** approve_event owner. */
                public owner: Uint8Array;

                /** approve_event spender. */
                public spender: Uint8Array;

                /** approve_event value. */
                public value: (number|Long);

                /** approve_event memo. */
                public memo?: (string|null);

                /** approve_event _memo. */
                public _memo?: "memo";

                /**
                 * Creates a new approve_event instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns approve_event instance
                 */
                public static create(properties?: koinos.standards.kcs4.Iapprove_event): koinos.standards.kcs4.approve_event;

                /**
                 * Encodes the specified approve_event message. Does not implicitly {@link koinos.standards.kcs4.approve_event.verify|verify} messages.
                 * @param message approve_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs4.Iapprove_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified approve_event message, length delimited. Does not implicitly {@link koinos.standards.kcs4.approve_event.verify|verify} messages.
                 * @param message approve_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs4.Iapprove_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an approve_event message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns approve_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs4.approve_event;

                /**
                 * Decodes an approve_event message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns approve_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs4.approve_event;

                /**
                 * Verifies an approve_event message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an approve_event message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns approve_event
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs4.approve_event;

                /**
                 * Creates a plain object from an approve_event message. Also converts values to other types if specified.
                 * @param message approve_event
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs4.approve_event, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this approve_event to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Namespace kcs2. */
        namespace kcs2 {

            /** Properties of a royalty. */
            interface Iroyalty {

                /** royalty percentage */
                percentage?: (number|Long|null);

                /** royalty address */
                address?: (Uint8Array|null);
            }

            /** Represents a royalty. */
            class royalty implements Iroyalty {

                /**
                 * Constructs a new royalty.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs2.Iroyalty);

                /** royalty percentage. */
                public percentage: (number|Long);

                /** royalty address. */
                public address: Uint8Array;

                /**
                 * Creates a new royalty instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns royalty instance
                 */
                public static create(properties?: koinos.standards.kcs2.Iroyalty): koinos.standards.kcs2.royalty;

                /**
                 * Encodes the specified royalty message. Does not implicitly {@link koinos.standards.kcs2.royalty.verify|verify} messages.
                 * @param message royalty message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs2.Iroyalty, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified royalty message, length delimited. Does not implicitly {@link koinos.standards.kcs2.royalty.verify|verify} messages.
                 * @param message royalty message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs2.Iroyalty, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a royalty message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns royalty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs2.royalty;

                /**
                 * Decodes a royalty message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns royalty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs2.royalty;

                /**
                 * Verifies a royalty message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a royalty message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns royalty
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs2.royalty;

                /**
                 * Creates a plain object from a royalty message. Also converts values to other types if specified.
                 * @param message royalty
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs2.royalty, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this royalty to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a name_arguments. */
            interface Iname_arguments {
            }

            /** Represents a name_arguments. */
            class name_arguments implements Iname_arguments {

                /**
                 * Constructs a new name_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs2.Iname_arguments);

                /**
                 * Creates a new name_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns name_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs2.Iname_arguments): koinos.standards.kcs2.name_arguments;

                /**
                 * Encodes the specified name_arguments message. Does not implicitly {@link koinos.standards.kcs2.name_arguments.verify|verify} messages.
                 * @param message name_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs2.Iname_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified name_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs2.name_arguments.verify|verify} messages.
                 * @param message name_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs2.Iname_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a name_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns name_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs2.name_arguments;

                /**
                 * Decodes a name_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns name_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs2.name_arguments;

                /**
                 * Verifies a name_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a name_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns name_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs2.name_arguments;

                /**
                 * Creates a plain object from a name_arguments message. Also converts values to other types if specified.
                 * @param message name_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs2.name_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this name_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a name_result. */
            interface Iname_result {

                /** name_result value */
                value?: (string|null);
            }

            /** Represents a name_result. */
            class name_result implements Iname_result {

                /**
                 * Constructs a new name_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs2.Iname_result);

                /** name_result value. */
                public value: string;

                /**
                 * Creates a new name_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns name_result instance
                 */
                public static create(properties?: koinos.standards.kcs2.Iname_result): koinos.standards.kcs2.name_result;

                /**
                 * Encodes the specified name_result message. Does not implicitly {@link koinos.standards.kcs2.name_result.verify|verify} messages.
                 * @param message name_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs2.Iname_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified name_result message, length delimited. Does not implicitly {@link koinos.standards.kcs2.name_result.verify|verify} messages.
                 * @param message name_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs2.Iname_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a name_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns name_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs2.name_result;

                /**
                 * Decodes a name_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns name_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs2.name_result;

                /**
                 * Verifies a name_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a name_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns name_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs2.name_result;

                /**
                 * Creates a plain object from a name_result message. Also converts values to other types if specified.
                 * @param message name_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs2.name_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this name_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a symbol_arguments. */
            interface Isymbol_arguments {
            }

            /** Represents a symbol_arguments. */
            class symbol_arguments implements Isymbol_arguments {

                /**
                 * Constructs a new symbol_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs2.Isymbol_arguments);

                /**
                 * Creates a new symbol_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns symbol_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs2.Isymbol_arguments): koinos.standards.kcs2.symbol_arguments;

                /**
                 * Encodes the specified symbol_arguments message. Does not implicitly {@link koinos.standards.kcs2.symbol_arguments.verify|verify} messages.
                 * @param message symbol_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs2.Isymbol_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified symbol_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs2.symbol_arguments.verify|verify} messages.
                 * @param message symbol_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs2.Isymbol_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a symbol_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns symbol_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs2.symbol_arguments;

                /**
                 * Decodes a symbol_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns symbol_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs2.symbol_arguments;

                /**
                 * Verifies a symbol_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a symbol_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns symbol_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs2.symbol_arguments;

                /**
                 * Creates a plain object from a symbol_arguments message. Also converts values to other types if specified.
                 * @param message symbol_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs2.symbol_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this symbol_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a symbol_result. */
            interface Isymbol_result {

                /** symbol_result value */
                value?: (string|null);
            }

            /** Represents a symbol_result. */
            class symbol_result implements Isymbol_result {

                /**
                 * Constructs a new symbol_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs2.Isymbol_result);

                /** symbol_result value. */
                public value: string;

                /**
                 * Creates a new symbol_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns symbol_result instance
                 */
                public static create(properties?: koinos.standards.kcs2.Isymbol_result): koinos.standards.kcs2.symbol_result;

                /**
                 * Encodes the specified symbol_result message. Does not implicitly {@link koinos.standards.kcs2.symbol_result.verify|verify} messages.
                 * @param message symbol_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs2.Isymbol_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified symbol_result message, length delimited. Does not implicitly {@link koinos.standards.kcs2.symbol_result.verify|verify} messages.
                 * @param message symbol_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs2.Isymbol_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a symbol_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns symbol_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs2.symbol_result;

                /**
                 * Decodes a symbol_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns symbol_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs2.symbol_result;

                /**
                 * Verifies a symbol_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a symbol_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns symbol_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs2.symbol_result;

                /**
                 * Creates a plain object from a symbol_result message. Also converts values to other types if specified.
                 * @param message symbol_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs2.symbol_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this symbol_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an uri_arguments. */
            interface Iuri_arguments {
            }

            /** Represents an uri_arguments. */
            class uri_arguments implements Iuri_arguments {

                /**
                 * Constructs a new uri_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs2.Iuri_arguments);

                /**
                 * Creates a new uri_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns uri_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs2.Iuri_arguments): koinos.standards.kcs2.uri_arguments;

                /**
                 * Encodes the specified uri_arguments message. Does not implicitly {@link koinos.standards.kcs2.uri_arguments.verify|verify} messages.
                 * @param message uri_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs2.Iuri_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified uri_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs2.uri_arguments.verify|verify} messages.
                 * @param message uri_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs2.Iuri_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an uri_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns uri_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs2.uri_arguments;

                /**
                 * Decodes an uri_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns uri_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs2.uri_arguments;

                /**
                 * Verifies an uri_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an uri_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns uri_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs2.uri_arguments;

                /**
                 * Creates a plain object from an uri_arguments message. Also converts values to other types if specified.
                 * @param message uri_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs2.uri_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this uri_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an uri_result. */
            interface Iuri_result {

                /** uri_result value */
                value?: (string|null);
            }

            /** Represents an uri_result. */
            class uri_result implements Iuri_result {

                /**
                 * Constructs a new uri_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs2.Iuri_result);

                /** uri_result value. */
                public value: string;

                /**
                 * Creates a new uri_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns uri_result instance
                 */
                public static create(properties?: koinos.standards.kcs2.Iuri_result): koinos.standards.kcs2.uri_result;

                /**
                 * Encodes the specified uri_result message. Does not implicitly {@link koinos.standards.kcs2.uri_result.verify|verify} messages.
                 * @param message uri_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs2.Iuri_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified uri_result message, length delimited. Does not implicitly {@link koinos.standards.kcs2.uri_result.verify|verify} messages.
                 * @param message uri_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs2.Iuri_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an uri_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns uri_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs2.uri_result;

                /**
                 * Decodes an uri_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns uri_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs2.uri_result;

                /**
                 * Verifies an uri_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an uri_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns uri_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs2.uri_result;

                /**
                 * Creates a plain object from an uri_result message. Also converts values to other types if specified.
                 * @param message uri_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs2.uri_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this uri_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an owner_arguments. */
            interface Iowner_arguments {
            }

            /** Represents an owner_arguments. */
            class owner_arguments implements Iowner_arguments {

                /**
                 * Constructs a new owner_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs2.Iowner_arguments);

                /**
                 * Creates a new owner_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns owner_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs2.Iowner_arguments): koinos.standards.kcs2.owner_arguments;

                /**
                 * Encodes the specified owner_arguments message. Does not implicitly {@link koinos.standards.kcs2.owner_arguments.verify|verify} messages.
                 * @param message owner_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs2.Iowner_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified owner_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs2.owner_arguments.verify|verify} messages.
                 * @param message owner_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs2.Iowner_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an owner_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns owner_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs2.owner_arguments;

                /**
                 * Decodes an owner_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns owner_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs2.owner_arguments;

                /**
                 * Verifies an owner_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an owner_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns owner_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs2.owner_arguments;

                /**
                 * Creates a plain object from an owner_arguments message. Also converts values to other types if specified.
                 * @param message owner_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs2.owner_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this owner_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an owner_result. */
            interface Iowner_result {

                /** owner_result value */
                value?: (Uint8Array|null);
            }

            /** Represents an owner_result. */
            class owner_result implements Iowner_result {

                /**
                 * Constructs a new owner_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs2.Iowner_result);

                /** owner_result value. */
                public value: Uint8Array;

                /**
                 * Creates a new owner_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns owner_result instance
                 */
                public static create(properties?: koinos.standards.kcs2.Iowner_result): koinos.standards.kcs2.owner_result;

                /**
                 * Encodes the specified owner_result message. Does not implicitly {@link koinos.standards.kcs2.owner_result.verify|verify} messages.
                 * @param message owner_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs2.Iowner_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified owner_result message, length delimited. Does not implicitly {@link koinos.standards.kcs2.owner_result.verify|verify} messages.
                 * @param message owner_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs2.Iowner_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an owner_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns owner_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs2.owner_result;

                /**
                 * Decodes an owner_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns owner_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs2.owner_result;

                /**
                 * Verifies an owner_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an owner_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns owner_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs2.owner_result;

                /**
                 * Creates a plain object from an owner_result message. Also converts values to other types if specified.
                 * @param message owner_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs2.owner_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this owner_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a total_supply_arguments. */
            interface Itotal_supply_arguments {
            }

            /** Represents a total_supply_arguments. */
            class total_supply_arguments implements Itotal_supply_arguments {

                /**
                 * Constructs a new total_supply_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs2.Itotal_supply_arguments);

                /**
                 * Creates a new total_supply_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns total_supply_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs2.Itotal_supply_arguments): koinos.standards.kcs2.total_supply_arguments;

                /**
                 * Encodes the specified total_supply_arguments message. Does not implicitly {@link koinos.standards.kcs2.total_supply_arguments.verify|verify} messages.
                 * @param message total_supply_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs2.Itotal_supply_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified total_supply_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs2.total_supply_arguments.verify|verify} messages.
                 * @param message total_supply_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs2.Itotal_supply_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a total_supply_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns total_supply_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs2.total_supply_arguments;

                /**
                 * Decodes a total_supply_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns total_supply_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs2.total_supply_arguments;

                /**
                 * Verifies a total_supply_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a total_supply_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns total_supply_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs2.total_supply_arguments;

                /**
                 * Creates a plain object from a total_supply_arguments message. Also converts values to other types if specified.
                 * @param message total_supply_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs2.total_supply_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this total_supply_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a total_supply_result. */
            interface Itotal_supply_result {

                /** total_supply_result value */
                value?: (number|Long|null);
            }

            /** Represents a total_supply_result. */
            class total_supply_result implements Itotal_supply_result {

                /**
                 * Constructs a new total_supply_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs2.Itotal_supply_result);

                /** total_supply_result value. */
                public value: (number|Long);

                /**
                 * Creates a new total_supply_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns total_supply_result instance
                 */
                public static create(properties?: koinos.standards.kcs2.Itotal_supply_result): koinos.standards.kcs2.total_supply_result;

                /**
                 * Encodes the specified total_supply_result message. Does not implicitly {@link koinos.standards.kcs2.total_supply_result.verify|verify} messages.
                 * @param message total_supply_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs2.Itotal_supply_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified total_supply_result message, length delimited. Does not implicitly {@link koinos.standards.kcs2.total_supply_result.verify|verify} messages.
                 * @param message total_supply_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs2.Itotal_supply_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a total_supply_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns total_supply_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs2.total_supply_result;

                /**
                 * Decodes a total_supply_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns total_supply_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs2.total_supply_result;

                /**
                 * Verifies a total_supply_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a total_supply_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns total_supply_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs2.total_supply_result;

                /**
                 * Creates a plain object from a total_supply_result message. Also converts values to other types if specified.
                 * @param message total_supply_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs2.total_supply_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this total_supply_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a royalties_arguments. */
            interface Iroyalties_arguments {
            }

            /** Represents a royalties_arguments. */
            class royalties_arguments implements Iroyalties_arguments {

                /**
                 * Constructs a new royalties_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs2.Iroyalties_arguments);

                /**
                 * Creates a new royalties_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns royalties_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs2.Iroyalties_arguments): koinos.standards.kcs2.royalties_arguments;

                /**
                 * Encodes the specified royalties_arguments message. Does not implicitly {@link koinos.standards.kcs2.royalties_arguments.verify|verify} messages.
                 * @param message royalties_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs2.Iroyalties_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified royalties_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs2.royalties_arguments.verify|verify} messages.
                 * @param message royalties_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs2.Iroyalties_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a royalties_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns royalties_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs2.royalties_arguments;

                /**
                 * Decodes a royalties_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns royalties_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs2.royalties_arguments;

                /**
                 * Verifies a royalties_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a royalties_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns royalties_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs2.royalties_arguments;

                /**
                 * Creates a plain object from a royalties_arguments message. Also converts values to other types if specified.
                 * @param message royalties_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs2.royalties_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this royalties_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a royalties_result. */
            interface Iroyalties_result {

                /** royalties_result value */
                value?: (koinos.standards.kcs2.Iroyalty[]|null);
            }

            /** Represents a royalties_result. */
            class royalties_result implements Iroyalties_result {

                /**
                 * Constructs a new royalties_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs2.Iroyalties_result);

                /** royalties_result value. */
                public value: koinos.standards.kcs2.Iroyalty[];

                /**
                 * Creates a new royalties_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns royalties_result instance
                 */
                public static create(properties?: koinos.standards.kcs2.Iroyalties_result): koinos.standards.kcs2.royalties_result;

                /**
                 * Encodes the specified royalties_result message. Does not implicitly {@link koinos.standards.kcs2.royalties_result.verify|verify} messages.
                 * @param message royalties_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs2.Iroyalties_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified royalties_result message, length delimited. Does not implicitly {@link koinos.standards.kcs2.royalties_result.verify|verify} messages.
                 * @param message royalties_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs2.Iroyalties_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a royalties_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns royalties_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs2.royalties_result;

                /**
                 * Decodes a royalties_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns royalties_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs2.royalties_result;

                /**
                 * Verifies a royalties_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a royalties_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns royalties_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs2.royalties_result;

                /**
                 * Creates a plain object from a royalties_result message. Also converts values to other types if specified.
                 * @param message royalties_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs2.royalties_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this royalties_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a balance_of_arguments. */
            interface Ibalance_of_arguments {

                /** balance_of_arguments owner */
                owner?: (Uint8Array|null);
            }

            /** Represents a balance_of_arguments. */
            class balance_of_arguments implements Ibalance_of_arguments {

                /**
                 * Constructs a new balance_of_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs2.Ibalance_of_arguments);

                /** balance_of_arguments owner. */
                public owner: Uint8Array;

                /**
                 * Creates a new balance_of_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns balance_of_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs2.Ibalance_of_arguments): koinos.standards.kcs2.balance_of_arguments;

                /**
                 * Encodes the specified balance_of_arguments message. Does not implicitly {@link koinos.standards.kcs2.balance_of_arguments.verify|verify} messages.
                 * @param message balance_of_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs2.Ibalance_of_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified balance_of_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs2.balance_of_arguments.verify|verify} messages.
                 * @param message balance_of_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs2.Ibalance_of_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a balance_of_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns balance_of_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs2.balance_of_arguments;

                /**
                 * Decodes a balance_of_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns balance_of_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs2.balance_of_arguments;

                /**
                 * Verifies a balance_of_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a balance_of_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns balance_of_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs2.balance_of_arguments;

                /**
                 * Creates a plain object from a balance_of_arguments message. Also converts values to other types if specified.
                 * @param message balance_of_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs2.balance_of_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this balance_of_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a balance_of_result. */
            interface Ibalance_of_result {

                /** balance_of_result value */
                value?: (number|Long|null);
            }

            /** Represents a balance_of_result. */
            class balance_of_result implements Ibalance_of_result {

                /**
                 * Constructs a new balance_of_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs2.Ibalance_of_result);

                /** balance_of_result value. */
                public value: (number|Long);

                /**
                 * Creates a new balance_of_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns balance_of_result instance
                 */
                public static create(properties?: koinos.standards.kcs2.Ibalance_of_result): koinos.standards.kcs2.balance_of_result;

                /**
                 * Encodes the specified balance_of_result message. Does not implicitly {@link koinos.standards.kcs2.balance_of_result.verify|verify} messages.
                 * @param message balance_of_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs2.Ibalance_of_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified balance_of_result message, length delimited. Does not implicitly {@link koinos.standards.kcs2.balance_of_result.verify|verify} messages.
                 * @param message balance_of_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs2.Ibalance_of_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a balance_of_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns balance_of_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs2.balance_of_result;

                /**
                 * Decodes a balance_of_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns balance_of_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs2.balance_of_result;

                /**
                 * Verifies a balance_of_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a balance_of_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns balance_of_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs2.balance_of_result;

                /**
                 * Creates a plain object from a balance_of_result message. Also converts values to other types if specified.
                 * @param message balance_of_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs2.balance_of_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this balance_of_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an owner_of_arguments. */
            interface Iowner_of_arguments {

                /** owner_of_arguments token_id */
                token_id?: (Uint8Array|null);
            }

            /** Represents an owner_of_arguments. */
            class owner_of_arguments implements Iowner_of_arguments {

                /**
                 * Constructs a new owner_of_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs2.Iowner_of_arguments);

                /** owner_of_arguments token_id. */
                public token_id: Uint8Array;

                /**
                 * Creates a new owner_of_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns owner_of_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs2.Iowner_of_arguments): koinos.standards.kcs2.owner_of_arguments;

                /**
                 * Encodes the specified owner_of_arguments message. Does not implicitly {@link koinos.standards.kcs2.owner_of_arguments.verify|verify} messages.
                 * @param message owner_of_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs2.Iowner_of_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified owner_of_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs2.owner_of_arguments.verify|verify} messages.
                 * @param message owner_of_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs2.Iowner_of_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an owner_of_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns owner_of_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs2.owner_of_arguments;

                /**
                 * Decodes an owner_of_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns owner_of_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs2.owner_of_arguments;

                /**
                 * Verifies an owner_of_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an owner_of_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns owner_of_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs2.owner_of_arguments;

                /**
                 * Creates a plain object from an owner_of_arguments message. Also converts values to other types if specified.
                 * @param message owner_of_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs2.owner_of_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this owner_of_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an owner_of_result. */
            interface Iowner_of_result {

                /** owner_of_result value */
                value?: (Uint8Array|null);
            }

            /** Represents an owner_of_result. */
            class owner_of_result implements Iowner_of_result {

                /**
                 * Constructs a new owner_of_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs2.Iowner_of_result);

                /** owner_of_result value. */
                public value: Uint8Array;

                /**
                 * Creates a new owner_of_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns owner_of_result instance
                 */
                public static create(properties?: koinos.standards.kcs2.Iowner_of_result): koinos.standards.kcs2.owner_of_result;

                /**
                 * Encodes the specified owner_of_result message. Does not implicitly {@link koinos.standards.kcs2.owner_of_result.verify|verify} messages.
                 * @param message owner_of_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs2.Iowner_of_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified owner_of_result message, length delimited. Does not implicitly {@link koinos.standards.kcs2.owner_of_result.verify|verify} messages.
                 * @param message owner_of_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs2.Iowner_of_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an owner_of_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns owner_of_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs2.owner_of_result;

                /**
                 * Decodes an owner_of_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns owner_of_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs2.owner_of_result;

                /**
                 * Verifies an owner_of_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an owner_of_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns owner_of_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs2.owner_of_result;

                /**
                 * Creates a plain object from an owner_of_result message. Also converts values to other types if specified.
                 * @param message owner_of_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs2.owner_of_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this owner_of_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_approved_arguments. */
            interface Iget_approved_arguments {

                /** get_approved_arguments token_id */
                token_id?: (Uint8Array|null);
            }

            /** Represents a get_approved_arguments. */
            class get_approved_arguments implements Iget_approved_arguments {

                /**
                 * Constructs a new get_approved_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs2.Iget_approved_arguments);

                /** get_approved_arguments token_id. */
                public token_id: Uint8Array;

                /**
                 * Creates a new get_approved_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_approved_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs2.Iget_approved_arguments): koinos.standards.kcs2.get_approved_arguments;

                /**
                 * Encodes the specified get_approved_arguments message. Does not implicitly {@link koinos.standards.kcs2.get_approved_arguments.verify|verify} messages.
                 * @param message get_approved_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs2.Iget_approved_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_approved_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs2.get_approved_arguments.verify|verify} messages.
                 * @param message get_approved_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs2.Iget_approved_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_approved_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_approved_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs2.get_approved_arguments;

                /**
                 * Decodes a get_approved_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_approved_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs2.get_approved_arguments;

                /**
                 * Verifies a get_approved_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_approved_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_approved_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs2.get_approved_arguments;

                /**
                 * Creates a plain object from a get_approved_arguments message. Also converts values to other types if specified.
                 * @param message get_approved_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs2.get_approved_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_approved_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_approved_result. */
            interface Iget_approved_result {

                /** get_approved_result value */
                value?: (Uint8Array|null);
            }

            /** Represents a get_approved_result. */
            class get_approved_result implements Iget_approved_result {

                /**
                 * Constructs a new get_approved_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs2.Iget_approved_result);

                /** get_approved_result value. */
                public value: Uint8Array;

                /**
                 * Creates a new get_approved_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_approved_result instance
                 */
                public static create(properties?: koinos.standards.kcs2.Iget_approved_result): koinos.standards.kcs2.get_approved_result;

                /**
                 * Encodes the specified get_approved_result message. Does not implicitly {@link koinos.standards.kcs2.get_approved_result.verify|verify} messages.
                 * @param message get_approved_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs2.Iget_approved_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_approved_result message, length delimited. Does not implicitly {@link koinos.standards.kcs2.get_approved_result.verify|verify} messages.
                 * @param message get_approved_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs2.Iget_approved_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_approved_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_approved_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs2.get_approved_result;

                /**
                 * Decodes a get_approved_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_approved_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs2.get_approved_result;

                /**
                 * Verifies a get_approved_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_approved_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_approved_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs2.get_approved_result;

                /**
                 * Creates a plain object from a get_approved_result message. Also converts values to other types if specified.
                 * @param message get_approved_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs2.get_approved_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_approved_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an is_approved_for_all_arguments. */
            interface Iis_approved_for_all_arguments {

                /** is_approved_for_all_arguments owner */
                owner?: (Uint8Array|null);

                /** is_approved_for_all_arguments operator */
                operator?: (Uint8Array|null);
            }

            /** Represents an is_approved_for_all_arguments. */
            class is_approved_for_all_arguments implements Iis_approved_for_all_arguments {

                /**
                 * Constructs a new is_approved_for_all_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs2.Iis_approved_for_all_arguments);

                /** is_approved_for_all_arguments owner. */
                public owner: Uint8Array;

                /** is_approved_for_all_arguments operator. */
                public operator: Uint8Array;

                /**
                 * Creates a new is_approved_for_all_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns is_approved_for_all_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs2.Iis_approved_for_all_arguments): koinos.standards.kcs2.is_approved_for_all_arguments;

                /**
                 * Encodes the specified is_approved_for_all_arguments message. Does not implicitly {@link koinos.standards.kcs2.is_approved_for_all_arguments.verify|verify} messages.
                 * @param message is_approved_for_all_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs2.Iis_approved_for_all_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified is_approved_for_all_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs2.is_approved_for_all_arguments.verify|verify} messages.
                 * @param message is_approved_for_all_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs2.Iis_approved_for_all_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an is_approved_for_all_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns is_approved_for_all_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs2.is_approved_for_all_arguments;

                /**
                 * Decodes an is_approved_for_all_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns is_approved_for_all_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs2.is_approved_for_all_arguments;

                /**
                 * Verifies an is_approved_for_all_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an is_approved_for_all_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns is_approved_for_all_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs2.is_approved_for_all_arguments;

                /**
                 * Creates a plain object from an is_approved_for_all_arguments message. Also converts values to other types if specified.
                 * @param message is_approved_for_all_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs2.is_approved_for_all_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this is_approved_for_all_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an is_approved_for_all_result. */
            interface Iis_approved_for_all_result {

                /** is_approved_for_all_result value */
                value?: (boolean|null);
            }

            /** Represents an is_approved_for_all_result. */
            class is_approved_for_all_result implements Iis_approved_for_all_result {

                /**
                 * Constructs a new is_approved_for_all_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs2.Iis_approved_for_all_result);

                /** is_approved_for_all_result value. */
                public value: boolean;

                /**
                 * Creates a new is_approved_for_all_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns is_approved_for_all_result instance
                 */
                public static create(properties?: koinos.standards.kcs2.Iis_approved_for_all_result): koinos.standards.kcs2.is_approved_for_all_result;

                /**
                 * Encodes the specified is_approved_for_all_result message. Does not implicitly {@link koinos.standards.kcs2.is_approved_for_all_result.verify|verify} messages.
                 * @param message is_approved_for_all_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs2.Iis_approved_for_all_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified is_approved_for_all_result message, length delimited. Does not implicitly {@link koinos.standards.kcs2.is_approved_for_all_result.verify|verify} messages.
                 * @param message is_approved_for_all_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs2.Iis_approved_for_all_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an is_approved_for_all_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns is_approved_for_all_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs2.is_approved_for_all_result;

                /**
                 * Decodes an is_approved_for_all_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns is_approved_for_all_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs2.is_approved_for_all_result;

                /**
                 * Verifies an is_approved_for_all_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an is_approved_for_all_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns is_approved_for_all_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs2.is_approved_for_all_result;

                /**
                 * Creates a plain object from an is_approved_for_all_result message. Also converts values to other types if specified.
                 * @param message is_approved_for_all_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs2.is_approved_for_all_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this is_approved_for_all_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a transfer_ownership_arguments. */
            interface Itransfer_ownership_arguments {

                /** transfer_ownership_arguments value */
                value?: (Uint8Array|null);
            }

            /** Represents a transfer_ownership_arguments. */
            class transfer_ownership_arguments implements Itransfer_ownership_arguments {

                /**
                 * Constructs a new transfer_ownership_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs2.Itransfer_ownership_arguments);

                /** transfer_ownership_arguments value. */
                public value: Uint8Array;

                /**
                 * Creates a new transfer_ownership_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns transfer_ownership_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs2.Itransfer_ownership_arguments): koinos.standards.kcs2.transfer_ownership_arguments;

                /**
                 * Encodes the specified transfer_ownership_arguments message. Does not implicitly {@link koinos.standards.kcs2.transfer_ownership_arguments.verify|verify} messages.
                 * @param message transfer_ownership_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs2.Itransfer_ownership_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified transfer_ownership_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs2.transfer_ownership_arguments.verify|verify} messages.
                 * @param message transfer_ownership_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs2.Itransfer_ownership_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a transfer_ownership_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns transfer_ownership_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs2.transfer_ownership_arguments;

                /**
                 * Decodes a transfer_ownership_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns transfer_ownership_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs2.transfer_ownership_arguments;

                /**
                 * Verifies a transfer_ownership_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a transfer_ownership_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns transfer_ownership_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs2.transfer_ownership_arguments;

                /**
                 * Creates a plain object from a transfer_ownership_arguments message. Also converts values to other types if specified.
                 * @param message transfer_ownership_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs2.transfer_ownership_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this transfer_ownership_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a transfer_ownership_result. */
            interface Itransfer_ownership_result {
            }

            /** Represents a transfer_ownership_result. */
            class transfer_ownership_result implements Itransfer_ownership_result {

                /**
                 * Constructs a new transfer_ownership_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs2.Itransfer_ownership_result);

                /**
                 * Creates a new transfer_ownership_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns transfer_ownership_result instance
                 */
                public static create(properties?: koinos.standards.kcs2.Itransfer_ownership_result): koinos.standards.kcs2.transfer_ownership_result;

                /**
                 * Encodes the specified transfer_ownership_result message. Does not implicitly {@link koinos.standards.kcs2.transfer_ownership_result.verify|verify} messages.
                 * @param message transfer_ownership_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs2.Itransfer_ownership_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified transfer_ownership_result message, length delimited. Does not implicitly {@link koinos.standards.kcs2.transfer_ownership_result.verify|verify} messages.
                 * @param message transfer_ownership_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs2.Itransfer_ownership_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a transfer_ownership_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns transfer_ownership_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs2.transfer_ownership_result;

                /**
                 * Decodes a transfer_ownership_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns transfer_ownership_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs2.transfer_ownership_result;

                /**
                 * Verifies a transfer_ownership_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a transfer_ownership_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns transfer_ownership_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs2.transfer_ownership_result;

                /**
                 * Creates a plain object from a transfer_ownership_result message. Also converts values to other types if specified.
                 * @param message transfer_ownership_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs2.transfer_ownership_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this transfer_ownership_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a set_royalties_argument. */
            interface Iset_royalties_argument {

                /** set_royalties_argument value */
                value?: (koinos.standards.kcs2.Iroyalty[]|null);
            }

            /** Represents a set_royalties_argument. */
            class set_royalties_argument implements Iset_royalties_argument {

                /**
                 * Constructs a new set_royalties_argument.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs2.Iset_royalties_argument);

                /** set_royalties_argument value. */
                public value: koinos.standards.kcs2.Iroyalty[];

                /**
                 * Creates a new set_royalties_argument instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns set_royalties_argument instance
                 */
                public static create(properties?: koinos.standards.kcs2.Iset_royalties_argument): koinos.standards.kcs2.set_royalties_argument;

                /**
                 * Encodes the specified set_royalties_argument message. Does not implicitly {@link koinos.standards.kcs2.set_royalties_argument.verify|verify} messages.
                 * @param message set_royalties_argument message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs2.Iset_royalties_argument, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified set_royalties_argument message, length delimited. Does not implicitly {@link koinos.standards.kcs2.set_royalties_argument.verify|verify} messages.
                 * @param message set_royalties_argument message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs2.Iset_royalties_argument, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a set_royalties_argument message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns set_royalties_argument
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs2.set_royalties_argument;

                /**
                 * Decodes a set_royalties_argument message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns set_royalties_argument
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs2.set_royalties_argument;

                /**
                 * Verifies a set_royalties_argument message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a set_royalties_argument message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns set_royalties_argument
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs2.set_royalties_argument;

                /**
                 * Creates a plain object from a set_royalties_argument message. Also converts values to other types if specified.
                 * @param message set_royalties_argument
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs2.set_royalties_argument, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this set_royalties_argument to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a set_royalties_result. */
            interface Iset_royalties_result {
            }

            /** Represents a set_royalties_result. */
            class set_royalties_result implements Iset_royalties_result {

                /**
                 * Constructs a new set_royalties_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs2.Iset_royalties_result);

                /**
                 * Creates a new set_royalties_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns set_royalties_result instance
                 */
                public static create(properties?: koinos.standards.kcs2.Iset_royalties_result): koinos.standards.kcs2.set_royalties_result;

                /**
                 * Encodes the specified set_royalties_result message. Does not implicitly {@link koinos.standards.kcs2.set_royalties_result.verify|verify} messages.
                 * @param message set_royalties_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs2.Iset_royalties_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified set_royalties_result message, length delimited. Does not implicitly {@link koinos.standards.kcs2.set_royalties_result.verify|verify} messages.
                 * @param message set_royalties_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs2.Iset_royalties_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a set_royalties_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns set_royalties_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs2.set_royalties_result;

                /**
                 * Decodes a set_royalties_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns set_royalties_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs2.set_royalties_result;

                /**
                 * Verifies a set_royalties_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a set_royalties_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns set_royalties_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs2.set_royalties_result;

                /**
                 * Creates a plain object from a set_royalties_result message. Also converts values to other types if specified.
                 * @param message set_royalties_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs2.set_royalties_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this set_royalties_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an approve_arguments. */
            interface Iapprove_arguments {

                /** approve_arguments approver_address */
                approver_address?: (Uint8Array|null);

                /** approve_arguments to */
                to?: (Uint8Array|null);

                /** approve_arguments token_id */
                token_id?: (Uint8Array|null);
            }

            /** Represents an approve_arguments. */
            class approve_arguments implements Iapprove_arguments {

                /**
                 * Constructs a new approve_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs2.Iapprove_arguments);

                /** approve_arguments approver_address. */
                public approver_address: Uint8Array;

                /** approve_arguments to. */
                public to: Uint8Array;

                /** approve_arguments token_id. */
                public token_id: Uint8Array;

                /**
                 * Creates a new approve_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns approve_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs2.Iapprove_arguments): koinos.standards.kcs2.approve_arguments;

                /**
                 * Encodes the specified approve_arguments message. Does not implicitly {@link koinos.standards.kcs2.approve_arguments.verify|verify} messages.
                 * @param message approve_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs2.Iapprove_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified approve_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs2.approve_arguments.verify|verify} messages.
                 * @param message approve_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs2.Iapprove_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an approve_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns approve_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs2.approve_arguments;

                /**
                 * Decodes an approve_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns approve_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs2.approve_arguments;

                /**
                 * Verifies an approve_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an approve_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns approve_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs2.approve_arguments;

                /**
                 * Creates a plain object from an approve_arguments message. Also converts values to other types if specified.
                 * @param message approve_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs2.approve_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this approve_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an approve_result. */
            interface Iapprove_result {
            }

            /** Represents an approve_result. */
            class approve_result implements Iapprove_result {

                /**
                 * Constructs a new approve_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs2.Iapprove_result);

                /**
                 * Creates a new approve_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns approve_result instance
                 */
                public static create(properties?: koinos.standards.kcs2.Iapprove_result): koinos.standards.kcs2.approve_result;

                /**
                 * Encodes the specified approve_result message. Does not implicitly {@link koinos.standards.kcs2.approve_result.verify|verify} messages.
                 * @param message approve_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs2.Iapprove_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified approve_result message, length delimited. Does not implicitly {@link koinos.standards.kcs2.approve_result.verify|verify} messages.
                 * @param message approve_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs2.Iapprove_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an approve_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns approve_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs2.approve_result;

                /**
                 * Decodes an approve_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns approve_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs2.approve_result;

                /**
                 * Verifies an approve_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an approve_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns approve_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs2.approve_result;

                /**
                 * Creates a plain object from an approve_result message. Also converts values to other types if specified.
                 * @param message approve_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs2.approve_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this approve_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a set_approval_for_all_arguments. */
            interface Iset_approval_for_all_arguments {

                /** set_approval_for_all_arguments approver_address */
                approver_address?: (Uint8Array|null);

                /** set_approval_for_all_arguments operator_address */
                operator_address?: (Uint8Array|null);

                /** set_approval_for_all_arguments approved */
                approved?: (boolean|null);
            }

            /** Represents a set_approval_for_all_arguments. */
            class set_approval_for_all_arguments implements Iset_approval_for_all_arguments {

                /**
                 * Constructs a new set_approval_for_all_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs2.Iset_approval_for_all_arguments);

                /** set_approval_for_all_arguments approver_address. */
                public approver_address: Uint8Array;

                /** set_approval_for_all_arguments operator_address. */
                public operator_address: Uint8Array;

                /** set_approval_for_all_arguments approved. */
                public approved: boolean;

                /**
                 * Creates a new set_approval_for_all_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns set_approval_for_all_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs2.Iset_approval_for_all_arguments): koinos.standards.kcs2.set_approval_for_all_arguments;

                /**
                 * Encodes the specified set_approval_for_all_arguments message. Does not implicitly {@link koinos.standards.kcs2.set_approval_for_all_arguments.verify|verify} messages.
                 * @param message set_approval_for_all_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs2.Iset_approval_for_all_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified set_approval_for_all_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs2.set_approval_for_all_arguments.verify|verify} messages.
                 * @param message set_approval_for_all_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs2.Iset_approval_for_all_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a set_approval_for_all_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns set_approval_for_all_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs2.set_approval_for_all_arguments;

                /**
                 * Decodes a set_approval_for_all_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns set_approval_for_all_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs2.set_approval_for_all_arguments;

                /**
                 * Verifies a set_approval_for_all_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a set_approval_for_all_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns set_approval_for_all_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs2.set_approval_for_all_arguments;

                /**
                 * Creates a plain object from a set_approval_for_all_arguments message. Also converts values to other types if specified.
                 * @param message set_approval_for_all_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs2.set_approval_for_all_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this set_approval_for_all_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a set_approval_for_all_result. */
            interface Iset_approval_for_all_result {
            }

            /** Represents a set_approval_for_all_result. */
            class set_approval_for_all_result implements Iset_approval_for_all_result {

                /**
                 * Constructs a new set_approval_for_all_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs2.Iset_approval_for_all_result);

                /**
                 * Creates a new set_approval_for_all_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns set_approval_for_all_result instance
                 */
                public static create(properties?: koinos.standards.kcs2.Iset_approval_for_all_result): koinos.standards.kcs2.set_approval_for_all_result;

                /**
                 * Encodes the specified set_approval_for_all_result message. Does not implicitly {@link koinos.standards.kcs2.set_approval_for_all_result.verify|verify} messages.
                 * @param message set_approval_for_all_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs2.Iset_approval_for_all_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified set_approval_for_all_result message, length delimited. Does not implicitly {@link koinos.standards.kcs2.set_approval_for_all_result.verify|verify} messages.
                 * @param message set_approval_for_all_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs2.Iset_approval_for_all_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a set_approval_for_all_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns set_approval_for_all_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs2.set_approval_for_all_result;

                /**
                 * Decodes a set_approval_for_all_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns set_approval_for_all_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs2.set_approval_for_all_result;

                /**
                 * Verifies a set_approval_for_all_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a set_approval_for_all_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns set_approval_for_all_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs2.set_approval_for_all_result;

                /**
                 * Creates a plain object from a set_approval_for_all_result message. Also converts values to other types if specified.
                 * @param message set_approval_for_all_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs2.set_approval_for_all_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this set_approval_for_all_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a mint_arguments. */
            interface Imint_arguments {

                /** mint_arguments to */
                to?: (Uint8Array|null);

                /** mint_arguments token_id */
                token_id?: (Uint8Array|null);
            }

            /** Represents a mint_arguments. */
            class mint_arguments implements Imint_arguments {

                /**
                 * Constructs a new mint_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs2.Imint_arguments);

                /** mint_arguments to. */
                public to: Uint8Array;

                /** mint_arguments token_id. */
                public token_id: Uint8Array;

                /**
                 * Creates a new mint_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns mint_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs2.Imint_arguments): koinos.standards.kcs2.mint_arguments;

                /**
                 * Encodes the specified mint_arguments message. Does not implicitly {@link koinos.standards.kcs2.mint_arguments.verify|verify} messages.
                 * @param message mint_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs2.Imint_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified mint_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs2.mint_arguments.verify|verify} messages.
                 * @param message mint_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs2.Imint_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a mint_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns mint_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs2.mint_arguments;

                /**
                 * Decodes a mint_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns mint_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs2.mint_arguments;

                /**
                 * Verifies a mint_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a mint_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns mint_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs2.mint_arguments;

                /**
                 * Creates a plain object from a mint_arguments message. Also converts values to other types if specified.
                 * @param message mint_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs2.mint_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this mint_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a mint_result. */
            interface Imint_result {
            }

            /** Represents a mint_result. */
            class mint_result implements Imint_result {

                /**
                 * Constructs a new mint_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs2.Imint_result);

                /**
                 * Creates a new mint_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns mint_result instance
                 */
                public static create(properties?: koinos.standards.kcs2.Imint_result): koinos.standards.kcs2.mint_result;

                /**
                 * Encodes the specified mint_result message. Does not implicitly {@link koinos.standards.kcs2.mint_result.verify|verify} messages.
                 * @param message mint_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs2.Imint_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified mint_result message, length delimited. Does not implicitly {@link koinos.standards.kcs2.mint_result.verify|verify} messages.
                 * @param message mint_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs2.Imint_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a mint_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns mint_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs2.mint_result;

                /**
                 * Decodes a mint_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns mint_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs2.mint_result;

                /**
                 * Verifies a mint_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a mint_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns mint_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs2.mint_result;

                /**
                 * Creates a plain object from a mint_result message. Also converts values to other types if specified.
                 * @param message mint_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs2.mint_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this mint_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a transfer_arguments. */
            interface Itransfer_arguments {

                /** transfer_arguments from */
                from?: (Uint8Array|null);

                /** transfer_arguments to */
                to?: (Uint8Array|null);

                /** transfer_arguments token_id */
                token_id?: (Uint8Array|null);
            }

            /** Represents a transfer_arguments. */
            class transfer_arguments implements Itransfer_arguments {

                /**
                 * Constructs a new transfer_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs2.Itransfer_arguments);

                /** transfer_arguments from. */
                public from: Uint8Array;

                /** transfer_arguments to. */
                public to: Uint8Array;

                /** transfer_arguments token_id. */
                public token_id: Uint8Array;

                /**
                 * Creates a new transfer_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns transfer_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs2.Itransfer_arguments): koinos.standards.kcs2.transfer_arguments;

                /**
                 * Encodes the specified transfer_arguments message. Does not implicitly {@link koinos.standards.kcs2.transfer_arguments.verify|verify} messages.
                 * @param message transfer_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs2.Itransfer_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified transfer_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs2.transfer_arguments.verify|verify} messages.
                 * @param message transfer_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs2.Itransfer_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a transfer_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns transfer_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs2.transfer_arguments;

                /**
                 * Decodes a transfer_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns transfer_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs2.transfer_arguments;

                /**
                 * Verifies a transfer_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a transfer_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns transfer_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs2.transfer_arguments;

                /**
                 * Creates a plain object from a transfer_arguments message. Also converts values to other types if specified.
                 * @param message transfer_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs2.transfer_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this transfer_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a transfer_result. */
            interface Itransfer_result {
            }

            /** Represents a transfer_result. */
            class transfer_result implements Itransfer_result {

                /**
                 * Constructs a new transfer_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs2.Itransfer_result);

                /**
                 * Creates a new transfer_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns transfer_result instance
                 */
                public static create(properties?: koinos.standards.kcs2.Itransfer_result): koinos.standards.kcs2.transfer_result;

                /**
                 * Encodes the specified transfer_result message. Does not implicitly {@link koinos.standards.kcs2.transfer_result.verify|verify} messages.
                 * @param message transfer_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs2.Itransfer_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified transfer_result message, length delimited. Does not implicitly {@link koinos.standards.kcs2.transfer_result.verify|verify} messages.
                 * @param message transfer_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs2.Itransfer_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a transfer_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns transfer_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs2.transfer_result;

                /**
                 * Decodes a transfer_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns transfer_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs2.transfer_result;

                /**
                 * Verifies a transfer_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a transfer_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns transfer_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs2.transfer_result;

                /**
                 * Creates a plain object from a transfer_result message. Also converts values to other types if specified.
                 * @param message transfer_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs2.transfer_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this transfer_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a burn_arguments. */
            interface Iburn_arguments {

                /** burn_arguments token_id */
                token_id?: (Uint8Array|null);
            }

            /** Represents a burn_arguments. */
            class burn_arguments implements Iburn_arguments {

                /**
                 * Constructs a new burn_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs2.Iburn_arguments);

                /** burn_arguments token_id. */
                public token_id: Uint8Array;

                /**
                 * Creates a new burn_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns burn_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs2.Iburn_arguments): koinos.standards.kcs2.burn_arguments;

                /**
                 * Encodes the specified burn_arguments message. Does not implicitly {@link koinos.standards.kcs2.burn_arguments.verify|verify} messages.
                 * @param message burn_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs2.Iburn_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified burn_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs2.burn_arguments.verify|verify} messages.
                 * @param message burn_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs2.Iburn_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a burn_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns burn_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs2.burn_arguments;

                /**
                 * Decodes a burn_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns burn_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs2.burn_arguments;

                /**
                 * Verifies a burn_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a burn_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns burn_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs2.burn_arguments;

                /**
                 * Creates a plain object from a burn_arguments message. Also converts values to other types if specified.
                 * @param message burn_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs2.burn_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this burn_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a burn_result. */
            interface Iburn_result {
            }

            /** Represents a burn_result. */
            class burn_result implements Iburn_result {

                /**
                 * Constructs a new burn_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs2.Iburn_result);

                /**
                 * Creates a new burn_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns burn_result instance
                 */
                public static create(properties?: koinos.standards.kcs2.Iburn_result): koinos.standards.kcs2.burn_result;

                /**
                 * Encodes the specified burn_result message. Does not implicitly {@link koinos.standards.kcs2.burn_result.verify|verify} messages.
                 * @param message burn_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs2.Iburn_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified burn_result message, length delimited. Does not implicitly {@link koinos.standards.kcs2.burn_result.verify|verify} messages.
                 * @param message burn_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs2.Iburn_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a burn_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns burn_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs2.burn_result;

                /**
                 * Decodes a burn_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns burn_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs2.burn_result;

                /**
                 * Verifies a burn_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a burn_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns burn_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs2.burn_result;

                /**
                 * Creates a plain object from a burn_result message. Also converts values to other types if specified.
                 * @param message burn_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs2.burn_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this burn_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a transfer_event. */
            interface Itransfer_event {

                /** transfer_event from */
                from?: (Uint8Array|null);

                /** transfer_event to */
                to?: (Uint8Array|null);

                /** transfer_event token_id */
                token_id?: (Uint8Array|null);
            }

            /** Represents a transfer_event. */
            class transfer_event implements Itransfer_event {

                /**
                 * Constructs a new transfer_event.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs2.Itransfer_event);

                /** transfer_event from. */
                public from: Uint8Array;

                /** transfer_event to. */
                public to: Uint8Array;

                /** transfer_event token_id. */
                public token_id: Uint8Array;

                /**
                 * Creates a new transfer_event instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns transfer_event instance
                 */
                public static create(properties?: koinos.standards.kcs2.Itransfer_event): koinos.standards.kcs2.transfer_event;

                /**
                 * Encodes the specified transfer_event message. Does not implicitly {@link koinos.standards.kcs2.transfer_event.verify|verify} messages.
                 * @param message transfer_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs2.Itransfer_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified transfer_event message, length delimited. Does not implicitly {@link koinos.standards.kcs2.transfer_event.verify|verify} messages.
                 * @param message transfer_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs2.Itransfer_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a transfer_event message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns transfer_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs2.transfer_event;

                /**
                 * Decodes a transfer_event message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns transfer_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs2.transfer_event;

                /**
                 * Verifies a transfer_event message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a transfer_event message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns transfer_event
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs2.transfer_event;

                /**
                 * Creates a plain object from a transfer_event message. Also converts values to other types if specified.
                 * @param message transfer_event
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs2.transfer_event, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this transfer_event to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a mint_event. */
            interface Imint_event {

                /** mint_event to */
                to?: (Uint8Array|null);

                /** mint_event token_id */
                token_id?: (Uint8Array|null);
            }

            /** Represents a mint_event. */
            class mint_event implements Imint_event {

                /**
                 * Constructs a new mint_event.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs2.Imint_event);

                /** mint_event to. */
                public to: Uint8Array;

                /** mint_event token_id. */
                public token_id: Uint8Array;

                /**
                 * Creates a new mint_event instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns mint_event instance
                 */
                public static create(properties?: koinos.standards.kcs2.Imint_event): koinos.standards.kcs2.mint_event;

                /**
                 * Encodes the specified mint_event message. Does not implicitly {@link koinos.standards.kcs2.mint_event.verify|verify} messages.
                 * @param message mint_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs2.Imint_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified mint_event message, length delimited. Does not implicitly {@link koinos.standards.kcs2.mint_event.verify|verify} messages.
                 * @param message mint_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs2.Imint_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a mint_event message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns mint_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs2.mint_event;

                /**
                 * Decodes a mint_event message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns mint_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs2.mint_event;

                /**
                 * Verifies a mint_event message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a mint_event message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns mint_event
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs2.mint_event;

                /**
                 * Creates a plain object from a mint_event message. Also converts values to other types if specified.
                 * @param message mint_event
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs2.mint_event, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this mint_event to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an operator_approval_event. */
            interface Ioperator_approval_event {

                /** operator_approval_event approver_address */
                approver_address?: (Uint8Array|null);

                /** operator_approval_event operator_address */
                operator_address?: (Uint8Array|null);

                /** operator_approval_event approved */
                approved?: (boolean|null);
            }

            /** Represents an operator_approval_event. */
            class operator_approval_event implements Ioperator_approval_event {

                /**
                 * Constructs a new operator_approval_event.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs2.Ioperator_approval_event);

                /** operator_approval_event approver_address. */
                public approver_address: Uint8Array;

                /** operator_approval_event operator_address. */
                public operator_address: Uint8Array;

                /** operator_approval_event approved. */
                public approved: boolean;

                /**
                 * Creates a new operator_approval_event instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns operator_approval_event instance
                 */
                public static create(properties?: koinos.standards.kcs2.Ioperator_approval_event): koinos.standards.kcs2.operator_approval_event;

                /**
                 * Encodes the specified operator_approval_event message. Does not implicitly {@link koinos.standards.kcs2.operator_approval_event.verify|verify} messages.
                 * @param message operator_approval_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs2.Ioperator_approval_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified operator_approval_event message, length delimited. Does not implicitly {@link koinos.standards.kcs2.operator_approval_event.verify|verify} messages.
                 * @param message operator_approval_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs2.Ioperator_approval_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an operator_approval_event message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns operator_approval_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs2.operator_approval_event;

                /**
                 * Decodes an operator_approval_event message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns operator_approval_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs2.operator_approval_event;

                /**
                 * Verifies an operator_approval_event message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an operator_approval_event message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns operator_approval_event
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs2.operator_approval_event;

                /**
                 * Creates a plain object from an operator_approval_event message. Also converts values to other types if specified.
                 * @param message operator_approval_event
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs2.operator_approval_event, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this operator_approval_event to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a token_approval_event. */
            interface Itoken_approval_event {

                /** token_approval_event approver_address */
                approver_address?: (Uint8Array|null);

                /** token_approval_event to */
                to?: (Uint8Array|null);

                /** token_approval_event token_id */
                token_id?: (Uint8Array|null);
            }

            /** Represents a token_approval_event. */
            class token_approval_event implements Itoken_approval_event {

                /**
                 * Constructs a new token_approval_event.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs2.Itoken_approval_event);

                /** token_approval_event approver_address. */
                public approver_address: Uint8Array;

                /** token_approval_event to. */
                public to: Uint8Array;

                /** token_approval_event token_id. */
                public token_id: Uint8Array;

                /**
                 * Creates a new token_approval_event instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns token_approval_event instance
                 */
                public static create(properties?: koinos.standards.kcs2.Itoken_approval_event): koinos.standards.kcs2.token_approval_event;

                /**
                 * Encodes the specified token_approval_event message. Does not implicitly {@link koinos.standards.kcs2.token_approval_event.verify|verify} messages.
                 * @param message token_approval_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs2.Itoken_approval_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified token_approval_event message, length delimited. Does not implicitly {@link koinos.standards.kcs2.token_approval_event.verify|verify} messages.
                 * @param message token_approval_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs2.Itoken_approval_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a token_approval_event message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns token_approval_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs2.token_approval_event;

                /**
                 * Decodes a token_approval_event message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns token_approval_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs2.token_approval_event;

                /**
                 * Verifies a token_approval_event message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a token_approval_event message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns token_approval_event
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs2.token_approval_event;

                /**
                 * Creates a plain object from a token_approval_event message. Also converts values to other types if specified.
                 * @param message token_approval_event
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs2.token_approval_event, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this token_approval_event to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an owner_event. */
            interface Iowner_event {

                /** owner_event from */
                from?: (Uint8Array|null);

                /** owner_event to */
                to?: (Uint8Array|null);
            }

            /** Represents an owner_event. */
            class owner_event implements Iowner_event {

                /**
                 * Constructs a new owner_event.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs2.Iowner_event);

                /** owner_event from. */
                public from: Uint8Array;

                /** owner_event to. */
                public to: Uint8Array;

                /**
                 * Creates a new owner_event instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns owner_event instance
                 */
                public static create(properties?: koinos.standards.kcs2.Iowner_event): koinos.standards.kcs2.owner_event;

                /**
                 * Encodes the specified owner_event message. Does not implicitly {@link koinos.standards.kcs2.owner_event.verify|verify} messages.
                 * @param message owner_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs2.Iowner_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified owner_event message, length delimited. Does not implicitly {@link koinos.standards.kcs2.owner_event.verify|verify} messages.
                 * @param message owner_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs2.Iowner_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an owner_event message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns owner_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs2.owner_event;

                /**
                 * Decodes an owner_event message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns owner_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs2.owner_event;

                /**
                 * Verifies an owner_event message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an owner_event message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns owner_event
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs2.owner_event;

                /**
                 * Creates a plain object from an owner_event message. Also converts values to other types if specified.
                 * @param message owner_event
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs2.owner_event, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this owner_event to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a royalties_event. */
            interface Iroyalties_event {

                /** royalties_event value */
                value?: (koinos.standards.kcs2.Iroyalty[]|null);
            }

            /** Represents a royalties_event. */
            class royalties_event implements Iroyalties_event {

                /**
                 * Constructs a new royalties_event.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs2.Iroyalties_event);

                /** royalties_event value. */
                public value: koinos.standards.kcs2.Iroyalty[];

                /**
                 * Creates a new royalties_event instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns royalties_event instance
                 */
                public static create(properties?: koinos.standards.kcs2.Iroyalties_event): koinos.standards.kcs2.royalties_event;

                /**
                 * Encodes the specified royalties_event message. Does not implicitly {@link koinos.standards.kcs2.royalties_event.verify|verify} messages.
                 * @param message royalties_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs2.Iroyalties_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified royalties_event message, length delimited. Does not implicitly {@link koinos.standards.kcs2.royalties_event.verify|verify} messages.
                 * @param message royalties_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs2.Iroyalties_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a royalties_event message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns royalties_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs2.royalties_event;

                /**
                 * Decodes a royalties_event message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns royalties_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs2.royalties_event;

                /**
                 * Verifies a royalties_event message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a royalties_event message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns royalties_event
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs2.royalties_event;

                /**
                 * Creates a plain object from a royalties_event message. Also converts values to other types if specified.
                 * @param message royalties_event
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs2.royalties_event, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this royalties_event to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a burn_event. */
            interface Iburn_event {

                /** burn_event from */
                from?: (Uint8Array|null);

                /** burn_event token_id */
                token_id?: (Uint8Array|null);
            }

            /** Represents a burn_event. */
            class burn_event implements Iburn_event {

                /**
                 * Constructs a new burn_event.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs2.Iburn_event);

                /** burn_event from. */
                public from: Uint8Array;

                /** burn_event token_id. */
                public token_id: Uint8Array;

                /**
                 * Creates a new burn_event instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns burn_event instance
                 */
                public static create(properties?: koinos.standards.kcs2.Iburn_event): koinos.standards.kcs2.burn_event;

                /**
                 * Encodes the specified burn_event message. Does not implicitly {@link koinos.standards.kcs2.burn_event.verify|verify} messages.
                 * @param message burn_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs2.Iburn_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified burn_event message, length delimited. Does not implicitly {@link koinos.standards.kcs2.burn_event.verify|verify} messages.
                 * @param message burn_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs2.Iburn_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a burn_event message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns burn_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs2.burn_event;

                /**
                 * Decodes a burn_event message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns burn_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs2.burn_event;

                /**
                 * Verifies a burn_event message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a burn_event message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns burn_event
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs2.burn_event;

                /**
                 * Creates a plain object from a burn_event message. Also converts values to other types if specified.
                 * @param message burn_event
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs2.burn_event, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this burn_event to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Namespace kcs3. */
        namespace kcs3 {

            /** Properties of a name_arguments. */
            interface Iname_arguments {
            }

            /** Represents a name_arguments. */
            class name_arguments implements Iname_arguments {

                /**
                 * Constructs a new name_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs3.Iname_arguments);

                /**
                 * Creates a new name_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns name_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs3.Iname_arguments): koinos.standards.kcs3.name_arguments;

                /**
                 * Encodes the specified name_arguments message. Does not implicitly {@link koinos.standards.kcs3.name_arguments.verify|verify} messages.
                 * @param message name_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs3.Iname_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified name_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs3.name_arguments.verify|verify} messages.
                 * @param message name_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs3.Iname_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a name_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns name_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs3.name_arguments;

                /**
                 * Decodes a name_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns name_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs3.name_arguments;

                /**
                 * Verifies a name_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a name_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns name_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs3.name_arguments;

                /**
                 * Creates a plain object from a name_arguments message. Also converts values to other types if specified.
                 * @param message name_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs3.name_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this name_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a name_result. */
            interface Iname_result {

                /** name_result value */
                value?: (string|null);
            }

            /** Represents a name_result. */
            class name_result implements Iname_result {

                /**
                 * Constructs a new name_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs3.Iname_result);

                /** name_result value. */
                public value: string;

                /**
                 * Creates a new name_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns name_result instance
                 */
                public static create(properties?: koinos.standards.kcs3.Iname_result): koinos.standards.kcs3.name_result;

                /**
                 * Encodes the specified name_result message. Does not implicitly {@link koinos.standards.kcs3.name_result.verify|verify} messages.
                 * @param message name_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs3.Iname_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified name_result message, length delimited. Does not implicitly {@link koinos.standards.kcs3.name_result.verify|verify} messages.
                 * @param message name_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs3.Iname_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a name_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns name_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs3.name_result;

                /**
                 * Decodes a name_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns name_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs3.name_result;

                /**
                 * Verifies a name_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a name_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns name_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs3.name_result;

                /**
                 * Creates a plain object from a name_result message. Also converts values to other types if specified.
                 * @param message name_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs3.name_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this name_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a symbol_arguments. */
            interface Isymbol_arguments {
            }

            /** Represents a symbol_arguments. */
            class symbol_arguments implements Isymbol_arguments {

                /**
                 * Constructs a new symbol_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs3.Isymbol_arguments);

                /**
                 * Creates a new symbol_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns symbol_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs3.Isymbol_arguments): koinos.standards.kcs3.symbol_arguments;

                /**
                 * Encodes the specified symbol_arguments message. Does not implicitly {@link koinos.standards.kcs3.symbol_arguments.verify|verify} messages.
                 * @param message symbol_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs3.Isymbol_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified symbol_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs3.symbol_arguments.verify|verify} messages.
                 * @param message symbol_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs3.Isymbol_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a symbol_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns symbol_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs3.symbol_arguments;

                /**
                 * Decodes a symbol_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns symbol_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs3.symbol_arguments;

                /**
                 * Verifies a symbol_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a symbol_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns symbol_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs3.symbol_arguments;

                /**
                 * Creates a plain object from a symbol_arguments message. Also converts values to other types if specified.
                 * @param message symbol_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs3.symbol_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this symbol_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a symbol_result. */
            interface Isymbol_result {

                /** symbol_result value */
                value?: (string|null);
            }

            /** Represents a symbol_result. */
            class symbol_result implements Isymbol_result {

                /**
                 * Constructs a new symbol_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs3.Isymbol_result);

                /** symbol_result value. */
                public value: string;

                /**
                 * Creates a new symbol_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns symbol_result instance
                 */
                public static create(properties?: koinos.standards.kcs3.Isymbol_result): koinos.standards.kcs3.symbol_result;

                /**
                 * Encodes the specified symbol_result message. Does not implicitly {@link koinos.standards.kcs3.symbol_result.verify|verify} messages.
                 * @param message symbol_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs3.Isymbol_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified symbol_result message, length delimited. Does not implicitly {@link koinos.standards.kcs3.symbol_result.verify|verify} messages.
                 * @param message symbol_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs3.Isymbol_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a symbol_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns symbol_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs3.symbol_result;

                /**
                 * Decodes a symbol_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns symbol_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs3.symbol_result;

                /**
                 * Verifies a symbol_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a symbol_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns symbol_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs3.symbol_result;

                /**
                 * Creates a plain object from a symbol_result message. Also converts values to other types if specified.
                 * @param message symbol_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs3.symbol_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this symbol_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a decimals_arguments. */
            interface Idecimals_arguments {
            }

            /** Represents a decimals_arguments. */
            class decimals_arguments implements Idecimals_arguments {

                /**
                 * Constructs a new decimals_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs3.Idecimals_arguments);

                /**
                 * Creates a new decimals_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns decimals_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs3.Idecimals_arguments): koinos.standards.kcs3.decimals_arguments;

                /**
                 * Encodes the specified decimals_arguments message. Does not implicitly {@link koinos.standards.kcs3.decimals_arguments.verify|verify} messages.
                 * @param message decimals_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs3.Idecimals_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified decimals_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs3.decimals_arguments.verify|verify} messages.
                 * @param message decimals_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs3.Idecimals_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a decimals_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns decimals_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs3.decimals_arguments;

                /**
                 * Decodes a decimals_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns decimals_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs3.decimals_arguments;

                /**
                 * Verifies a decimals_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a decimals_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns decimals_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs3.decimals_arguments;

                /**
                 * Creates a plain object from a decimals_arguments message. Also converts values to other types if specified.
                 * @param message decimals_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs3.decimals_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this decimals_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a decimals_result. */
            interface Idecimals_result {

                /** decimals_result value */
                value?: (number|null);
            }

            /** Represents a decimals_result. */
            class decimals_result implements Idecimals_result {

                /**
                 * Constructs a new decimals_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs3.Idecimals_result);

                /** decimals_result value. */
                public value: number;

                /**
                 * Creates a new decimals_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns decimals_result instance
                 */
                public static create(properties?: koinos.standards.kcs3.Idecimals_result): koinos.standards.kcs3.decimals_result;

                /**
                 * Encodes the specified decimals_result message. Does not implicitly {@link koinos.standards.kcs3.decimals_result.verify|verify} messages.
                 * @param message decimals_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs3.Idecimals_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified decimals_result message, length delimited. Does not implicitly {@link koinos.standards.kcs3.decimals_result.verify|verify} messages.
                 * @param message decimals_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs3.Idecimals_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a decimals_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns decimals_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs3.decimals_result;

                /**
                 * Decodes a decimals_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns decimals_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs3.decimals_result;

                /**
                 * Verifies a decimals_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a decimals_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns decimals_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs3.decimals_result;

                /**
                 * Creates a plain object from a decimals_result message. Also converts values to other types if specified.
                 * @param message decimals_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs3.decimals_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this decimals_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a total_supply_arguments. */
            interface Itotal_supply_arguments {
            }

            /** Represents a total_supply_arguments. */
            class total_supply_arguments implements Itotal_supply_arguments {

                /**
                 * Constructs a new total_supply_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs3.Itotal_supply_arguments);

                /**
                 * Creates a new total_supply_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns total_supply_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs3.Itotal_supply_arguments): koinos.standards.kcs3.total_supply_arguments;

                /**
                 * Encodes the specified total_supply_arguments message. Does not implicitly {@link koinos.standards.kcs3.total_supply_arguments.verify|verify} messages.
                 * @param message total_supply_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs3.Itotal_supply_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified total_supply_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs3.total_supply_arguments.verify|verify} messages.
                 * @param message total_supply_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs3.Itotal_supply_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a total_supply_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns total_supply_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs3.total_supply_arguments;

                /**
                 * Decodes a total_supply_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns total_supply_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs3.total_supply_arguments;

                /**
                 * Verifies a total_supply_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a total_supply_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns total_supply_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs3.total_supply_arguments;

                /**
                 * Creates a plain object from a total_supply_arguments message. Also converts values to other types if specified.
                 * @param message total_supply_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs3.total_supply_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this total_supply_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a total_supply_result. */
            interface Itotal_supply_result {

                /** total_supply_result value */
                value?: (number|Long|null);
            }

            /** Represents a total_supply_result. */
            class total_supply_result implements Itotal_supply_result {

                /**
                 * Constructs a new total_supply_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs3.Itotal_supply_result);

                /** total_supply_result value. */
                public value: (number|Long);

                /**
                 * Creates a new total_supply_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns total_supply_result instance
                 */
                public static create(properties?: koinos.standards.kcs3.Itotal_supply_result): koinos.standards.kcs3.total_supply_result;

                /**
                 * Encodes the specified total_supply_result message. Does not implicitly {@link koinos.standards.kcs3.total_supply_result.verify|verify} messages.
                 * @param message total_supply_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs3.Itotal_supply_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified total_supply_result message, length delimited. Does not implicitly {@link koinos.standards.kcs3.total_supply_result.verify|verify} messages.
                 * @param message total_supply_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs3.Itotal_supply_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a total_supply_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns total_supply_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs3.total_supply_result;

                /**
                 * Decodes a total_supply_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns total_supply_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs3.total_supply_result;

                /**
                 * Verifies a total_supply_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a total_supply_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns total_supply_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs3.total_supply_result;

                /**
                 * Creates a plain object from a total_supply_result message. Also converts values to other types if specified.
                 * @param message total_supply_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs3.total_supply_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this total_supply_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a balance_of_arguments. */
            interface Ibalance_of_arguments {

                /** balance_of_arguments owner */
                owner?: (Uint8Array|null);
            }

            /** Represents a balance_of_arguments. */
            class balance_of_arguments implements Ibalance_of_arguments {

                /**
                 * Constructs a new balance_of_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs3.Ibalance_of_arguments);

                /** balance_of_arguments owner. */
                public owner: Uint8Array;

                /**
                 * Creates a new balance_of_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns balance_of_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs3.Ibalance_of_arguments): koinos.standards.kcs3.balance_of_arguments;

                /**
                 * Encodes the specified balance_of_arguments message. Does not implicitly {@link koinos.standards.kcs3.balance_of_arguments.verify|verify} messages.
                 * @param message balance_of_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs3.Ibalance_of_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified balance_of_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs3.balance_of_arguments.verify|verify} messages.
                 * @param message balance_of_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs3.Ibalance_of_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a balance_of_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns balance_of_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs3.balance_of_arguments;

                /**
                 * Decodes a balance_of_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns balance_of_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs3.balance_of_arguments;

                /**
                 * Verifies a balance_of_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a balance_of_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns balance_of_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs3.balance_of_arguments;

                /**
                 * Creates a plain object from a balance_of_arguments message. Also converts values to other types if specified.
                 * @param message balance_of_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs3.balance_of_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this balance_of_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a balance_of_result. */
            interface Ibalance_of_result {

                /** balance_of_result value */
                value?: (number|Long|null);
            }

            /** Represents a balance_of_result. */
            class balance_of_result implements Ibalance_of_result {

                /**
                 * Constructs a new balance_of_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs3.Ibalance_of_result);

                /** balance_of_result value. */
                public value: (number|Long);

                /**
                 * Creates a new balance_of_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns balance_of_result instance
                 */
                public static create(properties?: koinos.standards.kcs3.Ibalance_of_result): koinos.standards.kcs3.balance_of_result;

                /**
                 * Encodes the specified balance_of_result message. Does not implicitly {@link koinos.standards.kcs3.balance_of_result.verify|verify} messages.
                 * @param message balance_of_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs3.Ibalance_of_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified balance_of_result message, length delimited. Does not implicitly {@link koinos.standards.kcs3.balance_of_result.verify|verify} messages.
                 * @param message balance_of_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs3.Ibalance_of_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a balance_of_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns balance_of_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs3.balance_of_result;

                /**
                 * Decodes a balance_of_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns balance_of_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs3.balance_of_result;

                /**
                 * Verifies a balance_of_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a balance_of_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns balance_of_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs3.balance_of_result;

                /**
                 * Creates a plain object from a balance_of_result message. Also converts values to other types if specified.
                 * @param message balance_of_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs3.balance_of_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this balance_of_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_info_arguments. */
            interface Iget_info_arguments {
            }

            /** Represents a get_info_arguments. */
            class get_info_arguments implements Iget_info_arguments {

                /**
                 * Constructs a new get_info_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs3.Iget_info_arguments);

                /**
                 * Creates a new get_info_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_info_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs3.Iget_info_arguments): koinos.standards.kcs3.get_info_arguments;

                /**
                 * Encodes the specified get_info_arguments message. Does not implicitly {@link koinos.standards.kcs3.get_info_arguments.verify|verify} messages.
                 * @param message get_info_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs3.Iget_info_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_info_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs3.get_info_arguments.verify|verify} messages.
                 * @param message get_info_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs3.Iget_info_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_info_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_info_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs3.get_info_arguments;

                /**
                 * Decodes a get_info_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_info_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs3.get_info_arguments;

                /**
                 * Verifies a get_info_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_info_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_info_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs3.get_info_arguments;

                /**
                 * Creates a plain object from a get_info_arguments message. Also converts values to other types if specified.
                 * @param message get_info_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs3.get_info_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_info_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_info_result. */
            interface Iget_info_result {

                /** get_info_result name */
                name?: (string|null);

                /** get_info_result symbol */
                symbol?: (string|null);

                /** get_info_result decimals */
                decimals?: (number|null);
            }

            /** Represents a get_info_result. */
            class get_info_result implements Iget_info_result {

                /**
                 * Constructs a new get_info_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs3.Iget_info_result);

                /** get_info_result name. */
                public name: string;

                /** get_info_result symbol. */
                public symbol: string;

                /** get_info_result decimals. */
                public decimals: number;

                /**
                 * Creates a new get_info_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_info_result instance
                 */
                public static create(properties?: koinos.standards.kcs3.Iget_info_result): koinos.standards.kcs3.get_info_result;

                /**
                 * Encodes the specified get_info_result message. Does not implicitly {@link koinos.standards.kcs3.get_info_result.verify|verify} messages.
                 * @param message get_info_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs3.Iget_info_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_info_result message, length delimited. Does not implicitly {@link koinos.standards.kcs3.get_info_result.verify|verify} messages.
                 * @param message get_info_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs3.Iget_info_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_info_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_info_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs3.get_info_result;

                /**
                 * Decodes a get_info_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_info_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs3.get_info_result;

                /**
                 * Verifies a get_info_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_info_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_info_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs3.get_info_result;

                /**
                 * Creates a plain object from a get_info_result message. Also converts values to other types if specified.
                 * @param message get_info_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs3.get_info_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_info_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an allowance_arguments. */
            interface Iallowance_arguments {

                /** allowance_arguments owner */
                owner?: (Uint8Array|null);

                /** allowance_arguments spender */
                spender?: (Uint8Array|null);
            }

            /** Represents an allowance_arguments. */
            class allowance_arguments implements Iallowance_arguments {

                /**
                 * Constructs a new allowance_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs3.Iallowance_arguments);

                /** allowance_arguments owner. */
                public owner: Uint8Array;

                /** allowance_arguments spender. */
                public spender: Uint8Array;

                /**
                 * Creates a new allowance_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns allowance_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs3.Iallowance_arguments): koinos.standards.kcs3.allowance_arguments;

                /**
                 * Encodes the specified allowance_arguments message. Does not implicitly {@link koinos.standards.kcs3.allowance_arguments.verify|verify} messages.
                 * @param message allowance_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs3.Iallowance_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified allowance_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs3.allowance_arguments.verify|verify} messages.
                 * @param message allowance_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs3.Iallowance_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an allowance_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns allowance_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs3.allowance_arguments;

                /**
                 * Decodes an allowance_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns allowance_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs3.allowance_arguments;

                /**
                 * Verifies an allowance_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an allowance_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns allowance_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs3.allowance_arguments;

                /**
                 * Creates a plain object from an allowance_arguments message. Also converts values to other types if specified.
                 * @param message allowance_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs3.allowance_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this allowance_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an allowance_result. */
            interface Iallowance_result {

                /** allowance_result value */
                value?: (number|Long|null);
            }

            /** Represents an allowance_result. */
            class allowance_result implements Iallowance_result {

                /**
                 * Constructs a new allowance_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs3.Iallowance_result);

                /** allowance_result value. */
                public value: (number|Long);

                /**
                 * Creates a new allowance_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns allowance_result instance
                 */
                public static create(properties?: koinos.standards.kcs3.Iallowance_result): koinos.standards.kcs3.allowance_result;

                /**
                 * Encodes the specified allowance_result message. Does not implicitly {@link koinos.standards.kcs3.allowance_result.verify|verify} messages.
                 * @param message allowance_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs3.Iallowance_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified allowance_result message, length delimited. Does not implicitly {@link koinos.standards.kcs3.allowance_result.verify|verify} messages.
                 * @param message allowance_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs3.Iallowance_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an allowance_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns allowance_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs3.allowance_result;

                /**
                 * Decodes an allowance_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns allowance_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs3.allowance_result;

                /**
                 * Verifies an allowance_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an allowance_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns allowance_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs3.allowance_result;

                /**
                 * Creates a plain object from an allowance_result message. Also converts values to other types if specified.
                 * @param message allowance_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs3.allowance_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this allowance_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** direction enum. */
            enum direction {
                ascending = 0,
                descending = 1
            }

            /** Properties of a spender_value. */
            interface Ispender_value {

                /** spender_value spender */
                spender?: (Uint8Array|null);

                /** spender_value value */
                value?: (number|Long|null);
            }

            /** Represents a spender_value. */
            class spender_value implements Ispender_value {

                /**
                 * Constructs a new spender_value.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs3.Ispender_value);

                /** spender_value spender. */
                public spender: Uint8Array;

                /** spender_value value. */
                public value: (number|Long);

                /**
                 * Creates a new spender_value instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns spender_value instance
                 */
                public static create(properties?: koinos.standards.kcs3.Ispender_value): koinos.standards.kcs3.spender_value;

                /**
                 * Encodes the specified spender_value message. Does not implicitly {@link koinos.standards.kcs3.spender_value.verify|verify} messages.
                 * @param message spender_value message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs3.Ispender_value, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified spender_value message, length delimited. Does not implicitly {@link koinos.standards.kcs3.spender_value.verify|verify} messages.
                 * @param message spender_value message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs3.Ispender_value, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a spender_value message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns spender_value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs3.spender_value;

                /**
                 * Decodes a spender_value message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns spender_value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs3.spender_value;

                /**
                 * Verifies a spender_value message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a spender_value message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns spender_value
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs3.spender_value;

                /**
                 * Creates a plain object from a spender_value message. Also converts values to other types if specified.
                 * @param message spender_value
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs3.spender_value, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this spender_value to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_allowances_arguments. */
            interface Iget_allowances_arguments {

                /** get_allowances_arguments owner */
                owner?: (Uint8Array|null);

                /** get_allowances_arguments start */
                start?: (Uint8Array|null);

                /** get_allowances_arguments limit */
                limit?: (number|null);

                /** get_allowances_arguments direction */
                direction?: (koinos.standards.kcs3.direction|null);
            }

            /** Represents a get_allowances_arguments. */
            class get_allowances_arguments implements Iget_allowances_arguments {

                /**
                 * Constructs a new get_allowances_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs3.Iget_allowances_arguments);

                /** get_allowances_arguments owner. */
                public owner: Uint8Array;

                /** get_allowances_arguments start. */
                public start: Uint8Array;

                /** get_allowances_arguments limit. */
                public limit: number;

                /** get_allowances_arguments direction. */
                public direction: koinos.standards.kcs3.direction;

                /**
                 * Creates a new get_allowances_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_allowances_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs3.Iget_allowances_arguments): koinos.standards.kcs3.get_allowances_arguments;

                /**
                 * Encodes the specified get_allowances_arguments message. Does not implicitly {@link koinos.standards.kcs3.get_allowances_arguments.verify|verify} messages.
                 * @param message get_allowances_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs3.Iget_allowances_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_allowances_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs3.get_allowances_arguments.verify|verify} messages.
                 * @param message get_allowances_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs3.Iget_allowances_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_allowances_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_allowances_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs3.get_allowances_arguments;

                /**
                 * Decodes a get_allowances_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_allowances_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs3.get_allowances_arguments;

                /**
                 * Verifies a get_allowances_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_allowances_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_allowances_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs3.get_allowances_arguments;

                /**
                 * Creates a plain object from a get_allowances_arguments message. Also converts values to other types if specified.
                 * @param message get_allowances_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs3.get_allowances_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_allowances_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_allowances_result. */
            interface Iget_allowances_result {

                /** get_allowances_result owner */
                owner?: (Uint8Array|null);

                /** get_allowances_result allowances */
                allowances?: (koinos.standards.kcs3.Ispender_value[]|null);
            }

            /** Represents a get_allowances_result. */
            class get_allowances_result implements Iget_allowances_result {

                /**
                 * Constructs a new get_allowances_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs3.Iget_allowances_result);

                /** get_allowances_result owner. */
                public owner: Uint8Array;

                /** get_allowances_result allowances. */
                public allowances: koinos.standards.kcs3.Ispender_value[];

                /**
                 * Creates a new get_allowances_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_allowances_result instance
                 */
                public static create(properties?: koinos.standards.kcs3.Iget_allowances_result): koinos.standards.kcs3.get_allowances_result;

                /**
                 * Encodes the specified get_allowances_result message. Does not implicitly {@link koinos.standards.kcs3.get_allowances_result.verify|verify} messages.
                 * @param message get_allowances_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs3.Iget_allowances_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_allowances_result message, length delimited. Does not implicitly {@link koinos.standards.kcs3.get_allowances_result.verify|verify} messages.
                 * @param message get_allowances_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs3.Iget_allowances_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_allowances_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_allowances_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs3.get_allowances_result;

                /**
                 * Decodes a get_allowances_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_allowances_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs3.get_allowances_result;

                /**
                 * Verifies a get_allowances_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_allowances_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_allowances_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs3.get_allowances_result;

                /**
                 * Creates a plain object from a get_allowances_result message. Also converts values to other types if specified.
                 * @param message get_allowances_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs3.get_allowances_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_allowances_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a transfer_arguments. */
            interface Itransfer_arguments {

                /** transfer_arguments from */
                from?: (Uint8Array|null);

                /** transfer_arguments to */
                to?: (Uint8Array|null);

                /** transfer_arguments value */
                value?: (number|Long|null);
            }

            /** Represents a transfer_arguments. */
            class transfer_arguments implements Itransfer_arguments {

                /**
                 * Constructs a new transfer_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs3.Itransfer_arguments);

                /** transfer_arguments from. */
                public from: Uint8Array;

                /** transfer_arguments to. */
                public to: Uint8Array;

                /** transfer_arguments value. */
                public value: (number|Long);

                /**
                 * Creates a new transfer_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns transfer_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs3.Itransfer_arguments): koinos.standards.kcs3.transfer_arguments;

                /**
                 * Encodes the specified transfer_arguments message. Does not implicitly {@link koinos.standards.kcs3.transfer_arguments.verify|verify} messages.
                 * @param message transfer_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs3.Itransfer_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified transfer_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs3.transfer_arguments.verify|verify} messages.
                 * @param message transfer_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs3.Itransfer_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a transfer_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns transfer_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs3.transfer_arguments;

                /**
                 * Decodes a transfer_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns transfer_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs3.transfer_arguments;

                /**
                 * Verifies a transfer_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a transfer_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns transfer_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs3.transfer_arguments;

                /**
                 * Creates a plain object from a transfer_arguments message. Also converts values to other types if specified.
                 * @param message transfer_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs3.transfer_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this transfer_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a transfer_result. */
            interface Itransfer_result {
            }

            /** Represents a transfer_result. */
            class transfer_result implements Itransfer_result {

                /**
                 * Constructs a new transfer_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs3.Itransfer_result);

                /**
                 * Creates a new transfer_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns transfer_result instance
                 */
                public static create(properties?: koinos.standards.kcs3.Itransfer_result): koinos.standards.kcs3.transfer_result;

                /**
                 * Encodes the specified transfer_result message. Does not implicitly {@link koinos.standards.kcs3.transfer_result.verify|verify} messages.
                 * @param message transfer_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs3.Itransfer_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified transfer_result message, length delimited. Does not implicitly {@link koinos.standards.kcs3.transfer_result.verify|verify} messages.
                 * @param message transfer_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs3.Itransfer_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a transfer_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns transfer_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs3.transfer_result;

                /**
                 * Decodes a transfer_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns transfer_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs3.transfer_result;

                /**
                 * Verifies a transfer_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a transfer_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns transfer_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs3.transfer_result;

                /**
                 * Creates a plain object from a transfer_result message. Also converts values to other types if specified.
                 * @param message transfer_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs3.transfer_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this transfer_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a mint_arguments. */
            interface Imint_arguments {

                /** mint_arguments to */
                to?: (Uint8Array|null);

                /** mint_arguments value */
                value?: (number|Long|null);
            }

            /** Represents a mint_arguments. */
            class mint_arguments implements Imint_arguments {

                /**
                 * Constructs a new mint_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs3.Imint_arguments);

                /** mint_arguments to. */
                public to: Uint8Array;

                /** mint_arguments value. */
                public value: (number|Long);

                /**
                 * Creates a new mint_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns mint_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs3.Imint_arguments): koinos.standards.kcs3.mint_arguments;

                /**
                 * Encodes the specified mint_arguments message. Does not implicitly {@link koinos.standards.kcs3.mint_arguments.verify|verify} messages.
                 * @param message mint_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs3.Imint_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified mint_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs3.mint_arguments.verify|verify} messages.
                 * @param message mint_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs3.Imint_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a mint_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns mint_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs3.mint_arguments;

                /**
                 * Decodes a mint_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns mint_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs3.mint_arguments;

                /**
                 * Verifies a mint_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a mint_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns mint_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs3.mint_arguments;

                /**
                 * Creates a plain object from a mint_arguments message. Also converts values to other types if specified.
                 * @param message mint_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs3.mint_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this mint_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a mint_result. */
            interface Imint_result {
            }

            /** Represents a mint_result. */
            class mint_result implements Imint_result {

                /**
                 * Constructs a new mint_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs3.Imint_result);

                /**
                 * Creates a new mint_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns mint_result instance
                 */
                public static create(properties?: koinos.standards.kcs3.Imint_result): koinos.standards.kcs3.mint_result;

                /**
                 * Encodes the specified mint_result message. Does not implicitly {@link koinos.standards.kcs3.mint_result.verify|verify} messages.
                 * @param message mint_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs3.Imint_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified mint_result message, length delimited. Does not implicitly {@link koinos.standards.kcs3.mint_result.verify|verify} messages.
                 * @param message mint_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs3.Imint_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a mint_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns mint_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs3.mint_result;

                /**
                 * Decodes a mint_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns mint_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs3.mint_result;

                /**
                 * Verifies a mint_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a mint_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns mint_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs3.mint_result;

                /**
                 * Creates a plain object from a mint_result message. Also converts values to other types if specified.
                 * @param message mint_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs3.mint_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this mint_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a burn_arguments. */
            interface Iburn_arguments {

                /** burn_arguments from */
                from?: (Uint8Array|null);

                /** burn_arguments value */
                value?: (number|Long|null);
            }

            /** Represents a burn_arguments. */
            class burn_arguments implements Iburn_arguments {

                /**
                 * Constructs a new burn_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs3.Iburn_arguments);

                /** burn_arguments from. */
                public from: Uint8Array;

                /** burn_arguments value. */
                public value: (number|Long);

                /**
                 * Creates a new burn_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns burn_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs3.Iburn_arguments): koinos.standards.kcs3.burn_arguments;

                /**
                 * Encodes the specified burn_arguments message. Does not implicitly {@link koinos.standards.kcs3.burn_arguments.verify|verify} messages.
                 * @param message burn_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs3.Iburn_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified burn_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs3.burn_arguments.verify|verify} messages.
                 * @param message burn_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs3.Iburn_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a burn_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns burn_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs3.burn_arguments;

                /**
                 * Decodes a burn_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns burn_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs3.burn_arguments;

                /**
                 * Verifies a burn_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a burn_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns burn_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs3.burn_arguments;

                /**
                 * Creates a plain object from a burn_arguments message. Also converts values to other types if specified.
                 * @param message burn_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs3.burn_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this burn_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a burn_result. */
            interface Iburn_result {
            }

            /** Represents a burn_result. */
            class burn_result implements Iburn_result {

                /**
                 * Constructs a new burn_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs3.Iburn_result);

                /**
                 * Creates a new burn_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns burn_result instance
                 */
                public static create(properties?: koinos.standards.kcs3.Iburn_result): koinos.standards.kcs3.burn_result;

                /**
                 * Encodes the specified burn_result message. Does not implicitly {@link koinos.standards.kcs3.burn_result.verify|verify} messages.
                 * @param message burn_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs3.Iburn_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified burn_result message, length delimited. Does not implicitly {@link koinos.standards.kcs3.burn_result.verify|verify} messages.
                 * @param message burn_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs3.Iburn_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a burn_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns burn_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs3.burn_result;

                /**
                 * Decodes a burn_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns burn_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs3.burn_result;

                /**
                 * Verifies a burn_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a burn_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns burn_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs3.burn_result;

                /**
                 * Creates a plain object from a burn_result message. Also converts values to other types if specified.
                 * @param message burn_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs3.burn_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this burn_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an approve_arguments. */
            interface Iapprove_arguments {

                /** approve_arguments owner */
                owner?: (Uint8Array|null);

                /** approve_arguments spender */
                spender?: (Uint8Array|null);

                /** approve_arguments value */
                value?: (number|Long|null);
            }

            /** Represents an approve_arguments. */
            class approve_arguments implements Iapprove_arguments {

                /**
                 * Constructs a new approve_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs3.Iapprove_arguments);

                /** approve_arguments owner. */
                public owner: Uint8Array;

                /** approve_arguments spender. */
                public spender: Uint8Array;

                /** approve_arguments value. */
                public value: (number|Long);

                /**
                 * Creates a new approve_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns approve_arguments instance
                 */
                public static create(properties?: koinos.standards.kcs3.Iapprove_arguments): koinos.standards.kcs3.approve_arguments;

                /**
                 * Encodes the specified approve_arguments message. Does not implicitly {@link koinos.standards.kcs3.approve_arguments.verify|verify} messages.
                 * @param message approve_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs3.Iapprove_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified approve_arguments message, length delimited. Does not implicitly {@link koinos.standards.kcs3.approve_arguments.verify|verify} messages.
                 * @param message approve_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs3.Iapprove_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an approve_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns approve_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs3.approve_arguments;

                /**
                 * Decodes an approve_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns approve_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs3.approve_arguments;

                /**
                 * Verifies an approve_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an approve_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns approve_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs3.approve_arguments;

                /**
                 * Creates a plain object from an approve_arguments message. Also converts values to other types if specified.
                 * @param message approve_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs3.approve_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this approve_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an approve_result. */
            interface Iapprove_result {
            }

            /** Represents an approve_result. */
            class approve_result implements Iapprove_result {

                /**
                 * Constructs a new approve_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs3.Iapprove_result);

                /**
                 * Creates a new approve_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns approve_result instance
                 */
                public static create(properties?: koinos.standards.kcs3.Iapprove_result): koinos.standards.kcs3.approve_result;

                /**
                 * Encodes the specified approve_result message. Does not implicitly {@link koinos.standards.kcs3.approve_result.verify|verify} messages.
                 * @param message approve_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs3.Iapprove_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified approve_result message, length delimited. Does not implicitly {@link koinos.standards.kcs3.approve_result.verify|verify} messages.
                 * @param message approve_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs3.Iapprove_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an approve_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns approve_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs3.approve_result;

                /**
                 * Decodes an approve_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns approve_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs3.approve_result;

                /**
                 * Verifies an approve_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an approve_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns approve_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs3.approve_result;

                /**
                 * Creates a plain object from an approve_result message. Also converts values to other types if specified.
                 * @param message approve_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs3.approve_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this approve_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a burn_event. */
            interface Iburn_event {

                /** burn_event from */
                from?: (Uint8Array|null);

                /** burn_event value */
                value?: (number|Long|null);
            }

            /** Represents a burn_event. */
            class burn_event implements Iburn_event {

                /**
                 * Constructs a new burn_event.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs3.Iburn_event);

                /** burn_event from. */
                public from: Uint8Array;

                /** burn_event value. */
                public value: (number|Long);

                /**
                 * Creates a new burn_event instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns burn_event instance
                 */
                public static create(properties?: koinos.standards.kcs3.Iburn_event): koinos.standards.kcs3.burn_event;

                /**
                 * Encodes the specified burn_event message. Does not implicitly {@link koinos.standards.kcs3.burn_event.verify|verify} messages.
                 * @param message burn_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs3.Iburn_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified burn_event message, length delimited. Does not implicitly {@link koinos.standards.kcs3.burn_event.verify|verify} messages.
                 * @param message burn_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs3.Iburn_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a burn_event message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns burn_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs3.burn_event;

                /**
                 * Decodes a burn_event message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns burn_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs3.burn_event;

                /**
                 * Verifies a burn_event message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a burn_event message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns burn_event
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs3.burn_event;

                /**
                 * Creates a plain object from a burn_event message. Also converts values to other types if specified.
                 * @param message burn_event
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs3.burn_event, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this burn_event to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a mint_event. */
            interface Imint_event {

                /** mint_event to */
                to?: (Uint8Array|null);

                /** mint_event value */
                value?: (number|Long|null);
            }

            /** Represents a mint_event. */
            class mint_event implements Imint_event {

                /**
                 * Constructs a new mint_event.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs3.Imint_event);

                /** mint_event to. */
                public to: Uint8Array;

                /** mint_event value. */
                public value: (number|Long);

                /**
                 * Creates a new mint_event instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns mint_event instance
                 */
                public static create(properties?: koinos.standards.kcs3.Imint_event): koinos.standards.kcs3.mint_event;

                /**
                 * Encodes the specified mint_event message. Does not implicitly {@link koinos.standards.kcs3.mint_event.verify|verify} messages.
                 * @param message mint_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs3.Imint_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified mint_event message, length delimited. Does not implicitly {@link koinos.standards.kcs3.mint_event.verify|verify} messages.
                 * @param message mint_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs3.Imint_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a mint_event message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns mint_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs3.mint_event;

                /**
                 * Decodes a mint_event message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns mint_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs3.mint_event;

                /**
                 * Verifies a mint_event message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a mint_event message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns mint_event
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs3.mint_event;

                /**
                 * Creates a plain object from a mint_event message. Also converts values to other types if specified.
                 * @param message mint_event
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs3.mint_event, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this mint_event to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a transfer_event. */
            interface Itransfer_event {

                /** transfer_event from */
                from?: (Uint8Array|null);

                /** transfer_event to */
                to?: (Uint8Array|null);

                /** transfer_event value */
                value?: (number|Long|null);
            }

            /** Represents a transfer_event. */
            class transfer_event implements Itransfer_event {

                /**
                 * Constructs a new transfer_event.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs3.Itransfer_event);

                /** transfer_event from. */
                public from: Uint8Array;

                /** transfer_event to. */
                public to: Uint8Array;

                /** transfer_event value. */
                public value: (number|Long);

                /**
                 * Creates a new transfer_event instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns transfer_event instance
                 */
                public static create(properties?: koinos.standards.kcs3.Itransfer_event): koinos.standards.kcs3.transfer_event;

                /**
                 * Encodes the specified transfer_event message. Does not implicitly {@link koinos.standards.kcs3.transfer_event.verify|verify} messages.
                 * @param message transfer_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs3.Itransfer_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified transfer_event message, length delimited. Does not implicitly {@link koinos.standards.kcs3.transfer_event.verify|verify} messages.
                 * @param message transfer_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs3.Itransfer_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a transfer_event message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns transfer_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs3.transfer_event;

                /**
                 * Decodes a transfer_event message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns transfer_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs3.transfer_event;

                /**
                 * Verifies a transfer_event message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a transfer_event message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns transfer_event
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs3.transfer_event;

                /**
                 * Creates a plain object from a transfer_event message. Also converts values to other types if specified.
                 * @param message transfer_event
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs3.transfer_event, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this transfer_event to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an approve_event. */
            interface Iapprove_event {

                /** approve_event owner */
                owner?: (Uint8Array|null);

                /** approve_event spender */
                spender?: (Uint8Array|null);

                /** approve_event value */
                value?: (number|Long|null);
            }

            /** Represents an approve_event. */
            class approve_event implements Iapprove_event {

                /**
                 * Constructs a new approve_event.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.standards.kcs3.Iapprove_event);

                /** approve_event owner. */
                public owner: Uint8Array;

                /** approve_event spender. */
                public spender: Uint8Array;

                /** approve_event value. */
                public value: (number|Long);

                /**
                 * Creates a new approve_event instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns approve_event instance
                 */
                public static create(properties?: koinos.standards.kcs3.Iapprove_event): koinos.standards.kcs3.approve_event;

                /**
                 * Encodes the specified approve_event message. Does not implicitly {@link koinos.standards.kcs3.approve_event.verify|verify} messages.
                 * @param message approve_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.standards.kcs3.Iapprove_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified approve_event message, length delimited. Does not implicitly {@link koinos.standards.kcs3.approve_event.verify|verify} messages.
                 * @param message approve_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.standards.kcs3.Iapprove_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an approve_event message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns approve_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.standards.kcs3.approve_event;

                /**
                 * Decodes an approve_event message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns approve_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.standards.kcs3.approve_event;

                /**
                 * Verifies an approve_event message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an approve_event message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns approve_event
                 */
                public static fromObject(object: { [k: string]: any }): koinos.standards.kcs3.approve_event;

                /**
                 * Creates a plain object from an approve_event message. Also converts values to other types if specified.
                 * @param message approve_event
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.standards.kcs3.approve_event, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this approve_event to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Namespace transaction_store. */
    namespace transaction_store {

        /** Properties of a transaction_item. */
        interface Itransaction_item {

            /** transaction_item transaction */
            transaction?: (koinos.protocol.Itransaction|null);

            /** transaction_item containing_blocks */
            containing_blocks?: (Uint8Array[]|null);
        }

        /** Represents a transaction_item. */
        class transaction_item implements Itransaction_item {

            /**
             * Constructs a new transaction_item.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.transaction_store.Itransaction_item);

            /** transaction_item transaction. */
            public transaction?: (koinos.protocol.Itransaction|null);

            /** transaction_item containing_blocks. */
            public containing_blocks: Uint8Array[];

            /**
             * Creates a new transaction_item instance using the specified properties.
             * @param [properties] Properties to set
             * @returns transaction_item instance
             */
            public static create(properties?: koinos.transaction_store.Itransaction_item): koinos.transaction_store.transaction_item;

            /**
             * Encodes the specified transaction_item message. Does not implicitly {@link koinos.transaction_store.transaction_item.verify|verify} messages.
             * @param message transaction_item message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.transaction_store.Itransaction_item, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified transaction_item message, length delimited. Does not implicitly {@link koinos.transaction_store.transaction_item.verify|verify} messages.
             * @param message transaction_item message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.transaction_store.Itransaction_item, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a transaction_item message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns transaction_item
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.transaction_store.transaction_item;

            /**
             * Decodes a transaction_item message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns transaction_item
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.transaction_store.transaction_item;

            /**
             * Verifies a transaction_item message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a transaction_item message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns transaction_item
             */
            public static fromObject(object: { [k: string]: any }): koinos.transaction_store.transaction_item;

            /**
             * Creates a plain object from a transaction_item message. Also converts values to other types if specified.
             * @param message transaction_item
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.transaction_store.transaction_item, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this transaction_item to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Namespace contracts. */
    namespace contracts {

        /** Namespace governance. */
        namespace governance {

            /** proposal_status enum. */
            enum proposal_status {
                pending = 0,
                active = 1,
                approved = 2,
                expired = 3,
                applied = 4,
                failed = 5,
                reverted = 6
            }

            /** Properties of a proposal_record. */
            interface Iproposal_record {

                /** proposal_record operations */
                operations?: (koinos.protocol.Ioperation[]|null);

                /** proposal_record operation_merkle_root */
                operation_merkle_root?: (Uint8Array|null);

                /** proposal_record vote_start_height */
                vote_start_height?: (number|Long|null);

                /** proposal_record vote_tally */
                vote_tally?: (number|Long|null);

                /** proposal_record vote_threshold */
                vote_threshold?: (number|Long|null);

                /** proposal_record shall_authorize */
                shall_authorize?: (boolean|null);

                /** proposal_record updates_governance */
                updates_governance?: (boolean|null);

                /** proposal_record status */
                status?: (koinos.contracts.governance.proposal_status|null);

                /** proposal_record fee */
                fee?: (number|Long|null);
            }

            /** Represents a proposal_record. */
            class proposal_record implements Iproposal_record {

                /**
                 * Constructs a new proposal_record.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.governance.Iproposal_record);

                /** proposal_record operations. */
                public operations: koinos.protocol.Ioperation[];

                /** proposal_record operation_merkle_root. */
                public operation_merkle_root: Uint8Array;

                /** proposal_record vote_start_height. */
                public vote_start_height: (number|Long);

                /** proposal_record vote_tally. */
                public vote_tally: (number|Long);

                /** proposal_record vote_threshold. */
                public vote_threshold: (number|Long);

                /** proposal_record shall_authorize. */
                public shall_authorize: boolean;

                /** proposal_record updates_governance. */
                public updates_governance: boolean;

                /** proposal_record status. */
                public status: koinos.contracts.governance.proposal_status;

                /** proposal_record fee. */
                public fee: (number|Long);

                /**
                 * Creates a new proposal_record instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns proposal_record instance
                 */
                public static create(properties?: koinos.contracts.governance.Iproposal_record): koinos.contracts.governance.proposal_record;

                /**
                 * Encodes the specified proposal_record message. Does not implicitly {@link koinos.contracts.governance.proposal_record.verify|verify} messages.
                 * @param message proposal_record message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.governance.Iproposal_record, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified proposal_record message, length delimited. Does not implicitly {@link koinos.contracts.governance.proposal_record.verify|verify} messages.
                 * @param message proposal_record message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.governance.Iproposal_record, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a proposal_record message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns proposal_record
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.governance.proposal_record;

                /**
                 * Decodes a proposal_record message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns proposal_record
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.governance.proposal_record;

                /**
                 * Verifies a proposal_record message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a proposal_record message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns proposal_record
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.governance.proposal_record;

                /**
                 * Creates a plain object from a proposal_record message. Also converts values to other types if specified.
                 * @param message proposal_record
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.governance.proposal_record, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this proposal_record to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a submit_proposal_arguments. */
            interface Isubmit_proposal_arguments {

                /** submit_proposal_arguments operations */
                operations?: (koinos.protocol.Ioperation[]|null);

                /** submit_proposal_arguments operation_merkle_root */
                operation_merkle_root?: (Uint8Array|null);

                /** submit_proposal_arguments fee */
                fee?: (number|Long|null);
            }

            /** Represents a submit_proposal_arguments. */
            class submit_proposal_arguments implements Isubmit_proposal_arguments {

                /**
                 * Constructs a new submit_proposal_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.governance.Isubmit_proposal_arguments);

                /** submit_proposal_arguments operations. */
                public operations: koinos.protocol.Ioperation[];

                /** submit_proposal_arguments operation_merkle_root. */
                public operation_merkle_root: Uint8Array;

                /** submit_proposal_arguments fee. */
                public fee: (number|Long);

                /**
                 * Creates a new submit_proposal_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns submit_proposal_arguments instance
                 */
                public static create(properties?: koinos.contracts.governance.Isubmit_proposal_arguments): koinos.contracts.governance.submit_proposal_arguments;

                /**
                 * Encodes the specified submit_proposal_arguments message. Does not implicitly {@link koinos.contracts.governance.submit_proposal_arguments.verify|verify} messages.
                 * @param message submit_proposal_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.governance.Isubmit_proposal_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified submit_proposal_arguments message, length delimited. Does not implicitly {@link koinos.contracts.governance.submit_proposal_arguments.verify|verify} messages.
                 * @param message submit_proposal_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.governance.Isubmit_proposal_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a submit_proposal_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns submit_proposal_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.governance.submit_proposal_arguments;

                /**
                 * Decodes a submit_proposal_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns submit_proposal_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.governance.submit_proposal_arguments;

                /**
                 * Verifies a submit_proposal_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a submit_proposal_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns submit_proposal_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.governance.submit_proposal_arguments;

                /**
                 * Creates a plain object from a submit_proposal_arguments message. Also converts values to other types if specified.
                 * @param message submit_proposal_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.governance.submit_proposal_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this submit_proposal_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a submit_proposal_result. */
            interface Isubmit_proposal_result {
            }

            /** Represents a submit_proposal_result. */
            class submit_proposal_result implements Isubmit_proposal_result {

                /**
                 * Constructs a new submit_proposal_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.governance.Isubmit_proposal_result);

                /**
                 * Creates a new submit_proposal_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns submit_proposal_result instance
                 */
                public static create(properties?: koinos.contracts.governance.Isubmit_proposal_result): koinos.contracts.governance.submit_proposal_result;

                /**
                 * Encodes the specified submit_proposal_result message. Does not implicitly {@link koinos.contracts.governance.submit_proposal_result.verify|verify} messages.
                 * @param message submit_proposal_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.governance.Isubmit_proposal_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified submit_proposal_result message, length delimited. Does not implicitly {@link koinos.contracts.governance.submit_proposal_result.verify|verify} messages.
                 * @param message submit_proposal_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.governance.Isubmit_proposal_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a submit_proposal_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns submit_proposal_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.governance.submit_proposal_result;

                /**
                 * Decodes a submit_proposal_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns submit_proposal_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.governance.submit_proposal_result;

                /**
                 * Verifies a submit_proposal_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a submit_proposal_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns submit_proposal_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.governance.submit_proposal_result;

                /**
                 * Creates a plain object from a submit_proposal_result message. Also converts values to other types if specified.
                 * @param message submit_proposal_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.governance.submit_proposal_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this submit_proposal_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_proposal_by_id_arguments. */
            interface Iget_proposal_by_id_arguments {

                /** get_proposal_by_id_arguments proposal_id */
                proposal_id?: (Uint8Array|null);
            }

            /** Represents a get_proposal_by_id_arguments. */
            class get_proposal_by_id_arguments implements Iget_proposal_by_id_arguments {

                /**
                 * Constructs a new get_proposal_by_id_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.governance.Iget_proposal_by_id_arguments);

                /** get_proposal_by_id_arguments proposal_id. */
                public proposal_id: Uint8Array;

                /**
                 * Creates a new get_proposal_by_id_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_proposal_by_id_arguments instance
                 */
                public static create(properties?: koinos.contracts.governance.Iget_proposal_by_id_arguments): koinos.contracts.governance.get_proposal_by_id_arguments;

                /**
                 * Encodes the specified get_proposal_by_id_arguments message. Does not implicitly {@link koinos.contracts.governance.get_proposal_by_id_arguments.verify|verify} messages.
                 * @param message get_proposal_by_id_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.governance.Iget_proposal_by_id_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_proposal_by_id_arguments message, length delimited. Does not implicitly {@link koinos.contracts.governance.get_proposal_by_id_arguments.verify|verify} messages.
                 * @param message get_proposal_by_id_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.governance.Iget_proposal_by_id_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_proposal_by_id_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_proposal_by_id_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.governance.get_proposal_by_id_arguments;

                /**
                 * Decodes a get_proposal_by_id_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_proposal_by_id_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.governance.get_proposal_by_id_arguments;

                /**
                 * Verifies a get_proposal_by_id_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_proposal_by_id_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_proposal_by_id_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.governance.get_proposal_by_id_arguments;

                /**
                 * Creates a plain object from a get_proposal_by_id_arguments message. Also converts values to other types if specified.
                 * @param message get_proposal_by_id_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.governance.get_proposal_by_id_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_proposal_by_id_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_proposal_by_id_result. */
            interface Iget_proposal_by_id_result {

                /** get_proposal_by_id_result value */
                value?: (koinos.contracts.governance.Iproposal_record|null);
            }

            /** Represents a get_proposal_by_id_result. */
            class get_proposal_by_id_result implements Iget_proposal_by_id_result {

                /**
                 * Constructs a new get_proposal_by_id_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.governance.Iget_proposal_by_id_result);

                /** get_proposal_by_id_result value. */
                public value?: (koinos.contracts.governance.Iproposal_record|null);

                /**
                 * Creates a new get_proposal_by_id_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_proposal_by_id_result instance
                 */
                public static create(properties?: koinos.contracts.governance.Iget_proposal_by_id_result): koinos.contracts.governance.get_proposal_by_id_result;

                /**
                 * Encodes the specified get_proposal_by_id_result message. Does not implicitly {@link koinos.contracts.governance.get_proposal_by_id_result.verify|verify} messages.
                 * @param message get_proposal_by_id_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.governance.Iget_proposal_by_id_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_proposal_by_id_result message, length delimited. Does not implicitly {@link koinos.contracts.governance.get_proposal_by_id_result.verify|verify} messages.
                 * @param message get_proposal_by_id_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.governance.Iget_proposal_by_id_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_proposal_by_id_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_proposal_by_id_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.governance.get_proposal_by_id_result;

                /**
                 * Decodes a get_proposal_by_id_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_proposal_by_id_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.governance.get_proposal_by_id_result;

                /**
                 * Verifies a get_proposal_by_id_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_proposal_by_id_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_proposal_by_id_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.governance.get_proposal_by_id_result;

                /**
                 * Creates a plain object from a get_proposal_by_id_result message. Also converts values to other types if specified.
                 * @param message get_proposal_by_id_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.governance.get_proposal_by_id_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_proposal_by_id_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_proposals_by_status_arguments. */
            interface Iget_proposals_by_status_arguments {

                /** get_proposals_by_status_arguments start_proposal */
                start_proposal?: (Uint8Array|null);

                /** get_proposals_by_status_arguments limit */
                limit?: (number|Long|null);

                /** get_proposals_by_status_arguments status */
                status?: (koinos.contracts.governance.proposal_status|null);
            }

            /** Represents a get_proposals_by_status_arguments. */
            class get_proposals_by_status_arguments implements Iget_proposals_by_status_arguments {

                /**
                 * Constructs a new get_proposals_by_status_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.governance.Iget_proposals_by_status_arguments);

                /** get_proposals_by_status_arguments start_proposal. */
                public start_proposal: Uint8Array;

                /** get_proposals_by_status_arguments limit. */
                public limit: (number|Long);

                /** get_proposals_by_status_arguments status. */
                public status: koinos.contracts.governance.proposal_status;

                /**
                 * Creates a new get_proposals_by_status_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_proposals_by_status_arguments instance
                 */
                public static create(properties?: koinos.contracts.governance.Iget_proposals_by_status_arguments): koinos.contracts.governance.get_proposals_by_status_arguments;

                /**
                 * Encodes the specified get_proposals_by_status_arguments message. Does not implicitly {@link koinos.contracts.governance.get_proposals_by_status_arguments.verify|verify} messages.
                 * @param message get_proposals_by_status_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.governance.Iget_proposals_by_status_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_proposals_by_status_arguments message, length delimited. Does not implicitly {@link koinos.contracts.governance.get_proposals_by_status_arguments.verify|verify} messages.
                 * @param message get_proposals_by_status_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.governance.Iget_proposals_by_status_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_proposals_by_status_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_proposals_by_status_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.governance.get_proposals_by_status_arguments;

                /**
                 * Decodes a get_proposals_by_status_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_proposals_by_status_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.governance.get_proposals_by_status_arguments;

                /**
                 * Verifies a get_proposals_by_status_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_proposals_by_status_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_proposals_by_status_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.governance.get_proposals_by_status_arguments;

                /**
                 * Creates a plain object from a get_proposals_by_status_arguments message. Also converts values to other types if specified.
                 * @param message get_proposals_by_status_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.governance.get_proposals_by_status_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_proposals_by_status_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_proposals_by_status_result. */
            interface Iget_proposals_by_status_result {

                /** get_proposals_by_status_result value */
                value?: (koinos.contracts.governance.Iproposal_record[]|null);
            }

            /** Represents a get_proposals_by_status_result. */
            class get_proposals_by_status_result implements Iget_proposals_by_status_result {

                /**
                 * Constructs a new get_proposals_by_status_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.governance.Iget_proposals_by_status_result);

                /** get_proposals_by_status_result value. */
                public value: koinos.contracts.governance.Iproposal_record[];

                /**
                 * Creates a new get_proposals_by_status_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_proposals_by_status_result instance
                 */
                public static create(properties?: koinos.contracts.governance.Iget_proposals_by_status_result): koinos.contracts.governance.get_proposals_by_status_result;

                /**
                 * Encodes the specified get_proposals_by_status_result message. Does not implicitly {@link koinos.contracts.governance.get_proposals_by_status_result.verify|verify} messages.
                 * @param message get_proposals_by_status_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.governance.Iget_proposals_by_status_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_proposals_by_status_result message, length delimited. Does not implicitly {@link koinos.contracts.governance.get_proposals_by_status_result.verify|verify} messages.
                 * @param message get_proposals_by_status_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.governance.Iget_proposals_by_status_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_proposals_by_status_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_proposals_by_status_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.governance.get_proposals_by_status_result;

                /**
                 * Decodes a get_proposals_by_status_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_proposals_by_status_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.governance.get_proposals_by_status_result;

                /**
                 * Verifies a get_proposals_by_status_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_proposals_by_status_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_proposals_by_status_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.governance.get_proposals_by_status_result;

                /**
                 * Creates a plain object from a get_proposals_by_status_result message. Also converts values to other types if specified.
                 * @param message get_proposals_by_status_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.governance.get_proposals_by_status_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_proposals_by_status_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_proposals_arguments. */
            interface Iget_proposals_arguments {

                /** get_proposals_arguments start_proposal */
                start_proposal?: (Uint8Array|null);

                /** get_proposals_arguments limit */
                limit?: (number|Long|null);
            }

            /** Represents a get_proposals_arguments. */
            class get_proposals_arguments implements Iget_proposals_arguments {

                /**
                 * Constructs a new get_proposals_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.governance.Iget_proposals_arguments);

                /** get_proposals_arguments start_proposal. */
                public start_proposal: Uint8Array;

                /** get_proposals_arguments limit. */
                public limit: (number|Long);

                /**
                 * Creates a new get_proposals_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_proposals_arguments instance
                 */
                public static create(properties?: koinos.contracts.governance.Iget_proposals_arguments): koinos.contracts.governance.get_proposals_arguments;

                /**
                 * Encodes the specified get_proposals_arguments message. Does not implicitly {@link koinos.contracts.governance.get_proposals_arguments.verify|verify} messages.
                 * @param message get_proposals_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.governance.Iget_proposals_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_proposals_arguments message, length delimited. Does not implicitly {@link koinos.contracts.governance.get_proposals_arguments.verify|verify} messages.
                 * @param message get_proposals_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.governance.Iget_proposals_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_proposals_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_proposals_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.governance.get_proposals_arguments;

                /**
                 * Decodes a get_proposals_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_proposals_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.governance.get_proposals_arguments;

                /**
                 * Verifies a get_proposals_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_proposals_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_proposals_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.governance.get_proposals_arguments;

                /**
                 * Creates a plain object from a get_proposals_arguments message. Also converts values to other types if specified.
                 * @param message get_proposals_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.governance.get_proposals_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_proposals_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_proposals_result. */
            interface Iget_proposals_result {

                /** get_proposals_result value */
                value?: (koinos.contracts.governance.Iproposal_record[]|null);
            }

            /** Represents a get_proposals_result. */
            class get_proposals_result implements Iget_proposals_result {

                /**
                 * Constructs a new get_proposals_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.governance.Iget_proposals_result);

                /** get_proposals_result value. */
                public value: koinos.contracts.governance.Iproposal_record[];

                /**
                 * Creates a new get_proposals_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_proposals_result instance
                 */
                public static create(properties?: koinos.contracts.governance.Iget_proposals_result): koinos.contracts.governance.get_proposals_result;

                /**
                 * Encodes the specified get_proposals_result message. Does not implicitly {@link koinos.contracts.governance.get_proposals_result.verify|verify} messages.
                 * @param message get_proposals_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.governance.Iget_proposals_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_proposals_result message, length delimited. Does not implicitly {@link koinos.contracts.governance.get_proposals_result.verify|verify} messages.
                 * @param message get_proposals_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.governance.Iget_proposals_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_proposals_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_proposals_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.governance.get_proposals_result;

                /**
                 * Decodes a get_proposals_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_proposals_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.governance.get_proposals_result;

                /**
                 * Verifies a get_proposals_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_proposals_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_proposals_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.governance.get_proposals_result;

                /**
                 * Creates a plain object from a get_proposals_result message. Also converts values to other types if specified.
                 * @param message get_proposals_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.governance.get_proposals_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_proposals_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a proposal_submission_event. */
            interface Iproposal_submission_event {

                /** proposal_submission_event proposal */
                proposal?: (koinos.contracts.governance.Iproposal_record|null);
            }

            /** Represents a proposal_submission_event. */
            class proposal_submission_event implements Iproposal_submission_event {

                /**
                 * Constructs a new proposal_submission_event.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.governance.Iproposal_submission_event);

                /** proposal_submission_event proposal. */
                public proposal?: (koinos.contracts.governance.Iproposal_record|null);

                /**
                 * Creates a new proposal_submission_event instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns proposal_submission_event instance
                 */
                public static create(properties?: koinos.contracts.governance.Iproposal_submission_event): koinos.contracts.governance.proposal_submission_event;

                /**
                 * Encodes the specified proposal_submission_event message. Does not implicitly {@link koinos.contracts.governance.proposal_submission_event.verify|verify} messages.
                 * @param message proposal_submission_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.governance.Iproposal_submission_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified proposal_submission_event message, length delimited. Does not implicitly {@link koinos.contracts.governance.proposal_submission_event.verify|verify} messages.
                 * @param message proposal_submission_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.governance.Iproposal_submission_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a proposal_submission_event message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns proposal_submission_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.governance.proposal_submission_event;

                /**
                 * Decodes a proposal_submission_event message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns proposal_submission_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.governance.proposal_submission_event;

                /**
                 * Verifies a proposal_submission_event message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a proposal_submission_event message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns proposal_submission_event
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.governance.proposal_submission_event;

                /**
                 * Creates a plain object from a proposal_submission_event message. Also converts values to other types if specified.
                 * @param message proposal_submission_event
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.governance.proposal_submission_event, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this proposal_submission_event to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a proposal_status_event. */
            interface Iproposal_status_event {

                /** proposal_status_event id */
                id?: (Uint8Array|null);

                /** proposal_status_event status */
                status?: (koinos.contracts.governance.proposal_status|null);
            }

            /** Represents a proposal_status_event. */
            class proposal_status_event implements Iproposal_status_event {

                /**
                 * Constructs a new proposal_status_event.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.governance.Iproposal_status_event);

                /** proposal_status_event id. */
                public id: Uint8Array;

                /** proposal_status_event status. */
                public status: koinos.contracts.governance.proposal_status;

                /**
                 * Creates a new proposal_status_event instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns proposal_status_event instance
                 */
                public static create(properties?: koinos.contracts.governance.Iproposal_status_event): koinos.contracts.governance.proposal_status_event;

                /**
                 * Encodes the specified proposal_status_event message. Does not implicitly {@link koinos.contracts.governance.proposal_status_event.verify|verify} messages.
                 * @param message proposal_status_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.governance.Iproposal_status_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified proposal_status_event message, length delimited. Does not implicitly {@link koinos.contracts.governance.proposal_status_event.verify|verify} messages.
                 * @param message proposal_status_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.governance.Iproposal_status_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a proposal_status_event message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns proposal_status_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.governance.proposal_status_event;

                /**
                 * Decodes a proposal_status_event message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns proposal_status_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.governance.proposal_status_event;

                /**
                 * Verifies a proposal_status_event message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a proposal_status_event message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns proposal_status_event
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.governance.proposal_status_event;

                /**
                 * Creates a plain object from a proposal_status_event message. Also converts values to other types if specified.
                 * @param message proposal_status_event
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.governance.proposal_status_event, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this proposal_status_event to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a proposal_vote_event. */
            interface Iproposal_vote_event {

                /** proposal_vote_event id */
                id?: (Uint8Array|null);

                /** proposal_vote_event vote_tally */
                vote_tally?: (number|Long|null);

                /** proposal_vote_event vote_threshold */
                vote_threshold?: (number|Long|null);
            }

            /** Represents a proposal_vote_event. */
            class proposal_vote_event implements Iproposal_vote_event {

                /**
                 * Constructs a new proposal_vote_event.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.governance.Iproposal_vote_event);

                /** proposal_vote_event id. */
                public id: Uint8Array;

                /** proposal_vote_event vote_tally. */
                public vote_tally: (number|Long);

                /** proposal_vote_event vote_threshold. */
                public vote_threshold: (number|Long);

                /**
                 * Creates a new proposal_vote_event instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns proposal_vote_event instance
                 */
                public static create(properties?: koinos.contracts.governance.Iproposal_vote_event): koinos.contracts.governance.proposal_vote_event;

                /**
                 * Encodes the specified proposal_vote_event message. Does not implicitly {@link koinos.contracts.governance.proposal_vote_event.verify|verify} messages.
                 * @param message proposal_vote_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.governance.Iproposal_vote_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified proposal_vote_event message, length delimited. Does not implicitly {@link koinos.contracts.governance.proposal_vote_event.verify|verify} messages.
                 * @param message proposal_vote_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.governance.Iproposal_vote_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a proposal_vote_event message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns proposal_vote_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.governance.proposal_vote_event;

                /**
                 * Decodes a proposal_vote_event message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns proposal_vote_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.governance.proposal_vote_event;

                /**
                 * Verifies a proposal_vote_event message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a proposal_vote_event message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns proposal_vote_event
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.governance.proposal_vote_event;

                /**
                 * Creates a plain object from a proposal_vote_event message. Also converts values to other types if specified.
                 * @param message proposal_vote_event
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.governance.proposal_vote_event, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this proposal_vote_event to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Namespace claim. */
        namespace claim {

            /** Properties of a claim_info. */
            interface Iclaim_info {

                /** claim_info total_eth_accounts */
                total_eth_accounts?: (number|null);

                /** claim_info eth_accounts_claimed */
                eth_accounts_claimed?: (number|null);

                /** claim_info total_koin */
                total_koin?: (number|Long|null);

                /** claim_info koin_claimed */
                koin_claimed?: (number|Long|null);
            }

            /** Represents a claim_info. */
            class claim_info implements Iclaim_info {

                /**
                 * Constructs a new claim_info.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.claim.Iclaim_info);

                /** claim_info total_eth_accounts. */
                public total_eth_accounts: number;

                /** claim_info eth_accounts_claimed. */
                public eth_accounts_claimed: number;

                /** claim_info total_koin. */
                public total_koin: (number|Long);

                /** claim_info koin_claimed. */
                public koin_claimed: (number|Long);

                /**
                 * Creates a new claim_info instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns claim_info instance
                 */
                public static create(properties?: koinos.contracts.claim.Iclaim_info): koinos.contracts.claim.claim_info;

                /**
                 * Encodes the specified claim_info message. Does not implicitly {@link koinos.contracts.claim.claim_info.verify|verify} messages.
                 * @param message claim_info message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.claim.Iclaim_info, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified claim_info message, length delimited. Does not implicitly {@link koinos.contracts.claim.claim_info.verify|verify} messages.
                 * @param message claim_info message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.claim.Iclaim_info, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a claim_info message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns claim_info
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.claim.claim_info;

                /**
                 * Decodes a claim_info message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns claim_info
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.claim.claim_info;

                /**
                 * Verifies a claim_info message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a claim_info message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns claim_info
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.claim.claim_info;

                /**
                 * Creates a plain object from a claim_info message. Also converts values to other types if specified.
                 * @param message claim_info
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.claim.claim_info, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this claim_info to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a claim_status. */
            interface Iclaim_status {

                /** claim_status token_amount */
                token_amount?: (number|Long|null);

                /** claim_status claimed */
                claimed?: (boolean|null);
            }

            /** Represents a claim_status. */
            class claim_status implements Iclaim_status {

                /**
                 * Constructs a new claim_status.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.claim.Iclaim_status);

                /** claim_status token_amount. */
                public token_amount: (number|Long);

                /** claim_status claimed. */
                public claimed: boolean;

                /**
                 * Creates a new claim_status instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns claim_status instance
                 */
                public static create(properties?: koinos.contracts.claim.Iclaim_status): koinos.contracts.claim.claim_status;

                /**
                 * Encodes the specified claim_status message. Does not implicitly {@link koinos.contracts.claim.claim_status.verify|verify} messages.
                 * @param message claim_status message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.claim.Iclaim_status, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified claim_status message, length delimited. Does not implicitly {@link koinos.contracts.claim.claim_status.verify|verify} messages.
                 * @param message claim_status message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.claim.Iclaim_status, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a claim_status message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns claim_status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.claim.claim_status;

                /**
                 * Decodes a claim_status message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns claim_status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.claim.claim_status;

                /**
                 * Verifies a claim_status message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a claim_status message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns claim_status
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.claim.claim_status;

                /**
                 * Creates a plain object from a claim_status message. Also converts values to other types if specified.
                 * @param message claim_status
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.claim.claim_status, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this claim_status to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a claim_arguments. */
            interface Iclaim_arguments {

                /** claim_arguments eth_address */
                eth_address?: (Uint8Array|null);

                /** claim_arguments koin_address */
                koin_address?: (Uint8Array|null);

                /** claim_arguments signature */
                signature?: (Uint8Array|null);
            }

            /** Represents a claim_arguments. */
            class claim_arguments implements Iclaim_arguments {

                /**
                 * Constructs a new claim_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.claim.Iclaim_arguments);

                /** claim_arguments eth_address. */
                public eth_address: Uint8Array;

                /** claim_arguments koin_address. */
                public koin_address: Uint8Array;

                /** claim_arguments signature. */
                public signature: Uint8Array;

                /**
                 * Creates a new claim_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns claim_arguments instance
                 */
                public static create(properties?: koinos.contracts.claim.Iclaim_arguments): koinos.contracts.claim.claim_arguments;

                /**
                 * Encodes the specified claim_arguments message. Does not implicitly {@link koinos.contracts.claim.claim_arguments.verify|verify} messages.
                 * @param message claim_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.claim.Iclaim_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified claim_arguments message, length delimited. Does not implicitly {@link koinos.contracts.claim.claim_arguments.verify|verify} messages.
                 * @param message claim_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.claim.Iclaim_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a claim_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns claim_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.claim.claim_arguments;

                /**
                 * Decodes a claim_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns claim_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.claim.claim_arguments;

                /**
                 * Verifies a claim_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a claim_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns claim_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.claim.claim_arguments;

                /**
                 * Creates a plain object from a claim_arguments message. Also converts values to other types if specified.
                 * @param message claim_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.claim.claim_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this claim_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a claim_result. */
            interface Iclaim_result {
            }

            /** Represents a claim_result. */
            class claim_result implements Iclaim_result {

                /**
                 * Constructs a new claim_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.claim.Iclaim_result);

                /**
                 * Creates a new claim_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns claim_result instance
                 */
                public static create(properties?: koinos.contracts.claim.Iclaim_result): koinos.contracts.claim.claim_result;

                /**
                 * Encodes the specified claim_result message. Does not implicitly {@link koinos.contracts.claim.claim_result.verify|verify} messages.
                 * @param message claim_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.claim.Iclaim_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified claim_result message, length delimited. Does not implicitly {@link koinos.contracts.claim.claim_result.verify|verify} messages.
                 * @param message claim_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.claim.Iclaim_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a claim_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns claim_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.claim.claim_result;

                /**
                 * Decodes a claim_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns claim_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.claim.claim_result;

                /**
                 * Verifies a claim_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a claim_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns claim_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.claim.claim_result;

                /**
                 * Creates a plain object from a claim_result message. Also converts values to other types if specified.
                 * @param message claim_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.claim.claim_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this claim_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_info_arguments. */
            interface Iget_info_arguments {
            }

            /** Represents a get_info_arguments. */
            class get_info_arguments implements Iget_info_arguments {

                /**
                 * Constructs a new get_info_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.claim.Iget_info_arguments);

                /**
                 * Creates a new get_info_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_info_arguments instance
                 */
                public static create(properties?: koinos.contracts.claim.Iget_info_arguments): koinos.contracts.claim.get_info_arguments;

                /**
                 * Encodes the specified get_info_arguments message. Does not implicitly {@link koinos.contracts.claim.get_info_arguments.verify|verify} messages.
                 * @param message get_info_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.claim.Iget_info_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_info_arguments message, length delimited. Does not implicitly {@link koinos.contracts.claim.get_info_arguments.verify|verify} messages.
                 * @param message get_info_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.claim.Iget_info_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_info_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_info_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.claim.get_info_arguments;

                /**
                 * Decodes a get_info_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_info_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.claim.get_info_arguments;

                /**
                 * Verifies a get_info_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_info_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_info_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.claim.get_info_arguments;

                /**
                 * Creates a plain object from a get_info_arguments message. Also converts values to other types if specified.
                 * @param message get_info_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.claim.get_info_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_info_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_info_result. */
            interface Iget_info_result {

                /** get_info_result value */
                value?: (koinos.contracts.claim.Iclaim_info|null);
            }

            /** Represents a get_info_result. */
            class get_info_result implements Iget_info_result {

                /**
                 * Constructs a new get_info_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.claim.Iget_info_result);

                /** get_info_result value. */
                public value?: (koinos.contracts.claim.Iclaim_info|null);

                /**
                 * Creates a new get_info_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_info_result instance
                 */
                public static create(properties?: koinos.contracts.claim.Iget_info_result): koinos.contracts.claim.get_info_result;

                /**
                 * Encodes the specified get_info_result message. Does not implicitly {@link koinos.contracts.claim.get_info_result.verify|verify} messages.
                 * @param message get_info_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.claim.Iget_info_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_info_result message, length delimited. Does not implicitly {@link koinos.contracts.claim.get_info_result.verify|verify} messages.
                 * @param message get_info_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.claim.Iget_info_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_info_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_info_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.claim.get_info_result;

                /**
                 * Decodes a get_info_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_info_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.claim.get_info_result;

                /**
                 * Verifies a get_info_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_info_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_info_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.claim.get_info_result;

                /**
                 * Creates a plain object from a get_info_result message. Also converts values to other types if specified.
                 * @param message get_info_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.claim.get_info_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_info_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a check_claim_arguments. */
            interface Icheck_claim_arguments {

                /** check_claim_arguments eth_address */
                eth_address?: (Uint8Array|null);
            }

            /** Represents a check_claim_arguments. */
            class check_claim_arguments implements Icheck_claim_arguments {

                /**
                 * Constructs a new check_claim_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.claim.Icheck_claim_arguments);

                /** check_claim_arguments eth_address. */
                public eth_address: Uint8Array;

                /**
                 * Creates a new check_claim_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns check_claim_arguments instance
                 */
                public static create(properties?: koinos.contracts.claim.Icheck_claim_arguments): koinos.contracts.claim.check_claim_arguments;

                /**
                 * Encodes the specified check_claim_arguments message. Does not implicitly {@link koinos.contracts.claim.check_claim_arguments.verify|verify} messages.
                 * @param message check_claim_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.claim.Icheck_claim_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified check_claim_arguments message, length delimited. Does not implicitly {@link koinos.contracts.claim.check_claim_arguments.verify|verify} messages.
                 * @param message check_claim_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.claim.Icheck_claim_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a check_claim_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns check_claim_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.claim.check_claim_arguments;

                /**
                 * Decodes a check_claim_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns check_claim_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.claim.check_claim_arguments;

                /**
                 * Verifies a check_claim_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a check_claim_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns check_claim_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.claim.check_claim_arguments;

                /**
                 * Creates a plain object from a check_claim_arguments message. Also converts values to other types if specified.
                 * @param message check_claim_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.claim.check_claim_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this check_claim_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a check_claim_result. */
            interface Icheck_claim_result {

                /** check_claim_result value */
                value?: (koinos.contracts.claim.Iclaim_status|null);
            }

            /** Represents a check_claim_result. */
            class check_claim_result implements Icheck_claim_result {

                /**
                 * Constructs a new check_claim_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.claim.Icheck_claim_result);

                /** check_claim_result value. */
                public value?: (koinos.contracts.claim.Iclaim_status|null);

                /**
                 * Creates a new check_claim_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns check_claim_result instance
                 */
                public static create(properties?: koinos.contracts.claim.Icheck_claim_result): koinos.contracts.claim.check_claim_result;

                /**
                 * Encodes the specified check_claim_result message. Does not implicitly {@link koinos.contracts.claim.check_claim_result.verify|verify} messages.
                 * @param message check_claim_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.claim.Icheck_claim_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified check_claim_result message, length delimited. Does not implicitly {@link koinos.contracts.claim.check_claim_result.verify|verify} messages.
                 * @param message check_claim_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.claim.Icheck_claim_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a check_claim_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns check_claim_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.claim.check_claim_result;

                /**
                 * Decodes a check_claim_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns check_claim_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.claim.check_claim_result;

                /**
                 * Verifies a check_claim_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a check_claim_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns check_claim_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.claim.check_claim_result;

                /**
                 * Creates a plain object from a check_claim_result message. Also converts values to other types if specified.
                 * @param message check_claim_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.claim.check_claim_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this check_claim_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Namespace pob. */
        namespace pob {

            /** Properties of a consensus_parameters. */
            interface Iconsensus_parameters {

                /** consensus_parameters target_annual_inflation_rate */
                target_annual_inflation_rate?: (number|null);

                /** consensus_parameters target_burn_percent */
                target_burn_percent?: (number|null);

                /** consensus_parameters target_block_interval */
                target_block_interval?: (number|null);

                /** consensus_parameters quantum_length */
                quantum_length?: (number|null);
            }

            /** Represents a consensus_parameters. */
            class consensus_parameters implements Iconsensus_parameters {

                /**
                 * Constructs a new consensus_parameters.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.pob.Iconsensus_parameters);

                /** consensus_parameters target_annual_inflation_rate. */
                public target_annual_inflation_rate: number;

                /** consensus_parameters target_burn_percent. */
                public target_burn_percent: number;

                /** consensus_parameters target_block_interval. */
                public target_block_interval: number;

                /** consensus_parameters quantum_length. */
                public quantum_length: number;

                /**
                 * Creates a new consensus_parameters instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns consensus_parameters instance
                 */
                public static create(properties?: koinos.contracts.pob.Iconsensus_parameters): koinos.contracts.pob.consensus_parameters;

                /**
                 * Encodes the specified consensus_parameters message. Does not implicitly {@link koinos.contracts.pob.consensus_parameters.verify|verify} messages.
                 * @param message consensus_parameters message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.pob.Iconsensus_parameters, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified consensus_parameters message, length delimited. Does not implicitly {@link koinos.contracts.pob.consensus_parameters.verify|verify} messages.
                 * @param message consensus_parameters message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.pob.Iconsensus_parameters, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a consensus_parameters message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns consensus_parameters
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.pob.consensus_parameters;

                /**
                 * Decodes a consensus_parameters message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns consensus_parameters
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.pob.consensus_parameters;

                /**
                 * Verifies a consensus_parameters message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a consensus_parameters message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns consensus_parameters
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.pob.consensus_parameters;

                /**
                 * Creates a plain object from a consensus_parameters message. Also converts values to other types if specified.
                 * @param message consensus_parameters
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.pob.consensus_parameters, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this consensus_parameters to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a public_key_record. */
            interface Ipublic_key_record {

                /** public_key_record public_key */
                public_key?: (Uint8Array|null);

                /** public_key_record set_block_height */
                set_block_height?: (number|Long|null);
            }

            /** Represents a public_key_record. */
            class public_key_record implements Ipublic_key_record {

                /**
                 * Constructs a new public_key_record.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.pob.Ipublic_key_record);

                /** public_key_record public_key. */
                public public_key: Uint8Array;

                /** public_key_record set_block_height. */
                public set_block_height: (number|Long);

                /**
                 * Creates a new public_key_record instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns public_key_record instance
                 */
                public static create(properties?: koinos.contracts.pob.Ipublic_key_record): koinos.contracts.pob.public_key_record;

                /**
                 * Encodes the specified public_key_record message. Does not implicitly {@link koinos.contracts.pob.public_key_record.verify|verify} messages.
                 * @param message public_key_record message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.pob.Ipublic_key_record, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified public_key_record message, length delimited. Does not implicitly {@link koinos.contracts.pob.public_key_record.verify|verify} messages.
                 * @param message public_key_record message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.pob.Ipublic_key_record, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a public_key_record message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns public_key_record
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.pob.public_key_record;

                /**
                 * Decodes a public_key_record message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns public_key_record
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.pob.public_key_record;

                /**
                 * Verifies a public_key_record message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a public_key_record message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns public_key_record
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.pob.public_key_record;

                /**
                 * Creates a plain object from a public_key_record message. Also converts values to other types if specified.
                 * @param message public_key_record
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.pob.public_key_record, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this public_key_record to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a metadata. */
            interface Imetadata {

                /** metadata seed */
                seed?: (Uint8Array|null);

                /** metadata difficulty */
                difficulty?: (Uint8Array|null);

                /** metadata last_block_time */
                last_block_time?: (number|Long|null);
            }

            /** Represents a metadata. */
            class metadata implements Imetadata {

                /**
                 * Constructs a new metadata.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.pob.Imetadata);

                /** metadata seed. */
                public seed: Uint8Array;

                /** metadata difficulty. */
                public difficulty: Uint8Array;

                /** metadata last_block_time. */
                public last_block_time: (number|Long);

                /**
                 * Creates a new metadata instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns metadata instance
                 */
                public static create(properties?: koinos.contracts.pob.Imetadata): koinos.contracts.pob.metadata;

                /**
                 * Encodes the specified metadata message. Does not implicitly {@link koinos.contracts.pob.metadata.verify|verify} messages.
                 * @param message metadata message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.pob.Imetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified metadata message, length delimited. Does not implicitly {@link koinos.contracts.pob.metadata.verify|verify} messages.
                 * @param message metadata message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.pob.Imetadata, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a metadata message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns metadata
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.pob.metadata;

                /**
                 * Decodes a metadata message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns metadata
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.pob.metadata;

                /**
                 * Verifies a metadata message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a metadata message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns metadata
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.pob.metadata;

                /**
                 * Creates a plain object from a metadata message. Also converts values to other types if specified.
                 * @param message metadata
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.pob.metadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this metadata to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a signature_data. */
            interface Isignature_data {

                /** signature_data vrf_proof */
                vrf_proof?: (Uint8Array|null);

                /** signature_data vrf_hash */
                vrf_hash?: (Uint8Array|null);

                /** signature_data signature */
                signature?: (Uint8Array|null);
            }

            /** Represents a signature_data. */
            class signature_data implements Isignature_data {

                /**
                 * Constructs a new signature_data.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.pob.Isignature_data);

                /** signature_data vrf_proof. */
                public vrf_proof: Uint8Array;

                /** signature_data vrf_hash. */
                public vrf_hash: Uint8Array;

                /** signature_data signature. */
                public signature: Uint8Array;

                /**
                 * Creates a new signature_data instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns signature_data instance
                 */
                public static create(properties?: koinos.contracts.pob.Isignature_data): koinos.contracts.pob.signature_data;

                /**
                 * Encodes the specified signature_data message. Does not implicitly {@link koinos.contracts.pob.signature_data.verify|verify} messages.
                 * @param message signature_data message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.pob.Isignature_data, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified signature_data message, length delimited. Does not implicitly {@link koinos.contracts.pob.signature_data.verify|verify} messages.
                 * @param message signature_data message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.pob.Isignature_data, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a signature_data message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns signature_data
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.pob.signature_data;

                /**
                 * Decodes a signature_data message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns signature_data
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.pob.signature_data;

                /**
                 * Verifies a signature_data message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a signature_data message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns signature_data
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.pob.signature_data;

                /**
                 * Creates a plain object from a signature_data message. Also converts values to other types if specified.
                 * @param message signature_data
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.pob.signature_data, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this signature_data to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a vrf_payload. */
            interface Ivrf_payload {

                /** vrf_payload seed */
                seed?: (Uint8Array|null);

                /** vrf_payload block_time */
                block_time?: (number|Long|null);
            }

            /** Represents a vrf_payload. */
            class vrf_payload implements Ivrf_payload {

                /**
                 * Constructs a new vrf_payload.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.pob.Ivrf_payload);

                /** vrf_payload seed. */
                public seed: Uint8Array;

                /** vrf_payload block_time. */
                public block_time: (number|Long);

                /**
                 * Creates a new vrf_payload instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns vrf_payload instance
                 */
                public static create(properties?: koinos.contracts.pob.Ivrf_payload): koinos.contracts.pob.vrf_payload;

                /**
                 * Encodes the specified vrf_payload message. Does not implicitly {@link koinos.contracts.pob.vrf_payload.verify|verify} messages.
                 * @param message vrf_payload message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.pob.Ivrf_payload, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified vrf_payload message, length delimited. Does not implicitly {@link koinos.contracts.pob.vrf_payload.verify|verify} messages.
                 * @param message vrf_payload message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.pob.Ivrf_payload, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a vrf_payload message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns vrf_payload
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.pob.vrf_payload;

                /**
                 * Decodes a vrf_payload message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns vrf_payload
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.pob.vrf_payload;

                /**
                 * Verifies a vrf_payload message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a vrf_payload message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns vrf_payload
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.pob.vrf_payload;

                /**
                 * Creates a plain object from a vrf_payload message. Also converts values to other types if specified.
                 * @param message vrf_payload
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.pob.vrf_payload, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this vrf_payload to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a register_public_key_arguments. */
            interface Iregister_public_key_arguments {

                /** register_public_key_arguments producer */
                producer?: (Uint8Array|null);

                /** register_public_key_arguments public_key */
                public_key?: (Uint8Array|null);
            }

            /** Represents a register_public_key_arguments. */
            class register_public_key_arguments implements Iregister_public_key_arguments {

                /**
                 * Constructs a new register_public_key_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.pob.Iregister_public_key_arguments);

                /** register_public_key_arguments producer. */
                public producer: Uint8Array;

                /** register_public_key_arguments public_key. */
                public public_key: Uint8Array;

                /**
                 * Creates a new register_public_key_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns register_public_key_arguments instance
                 */
                public static create(properties?: koinos.contracts.pob.Iregister_public_key_arguments): koinos.contracts.pob.register_public_key_arguments;

                /**
                 * Encodes the specified register_public_key_arguments message. Does not implicitly {@link koinos.contracts.pob.register_public_key_arguments.verify|verify} messages.
                 * @param message register_public_key_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.pob.Iregister_public_key_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified register_public_key_arguments message, length delimited. Does not implicitly {@link koinos.contracts.pob.register_public_key_arguments.verify|verify} messages.
                 * @param message register_public_key_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.pob.Iregister_public_key_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a register_public_key_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns register_public_key_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.pob.register_public_key_arguments;

                /**
                 * Decodes a register_public_key_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns register_public_key_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.pob.register_public_key_arguments;

                /**
                 * Verifies a register_public_key_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a register_public_key_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns register_public_key_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.pob.register_public_key_arguments;

                /**
                 * Creates a plain object from a register_public_key_arguments message. Also converts values to other types if specified.
                 * @param message register_public_key_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.pob.register_public_key_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this register_public_key_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a register_public_key_result. */
            interface Iregister_public_key_result {
            }

            /** Represents a register_public_key_result. */
            class register_public_key_result implements Iregister_public_key_result {

                /**
                 * Constructs a new register_public_key_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.pob.Iregister_public_key_result);

                /**
                 * Creates a new register_public_key_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns register_public_key_result instance
                 */
                public static create(properties?: koinos.contracts.pob.Iregister_public_key_result): koinos.contracts.pob.register_public_key_result;

                /**
                 * Encodes the specified register_public_key_result message. Does not implicitly {@link koinos.contracts.pob.register_public_key_result.verify|verify} messages.
                 * @param message register_public_key_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.pob.Iregister_public_key_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified register_public_key_result message, length delimited. Does not implicitly {@link koinos.contracts.pob.register_public_key_result.verify|verify} messages.
                 * @param message register_public_key_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.pob.Iregister_public_key_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a register_public_key_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns register_public_key_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.pob.register_public_key_result;

                /**
                 * Decodes a register_public_key_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns register_public_key_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.pob.register_public_key_result;

                /**
                 * Verifies a register_public_key_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a register_public_key_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns register_public_key_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.pob.register_public_key_result;

                /**
                 * Creates a plain object from a register_public_key_result message. Also converts values to other types if specified.
                 * @param message register_public_key_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.pob.register_public_key_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this register_public_key_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a burn_arguments. */
            interface Iburn_arguments {

                /** burn_arguments token_amount */
                token_amount?: (number|Long|null);

                /** burn_arguments burn_address */
                burn_address?: (Uint8Array|null);

                /** burn_arguments vhp_address */
                vhp_address?: (Uint8Array|null);
            }

            /** Represents a burn_arguments. */
            class burn_arguments implements Iburn_arguments {

                /**
                 * Constructs a new burn_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.pob.Iburn_arguments);

                /** burn_arguments token_amount. */
                public token_amount: (number|Long);

                /** burn_arguments burn_address. */
                public burn_address: Uint8Array;

                /** burn_arguments vhp_address. */
                public vhp_address: Uint8Array;

                /**
                 * Creates a new burn_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns burn_arguments instance
                 */
                public static create(properties?: koinos.contracts.pob.Iburn_arguments): koinos.contracts.pob.burn_arguments;

                /**
                 * Encodes the specified burn_arguments message. Does not implicitly {@link koinos.contracts.pob.burn_arguments.verify|verify} messages.
                 * @param message burn_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.pob.Iburn_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified burn_arguments message, length delimited. Does not implicitly {@link koinos.contracts.pob.burn_arguments.verify|verify} messages.
                 * @param message burn_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.pob.Iburn_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a burn_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns burn_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.pob.burn_arguments;

                /**
                 * Decodes a burn_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns burn_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.pob.burn_arguments;

                /**
                 * Verifies a burn_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a burn_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns burn_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.pob.burn_arguments;

                /**
                 * Creates a plain object from a burn_arguments message. Also converts values to other types if specified.
                 * @param message burn_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.pob.burn_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this burn_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a burn_result. */
            interface Iburn_result {
            }

            /** Represents a burn_result. */
            class burn_result implements Iburn_result {

                /**
                 * Constructs a new burn_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.pob.Iburn_result);

                /**
                 * Creates a new burn_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns burn_result instance
                 */
                public static create(properties?: koinos.contracts.pob.Iburn_result): koinos.contracts.pob.burn_result;

                /**
                 * Encodes the specified burn_result message. Does not implicitly {@link koinos.contracts.pob.burn_result.verify|verify} messages.
                 * @param message burn_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.pob.Iburn_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified burn_result message, length delimited. Does not implicitly {@link koinos.contracts.pob.burn_result.verify|verify} messages.
                 * @param message burn_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.pob.Iburn_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a burn_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns burn_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.pob.burn_result;

                /**
                 * Decodes a burn_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns burn_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.pob.burn_result;

                /**
                 * Verifies a burn_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a burn_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns burn_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.pob.burn_result;

                /**
                 * Creates a plain object from a burn_result message. Also converts values to other types if specified.
                 * @param message burn_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.pob.burn_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this burn_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_consensus_parameters_arguments. */
            interface Iget_consensus_parameters_arguments {
            }

            /** Represents a get_consensus_parameters_arguments. */
            class get_consensus_parameters_arguments implements Iget_consensus_parameters_arguments {

                /**
                 * Constructs a new get_consensus_parameters_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.pob.Iget_consensus_parameters_arguments);

                /**
                 * Creates a new get_consensus_parameters_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_consensus_parameters_arguments instance
                 */
                public static create(properties?: koinos.contracts.pob.Iget_consensus_parameters_arguments): koinos.contracts.pob.get_consensus_parameters_arguments;

                /**
                 * Encodes the specified get_consensus_parameters_arguments message. Does not implicitly {@link koinos.contracts.pob.get_consensus_parameters_arguments.verify|verify} messages.
                 * @param message get_consensus_parameters_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.pob.Iget_consensus_parameters_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_consensus_parameters_arguments message, length delimited. Does not implicitly {@link koinos.contracts.pob.get_consensus_parameters_arguments.verify|verify} messages.
                 * @param message get_consensus_parameters_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.pob.Iget_consensus_parameters_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_consensus_parameters_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_consensus_parameters_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.pob.get_consensus_parameters_arguments;

                /**
                 * Decodes a get_consensus_parameters_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_consensus_parameters_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.pob.get_consensus_parameters_arguments;

                /**
                 * Verifies a get_consensus_parameters_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_consensus_parameters_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_consensus_parameters_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.pob.get_consensus_parameters_arguments;

                /**
                 * Creates a plain object from a get_consensus_parameters_arguments message. Also converts values to other types if specified.
                 * @param message get_consensus_parameters_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.pob.get_consensus_parameters_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_consensus_parameters_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_consensus_parameters_result. */
            interface Iget_consensus_parameters_result {

                /** get_consensus_parameters_result value */
                value?: (koinos.contracts.pob.Iconsensus_parameters|null);
            }

            /** Represents a get_consensus_parameters_result. */
            class get_consensus_parameters_result implements Iget_consensus_parameters_result {

                /**
                 * Constructs a new get_consensus_parameters_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.pob.Iget_consensus_parameters_result);

                /** get_consensus_parameters_result value. */
                public value?: (koinos.contracts.pob.Iconsensus_parameters|null);

                /**
                 * Creates a new get_consensus_parameters_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_consensus_parameters_result instance
                 */
                public static create(properties?: koinos.contracts.pob.Iget_consensus_parameters_result): koinos.contracts.pob.get_consensus_parameters_result;

                /**
                 * Encodes the specified get_consensus_parameters_result message. Does not implicitly {@link koinos.contracts.pob.get_consensus_parameters_result.verify|verify} messages.
                 * @param message get_consensus_parameters_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.pob.Iget_consensus_parameters_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_consensus_parameters_result message, length delimited. Does not implicitly {@link koinos.contracts.pob.get_consensus_parameters_result.verify|verify} messages.
                 * @param message get_consensus_parameters_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.pob.Iget_consensus_parameters_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_consensus_parameters_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_consensus_parameters_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.pob.get_consensus_parameters_result;

                /**
                 * Decodes a get_consensus_parameters_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_consensus_parameters_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.pob.get_consensus_parameters_result;

                /**
                 * Verifies a get_consensus_parameters_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_consensus_parameters_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_consensus_parameters_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.pob.get_consensus_parameters_result;

                /**
                 * Creates a plain object from a get_consensus_parameters_result message. Also converts values to other types if specified.
                 * @param message get_consensus_parameters_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.pob.get_consensus_parameters_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_consensus_parameters_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_metadata_arguments. */
            interface Iget_metadata_arguments {
            }

            /** Represents a get_metadata_arguments. */
            class get_metadata_arguments implements Iget_metadata_arguments {

                /**
                 * Constructs a new get_metadata_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.pob.Iget_metadata_arguments);

                /**
                 * Creates a new get_metadata_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_metadata_arguments instance
                 */
                public static create(properties?: koinos.contracts.pob.Iget_metadata_arguments): koinos.contracts.pob.get_metadata_arguments;

                /**
                 * Encodes the specified get_metadata_arguments message. Does not implicitly {@link koinos.contracts.pob.get_metadata_arguments.verify|verify} messages.
                 * @param message get_metadata_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.pob.Iget_metadata_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_metadata_arguments message, length delimited. Does not implicitly {@link koinos.contracts.pob.get_metadata_arguments.verify|verify} messages.
                 * @param message get_metadata_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.pob.Iget_metadata_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_metadata_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_metadata_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.pob.get_metadata_arguments;

                /**
                 * Decodes a get_metadata_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_metadata_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.pob.get_metadata_arguments;

                /**
                 * Verifies a get_metadata_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_metadata_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_metadata_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.pob.get_metadata_arguments;

                /**
                 * Creates a plain object from a get_metadata_arguments message. Also converts values to other types if specified.
                 * @param message get_metadata_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.pob.get_metadata_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_metadata_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_metadata_result. */
            interface Iget_metadata_result {

                /** get_metadata_result value */
                value?: (koinos.contracts.pob.Imetadata|null);
            }

            /** Represents a get_metadata_result. */
            class get_metadata_result implements Iget_metadata_result {

                /**
                 * Constructs a new get_metadata_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.pob.Iget_metadata_result);

                /** get_metadata_result value. */
                public value?: (koinos.contracts.pob.Imetadata|null);

                /**
                 * Creates a new get_metadata_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_metadata_result instance
                 */
                public static create(properties?: koinos.contracts.pob.Iget_metadata_result): koinos.contracts.pob.get_metadata_result;

                /**
                 * Encodes the specified get_metadata_result message. Does not implicitly {@link koinos.contracts.pob.get_metadata_result.verify|verify} messages.
                 * @param message get_metadata_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.pob.Iget_metadata_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_metadata_result message, length delimited. Does not implicitly {@link koinos.contracts.pob.get_metadata_result.verify|verify} messages.
                 * @param message get_metadata_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.pob.Iget_metadata_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_metadata_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_metadata_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.pob.get_metadata_result;

                /**
                 * Decodes a get_metadata_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_metadata_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.pob.get_metadata_result;

                /**
                 * Verifies a get_metadata_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_metadata_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_metadata_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.pob.get_metadata_result;

                /**
                 * Creates a plain object from a get_metadata_result message. Also converts values to other types if specified.
                 * @param message get_metadata_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.pob.get_metadata_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_metadata_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a register_public_key_event. */
            interface Iregister_public_key_event {

                /** register_public_key_event address */
                address?: (Uint8Array|null);

                /** register_public_key_event public_key */
                public_key?: (Uint8Array|null);
            }

            /** Represents a register_public_key_event. */
            class register_public_key_event implements Iregister_public_key_event {

                /**
                 * Constructs a new register_public_key_event.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.pob.Iregister_public_key_event);

                /** register_public_key_event address. */
                public address: Uint8Array;

                /** register_public_key_event public_key. */
                public public_key: Uint8Array;

                /**
                 * Creates a new register_public_key_event instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns register_public_key_event instance
                 */
                public static create(properties?: koinos.contracts.pob.Iregister_public_key_event): koinos.contracts.pob.register_public_key_event;

                /**
                 * Encodes the specified register_public_key_event message. Does not implicitly {@link koinos.contracts.pob.register_public_key_event.verify|verify} messages.
                 * @param message register_public_key_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.pob.Iregister_public_key_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified register_public_key_event message, length delimited. Does not implicitly {@link koinos.contracts.pob.register_public_key_event.verify|verify} messages.
                 * @param message register_public_key_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.pob.Iregister_public_key_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a register_public_key_event message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns register_public_key_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.pob.register_public_key_event;

                /**
                 * Decodes a register_public_key_event message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns register_public_key_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.pob.register_public_key_event;

                /**
                 * Verifies a register_public_key_event message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a register_public_key_event message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns register_public_key_event
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.pob.register_public_key_event;

                /**
                 * Creates a plain object from a register_public_key_event message. Also converts values to other types if specified.
                 * @param message register_public_key_event
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.pob.register_public_key_event, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this register_public_key_event to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_public_key_arguments. */
            interface Iget_public_key_arguments {

                /** get_public_key_arguments producer */
                producer?: (Uint8Array|null);
            }

            /** Represents a get_public_key_arguments. */
            class get_public_key_arguments implements Iget_public_key_arguments {

                /**
                 * Constructs a new get_public_key_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.pob.Iget_public_key_arguments);

                /** get_public_key_arguments producer. */
                public producer: Uint8Array;

                /**
                 * Creates a new get_public_key_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_public_key_arguments instance
                 */
                public static create(properties?: koinos.contracts.pob.Iget_public_key_arguments): koinos.contracts.pob.get_public_key_arguments;

                /**
                 * Encodes the specified get_public_key_arguments message. Does not implicitly {@link koinos.contracts.pob.get_public_key_arguments.verify|verify} messages.
                 * @param message get_public_key_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.pob.Iget_public_key_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_public_key_arguments message, length delimited. Does not implicitly {@link koinos.contracts.pob.get_public_key_arguments.verify|verify} messages.
                 * @param message get_public_key_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.pob.Iget_public_key_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_public_key_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_public_key_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.pob.get_public_key_arguments;

                /**
                 * Decodes a get_public_key_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_public_key_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.pob.get_public_key_arguments;

                /**
                 * Verifies a get_public_key_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_public_key_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_public_key_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.pob.get_public_key_arguments;

                /**
                 * Creates a plain object from a get_public_key_arguments message. Also converts values to other types if specified.
                 * @param message get_public_key_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.pob.get_public_key_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_public_key_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_public_key_result. */
            interface Iget_public_key_result {

                /** get_public_key_result value */
                value?: (Uint8Array|null);
            }

            /** Represents a get_public_key_result. */
            class get_public_key_result implements Iget_public_key_result {

                /**
                 * Constructs a new get_public_key_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.pob.Iget_public_key_result);

                /** get_public_key_result value. */
                public value: Uint8Array;

                /**
                 * Creates a new get_public_key_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_public_key_result instance
                 */
                public static create(properties?: koinos.contracts.pob.Iget_public_key_result): koinos.contracts.pob.get_public_key_result;

                /**
                 * Encodes the specified get_public_key_result message. Does not implicitly {@link koinos.contracts.pob.get_public_key_result.verify|verify} messages.
                 * @param message get_public_key_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.pob.Iget_public_key_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_public_key_result message, length delimited. Does not implicitly {@link koinos.contracts.pob.get_public_key_result.verify|verify} messages.
                 * @param message get_public_key_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.pob.Iget_public_key_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_public_key_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_public_key_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.pob.get_public_key_result;

                /**
                 * Decodes a get_public_key_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_public_key_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.pob.get_public_key_result;

                /**
                 * Verifies a get_public_key_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_public_key_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_public_key_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.pob.get_public_key_result;

                /**
                 * Creates a plain object from a get_public_key_result message. Also converts values to other types if specified.
                 * @param message get_public_key_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.pob.get_public_key_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_public_key_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an update_consensus_parameters_arguments. */
            interface Iupdate_consensus_parameters_arguments {

                /** update_consensus_parameters_arguments value */
                value?: (koinos.contracts.pob.Iconsensus_parameters|null);
            }

            /** Represents an update_consensus_parameters_arguments. */
            class update_consensus_parameters_arguments implements Iupdate_consensus_parameters_arguments {

                /**
                 * Constructs a new update_consensus_parameters_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.pob.Iupdate_consensus_parameters_arguments);

                /** update_consensus_parameters_arguments value. */
                public value?: (koinos.contracts.pob.Iconsensus_parameters|null);

                /**
                 * Creates a new update_consensus_parameters_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns update_consensus_parameters_arguments instance
                 */
                public static create(properties?: koinos.contracts.pob.Iupdate_consensus_parameters_arguments): koinos.contracts.pob.update_consensus_parameters_arguments;

                /**
                 * Encodes the specified update_consensus_parameters_arguments message. Does not implicitly {@link koinos.contracts.pob.update_consensus_parameters_arguments.verify|verify} messages.
                 * @param message update_consensus_parameters_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.pob.Iupdate_consensus_parameters_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified update_consensus_parameters_arguments message, length delimited. Does not implicitly {@link koinos.contracts.pob.update_consensus_parameters_arguments.verify|verify} messages.
                 * @param message update_consensus_parameters_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.pob.Iupdate_consensus_parameters_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an update_consensus_parameters_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns update_consensus_parameters_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.pob.update_consensus_parameters_arguments;

                /**
                 * Decodes an update_consensus_parameters_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns update_consensus_parameters_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.pob.update_consensus_parameters_arguments;

                /**
                 * Verifies an update_consensus_parameters_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an update_consensus_parameters_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns update_consensus_parameters_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.pob.update_consensus_parameters_arguments;

                /**
                 * Creates a plain object from an update_consensus_parameters_arguments message. Also converts values to other types if specified.
                 * @param message update_consensus_parameters_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.pob.update_consensus_parameters_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this update_consensus_parameters_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an update_consensus_parameters_result. */
            interface Iupdate_consensus_parameters_result {
            }

            /** Represents an update_consensus_parameters_result. */
            class update_consensus_parameters_result implements Iupdate_consensus_parameters_result {

                /**
                 * Constructs a new update_consensus_parameters_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.pob.Iupdate_consensus_parameters_result);

                /**
                 * Creates a new update_consensus_parameters_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns update_consensus_parameters_result instance
                 */
                public static create(properties?: koinos.contracts.pob.Iupdate_consensus_parameters_result): koinos.contracts.pob.update_consensus_parameters_result;

                /**
                 * Encodes the specified update_consensus_parameters_result message. Does not implicitly {@link koinos.contracts.pob.update_consensus_parameters_result.verify|verify} messages.
                 * @param message update_consensus_parameters_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.pob.Iupdate_consensus_parameters_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified update_consensus_parameters_result message, length delimited. Does not implicitly {@link koinos.contracts.pob.update_consensus_parameters_result.verify|verify} messages.
                 * @param message update_consensus_parameters_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.pob.Iupdate_consensus_parameters_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an update_consensus_parameters_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns update_consensus_parameters_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.pob.update_consensus_parameters_result;

                /**
                 * Decodes an update_consensus_parameters_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns update_consensus_parameters_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.pob.update_consensus_parameters_result;

                /**
                 * Verifies an update_consensus_parameters_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an update_consensus_parameters_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns update_consensus_parameters_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.pob.update_consensus_parameters_result;

                /**
                 * Creates a plain object from an update_consensus_parameters_result message. Also converts values to other types if specified.
                 * @param message update_consensus_parameters_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.pob.update_consensus_parameters_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this update_consensus_parameters_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Namespace resources. */
        namespace resources {

            /** Properties of a market. */
            interface Imarket {

                /** market resource_supply */
                resource_supply?: (number|Long|null);

                /** market block_budget */
                block_budget?: (number|Long|null);

                /** market block_limit */
                block_limit?: (number|Long|null);
            }

            /** Represents a market. */
            class market implements Imarket {

                /**
                 * Constructs a new market.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.resources.Imarket);

                /** market resource_supply. */
                public resource_supply: (number|Long);

                /** market block_budget. */
                public block_budget: (number|Long);

                /** market block_limit. */
                public block_limit: (number|Long);

                /**
                 * Creates a new market instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns market instance
                 */
                public static create(properties?: koinos.contracts.resources.Imarket): koinos.contracts.resources.market;

                /**
                 * Encodes the specified market message. Does not implicitly {@link koinos.contracts.resources.market.verify|verify} messages.
                 * @param message market message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.resources.Imarket, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified market message, length delimited. Does not implicitly {@link koinos.contracts.resources.market.verify|verify} messages.
                 * @param message market message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.resources.Imarket, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a market message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns market
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.resources.market;

                /**
                 * Decodes a market message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns market
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.resources.market;

                /**
                 * Verifies a market message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a market message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns market
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.resources.market;

                /**
                 * Creates a plain object from a market message. Also converts values to other types if specified.
                 * @param message market
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.resources.market, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this market to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a resource_markets. */
            interface Iresource_markets {

                /** resource_markets disk_storage */
                disk_storage?: (koinos.contracts.resources.Imarket|null);

                /** resource_markets network_bandwidth */
                network_bandwidth?: (koinos.contracts.resources.Imarket|null);

                /** resource_markets compute_bandwidth */
                compute_bandwidth?: (koinos.contracts.resources.Imarket|null);
            }

            /** Represents a resource_markets. */
            class resource_markets implements Iresource_markets {

                /**
                 * Constructs a new resource_markets.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.resources.Iresource_markets);

                /** resource_markets disk_storage. */
                public disk_storage?: (koinos.contracts.resources.Imarket|null);

                /** resource_markets network_bandwidth. */
                public network_bandwidth?: (koinos.contracts.resources.Imarket|null);

                /** resource_markets compute_bandwidth. */
                public compute_bandwidth?: (koinos.contracts.resources.Imarket|null);

                /**
                 * Creates a new resource_markets instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns resource_markets instance
                 */
                public static create(properties?: koinos.contracts.resources.Iresource_markets): koinos.contracts.resources.resource_markets;

                /**
                 * Encodes the specified resource_markets message. Does not implicitly {@link koinos.contracts.resources.resource_markets.verify|verify} messages.
                 * @param message resource_markets message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.resources.Iresource_markets, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified resource_markets message, length delimited. Does not implicitly {@link koinos.contracts.resources.resource_markets.verify|verify} messages.
                 * @param message resource_markets message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.resources.Iresource_markets, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a resource_markets message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns resource_markets
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.resources.resource_markets;

                /**
                 * Decodes a resource_markets message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns resource_markets
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.resources.resource_markets;

                /**
                 * Verifies a resource_markets message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a resource_markets message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns resource_markets
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.resources.resource_markets;

                /**
                 * Creates a plain object from a resource_markets message. Also converts values to other types if specified.
                 * @param message resource_markets
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.resources.resource_markets, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this resource_markets to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a market_parameters. */
            interface Imarket_parameters {

                /** market_parameters block_budget */
                block_budget?: (number|Long|null);

                /** market_parameters block_limit */
                block_limit?: (number|Long|null);
            }

            /** Represents a market_parameters. */
            class market_parameters implements Imarket_parameters {

                /**
                 * Constructs a new market_parameters.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.resources.Imarket_parameters);

                /** market_parameters block_budget. */
                public block_budget: (number|Long);

                /** market_parameters block_limit. */
                public block_limit: (number|Long);

                /**
                 * Creates a new market_parameters instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns market_parameters instance
                 */
                public static create(properties?: koinos.contracts.resources.Imarket_parameters): koinos.contracts.resources.market_parameters;

                /**
                 * Encodes the specified market_parameters message. Does not implicitly {@link koinos.contracts.resources.market_parameters.verify|verify} messages.
                 * @param message market_parameters message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.resources.Imarket_parameters, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified market_parameters message, length delimited. Does not implicitly {@link koinos.contracts.resources.market_parameters.verify|verify} messages.
                 * @param message market_parameters message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.resources.Imarket_parameters, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a market_parameters message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns market_parameters
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.resources.market_parameters;

                /**
                 * Decodes a market_parameters message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns market_parameters
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.resources.market_parameters;

                /**
                 * Verifies a market_parameters message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a market_parameters message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns market_parameters
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.resources.market_parameters;

                /**
                 * Creates a plain object from a market_parameters message. Also converts values to other types if specified.
                 * @param message market_parameters
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.resources.market_parameters, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this market_parameters to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a resource_parameters. */
            interface Iresource_parameters {

                /** resource_parameters block_interval_ms */
                block_interval_ms?: (number|Long|null);

                /** resource_parameters rc_regen_ms */
                rc_regen_ms?: (number|Long|null);

                /** resource_parameters decay_constant */
                decay_constant?: (number|Long|null);

                /** resource_parameters one_minus_decay_constant */
                one_minus_decay_constant?: (number|Long|null);

                /** resource_parameters print_rate_premium */
                print_rate_premium?: (number|Long|null);

                /** resource_parameters print_rate_precision */
                print_rate_precision?: (number|Long|null);
            }

            /** Represents a resource_parameters. */
            class resource_parameters implements Iresource_parameters {

                /**
                 * Constructs a new resource_parameters.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.resources.Iresource_parameters);

                /** resource_parameters block_interval_ms. */
                public block_interval_ms: (number|Long);

                /** resource_parameters rc_regen_ms. */
                public rc_regen_ms: (number|Long);

                /** resource_parameters decay_constant. */
                public decay_constant: (number|Long);

                /** resource_parameters one_minus_decay_constant. */
                public one_minus_decay_constant: (number|Long);

                /** resource_parameters print_rate_premium. */
                public print_rate_premium: (number|Long);

                /** resource_parameters print_rate_precision. */
                public print_rate_precision: (number|Long);

                /**
                 * Creates a new resource_parameters instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns resource_parameters instance
                 */
                public static create(properties?: koinos.contracts.resources.Iresource_parameters): koinos.contracts.resources.resource_parameters;

                /**
                 * Encodes the specified resource_parameters message. Does not implicitly {@link koinos.contracts.resources.resource_parameters.verify|verify} messages.
                 * @param message resource_parameters message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.resources.Iresource_parameters, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified resource_parameters message, length delimited. Does not implicitly {@link koinos.contracts.resources.resource_parameters.verify|verify} messages.
                 * @param message resource_parameters message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.resources.Iresource_parameters, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a resource_parameters message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns resource_parameters
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.resources.resource_parameters;

                /**
                 * Decodes a resource_parameters message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns resource_parameters
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.resources.resource_parameters;

                /**
                 * Verifies a resource_parameters message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a resource_parameters message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns resource_parameters
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.resources.resource_parameters;

                /**
                 * Creates a plain object from a resource_parameters message. Also converts values to other types if specified.
                 * @param message resource_parameters
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.resources.resource_parameters, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this resource_parameters to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a set_resource_markets_parameters_arguments. */
            interface Iset_resource_markets_parameters_arguments {

                /** set_resource_markets_parameters_arguments disk_storage */
                disk_storage?: (koinos.contracts.resources.Imarket_parameters|null);

                /** set_resource_markets_parameters_arguments network_bandwidth */
                network_bandwidth?: (koinos.contracts.resources.Imarket_parameters|null);

                /** set_resource_markets_parameters_arguments compute_bandwidth */
                compute_bandwidth?: (koinos.contracts.resources.Imarket_parameters|null);
            }

            /** Represents a set_resource_markets_parameters_arguments. */
            class set_resource_markets_parameters_arguments implements Iset_resource_markets_parameters_arguments {

                /**
                 * Constructs a new set_resource_markets_parameters_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.resources.Iset_resource_markets_parameters_arguments);

                /** set_resource_markets_parameters_arguments disk_storage. */
                public disk_storage?: (koinos.contracts.resources.Imarket_parameters|null);

                /** set_resource_markets_parameters_arguments network_bandwidth. */
                public network_bandwidth?: (koinos.contracts.resources.Imarket_parameters|null);

                /** set_resource_markets_parameters_arguments compute_bandwidth. */
                public compute_bandwidth?: (koinos.contracts.resources.Imarket_parameters|null);

                /**
                 * Creates a new set_resource_markets_parameters_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns set_resource_markets_parameters_arguments instance
                 */
                public static create(properties?: koinos.contracts.resources.Iset_resource_markets_parameters_arguments): koinos.contracts.resources.set_resource_markets_parameters_arguments;

                /**
                 * Encodes the specified set_resource_markets_parameters_arguments message. Does not implicitly {@link koinos.contracts.resources.set_resource_markets_parameters_arguments.verify|verify} messages.
                 * @param message set_resource_markets_parameters_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.resources.Iset_resource_markets_parameters_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified set_resource_markets_parameters_arguments message, length delimited. Does not implicitly {@link koinos.contracts.resources.set_resource_markets_parameters_arguments.verify|verify} messages.
                 * @param message set_resource_markets_parameters_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.resources.Iset_resource_markets_parameters_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a set_resource_markets_parameters_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns set_resource_markets_parameters_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.resources.set_resource_markets_parameters_arguments;

                /**
                 * Decodes a set_resource_markets_parameters_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns set_resource_markets_parameters_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.resources.set_resource_markets_parameters_arguments;

                /**
                 * Verifies a set_resource_markets_parameters_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a set_resource_markets_parameters_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns set_resource_markets_parameters_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.resources.set_resource_markets_parameters_arguments;

                /**
                 * Creates a plain object from a set_resource_markets_parameters_arguments message. Also converts values to other types if specified.
                 * @param message set_resource_markets_parameters_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.resources.set_resource_markets_parameters_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this set_resource_markets_parameters_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a set_resource_markets_parameters_result. */
            interface Iset_resource_markets_parameters_result {
            }

            /** Represents a set_resource_markets_parameters_result. */
            class set_resource_markets_parameters_result implements Iset_resource_markets_parameters_result {

                /**
                 * Constructs a new set_resource_markets_parameters_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.resources.Iset_resource_markets_parameters_result);

                /**
                 * Creates a new set_resource_markets_parameters_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns set_resource_markets_parameters_result instance
                 */
                public static create(properties?: koinos.contracts.resources.Iset_resource_markets_parameters_result): koinos.contracts.resources.set_resource_markets_parameters_result;

                /**
                 * Encodes the specified set_resource_markets_parameters_result message. Does not implicitly {@link koinos.contracts.resources.set_resource_markets_parameters_result.verify|verify} messages.
                 * @param message set_resource_markets_parameters_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.resources.Iset_resource_markets_parameters_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified set_resource_markets_parameters_result message, length delimited. Does not implicitly {@link koinos.contracts.resources.set_resource_markets_parameters_result.verify|verify} messages.
                 * @param message set_resource_markets_parameters_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.resources.Iset_resource_markets_parameters_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a set_resource_markets_parameters_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns set_resource_markets_parameters_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.resources.set_resource_markets_parameters_result;

                /**
                 * Decodes a set_resource_markets_parameters_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns set_resource_markets_parameters_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.resources.set_resource_markets_parameters_result;

                /**
                 * Verifies a set_resource_markets_parameters_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a set_resource_markets_parameters_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns set_resource_markets_parameters_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.resources.set_resource_markets_parameters_result;

                /**
                 * Creates a plain object from a set_resource_markets_parameters_result message. Also converts values to other types if specified.
                 * @param message set_resource_markets_parameters_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.resources.set_resource_markets_parameters_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this set_resource_markets_parameters_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_resource_markets_arguments. */
            interface Iget_resource_markets_arguments {
            }

            /** Represents a get_resource_markets_arguments. */
            class get_resource_markets_arguments implements Iget_resource_markets_arguments {

                /**
                 * Constructs a new get_resource_markets_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.resources.Iget_resource_markets_arguments);

                /**
                 * Creates a new get_resource_markets_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_resource_markets_arguments instance
                 */
                public static create(properties?: koinos.contracts.resources.Iget_resource_markets_arguments): koinos.contracts.resources.get_resource_markets_arguments;

                /**
                 * Encodes the specified get_resource_markets_arguments message. Does not implicitly {@link koinos.contracts.resources.get_resource_markets_arguments.verify|verify} messages.
                 * @param message get_resource_markets_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.resources.Iget_resource_markets_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_resource_markets_arguments message, length delimited. Does not implicitly {@link koinos.contracts.resources.get_resource_markets_arguments.verify|verify} messages.
                 * @param message get_resource_markets_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.resources.Iget_resource_markets_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_resource_markets_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_resource_markets_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.resources.get_resource_markets_arguments;

                /**
                 * Decodes a get_resource_markets_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_resource_markets_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.resources.get_resource_markets_arguments;

                /**
                 * Verifies a get_resource_markets_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_resource_markets_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_resource_markets_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.resources.get_resource_markets_arguments;

                /**
                 * Creates a plain object from a get_resource_markets_arguments message. Also converts values to other types if specified.
                 * @param message get_resource_markets_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.resources.get_resource_markets_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_resource_markets_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_resource_markets_result. */
            interface Iget_resource_markets_result {

                /** get_resource_markets_result value */
                value?: (koinos.contracts.resources.Iresource_markets|null);
            }

            /** Represents a get_resource_markets_result. */
            class get_resource_markets_result implements Iget_resource_markets_result {

                /**
                 * Constructs a new get_resource_markets_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.resources.Iget_resource_markets_result);

                /** get_resource_markets_result value. */
                public value?: (koinos.contracts.resources.Iresource_markets|null);

                /**
                 * Creates a new get_resource_markets_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_resource_markets_result instance
                 */
                public static create(properties?: koinos.contracts.resources.Iget_resource_markets_result): koinos.contracts.resources.get_resource_markets_result;

                /**
                 * Encodes the specified get_resource_markets_result message. Does not implicitly {@link koinos.contracts.resources.get_resource_markets_result.verify|verify} messages.
                 * @param message get_resource_markets_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.resources.Iget_resource_markets_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_resource_markets_result message, length delimited. Does not implicitly {@link koinos.contracts.resources.get_resource_markets_result.verify|verify} messages.
                 * @param message get_resource_markets_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.resources.Iget_resource_markets_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_resource_markets_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_resource_markets_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.resources.get_resource_markets_result;

                /**
                 * Decodes a get_resource_markets_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_resource_markets_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.resources.get_resource_markets_result;

                /**
                 * Verifies a get_resource_markets_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_resource_markets_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_resource_markets_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.resources.get_resource_markets_result;

                /**
                 * Creates a plain object from a get_resource_markets_result message. Also converts values to other types if specified.
                 * @param message get_resource_markets_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.resources.get_resource_markets_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_resource_markets_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a set_resource_parameters_arguments. */
            interface Iset_resource_parameters_arguments {

                /** set_resource_parameters_arguments params */
                params?: (koinos.contracts.resources.Iresource_parameters|null);
            }

            /** Represents a set_resource_parameters_arguments. */
            class set_resource_parameters_arguments implements Iset_resource_parameters_arguments {

                /**
                 * Constructs a new set_resource_parameters_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.resources.Iset_resource_parameters_arguments);

                /** set_resource_parameters_arguments params. */
                public params?: (koinos.contracts.resources.Iresource_parameters|null);

                /**
                 * Creates a new set_resource_parameters_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns set_resource_parameters_arguments instance
                 */
                public static create(properties?: koinos.contracts.resources.Iset_resource_parameters_arguments): koinos.contracts.resources.set_resource_parameters_arguments;

                /**
                 * Encodes the specified set_resource_parameters_arguments message. Does not implicitly {@link koinos.contracts.resources.set_resource_parameters_arguments.verify|verify} messages.
                 * @param message set_resource_parameters_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.resources.Iset_resource_parameters_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified set_resource_parameters_arguments message, length delimited. Does not implicitly {@link koinos.contracts.resources.set_resource_parameters_arguments.verify|verify} messages.
                 * @param message set_resource_parameters_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.resources.Iset_resource_parameters_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a set_resource_parameters_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns set_resource_parameters_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.resources.set_resource_parameters_arguments;

                /**
                 * Decodes a set_resource_parameters_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns set_resource_parameters_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.resources.set_resource_parameters_arguments;

                /**
                 * Verifies a set_resource_parameters_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a set_resource_parameters_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns set_resource_parameters_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.resources.set_resource_parameters_arguments;

                /**
                 * Creates a plain object from a set_resource_parameters_arguments message. Also converts values to other types if specified.
                 * @param message set_resource_parameters_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.resources.set_resource_parameters_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this set_resource_parameters_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a set_resource_parameters_result. */
            interface Iset_resource_parameters_result {
            }

            /** Represents a set_resource_parameters_result. */
            class set_resource_parameters_result implements Iset_resource_parameters_result {

                /**
                 * Constructs a new set_resource_parameters_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.resources.Iset_resource_parameters_result);

                /**
                 * Creates a new set_resource_parameters_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns set_resource_parameters_result instance
                 */
                public static create(properties?: koinos.contracts.resources.Iset_resource_parameters_result): koinos.contracts.resources.set_resource_parameters_result;

                /**
                 * Encodes the specified set_resource_parameters_result message. Does not implicitly {@link koinos.contracts.resources.set_resource_parameters_result.verify|verify} messages.
                 * @param message set_resource_parameters_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.resources.Iset_resource_parameters_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified set_resource_parameters_result message, length delimited. Does not implicitly {@link koinos.contracts.resources.set_resource_parameters_result.verify|verify} messages.
                 * @param message set_resource_parameters_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.resources.Iset_resource_parameters_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a set_resource_parameters_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns set_resource_parameters_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.resources.set_resource_parameters_result;

                /**
                 * Decodes a set_resource_parameters_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns set_resource_parameters_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.resources.set_resource_parameters_result;

                /**
                 * Verifies a set_resource_parameters_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a set_resource_parameters_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns set_resource_parameters_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.resources.set_resource_parameters_result;

                /**
                 * Creates a plain object from a set_resource_parameters_result message. Also converts values to other types if specified.
                 * @param message set_resource_parameters_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.resources.set_resource_parameters_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this set_resource_parameters_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_resource_parameters_arguments. */
            interface Iget_resource_parameters_arguments {
            }

            /** Represents a get_resource_parameters_arguments. */
            class get_resource_parameters_arguments implements Iget_resource_parameters_arguments {

                /**
                 * Constructs a new get_resource_parameters_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.resources.Iget_resource_parameters_arguments);

                /**
                 * Creates a new get_resource_parameters_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_resource_parameters_arguments instance
                 */
                public static create(properties?: koinos.contracts.resources.Iget_resource_parameters_arguments): koinos.contracts.resources.get_resource_parameters_arguments;

                /**
                 * Encodes the specified get_resource_parameters_arguments message. Does not implicitly {@link koinos.contracts.resources.get_resource_parameters_arguments.verify|verify} messages.
                 * @param message get_resource_parameters_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.resources.Iget_resource_parameters_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_resource_parameters_arguments message, length delimited. Does not implicitly {@link koinos.contracts.resources.get_resource_parameters_arguments.verify|verify} messages.
                 * @param message get_resource_parameters_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.resources.Iget_resource_parameters_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_resource_parameters_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_resource_parameters_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.resources.get_resource_parameters_arguments;

                /**
                 * Decodes a get_resource_parameters_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_resource_parameters_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.resources.get_resource_parameters_arguments;

                /**
                 * Verifies a get_resource_parameters_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_resource_parameters_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_resource_parameters_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.resources.get_resource_parameters_arguments;

                /**
                 * Creates a plain object from a get_resource_parameters_arguments message. Also converts values to other types if specified.
                 * @param message get_resource_parameters_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.resources.get_resource_parameters_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_resource_parameters_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_resource_parameters_result. */
            interface Iget_resource_parameters_result {

                /** get_resource_parameters_result value */
                value?: (koinos.contracts.resources.Iresource_parameters|null);
            }

            /** Represents a get_resource_parameters_result. */
            class get_resource_parameters_result implements Iget_resource_parameters_result {

                /**
                 * Constructs a new get_resource_parameters_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.resources.Iget_resource_parameters_result);

                /** get_resource_parameters_result value. */
                public value?: (koinos.contracts.resources.Iresource_parameters|null);

                /**
                 * Creates a new get_resource_parameters_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_resource_parameters_result instance
                 */
                public static create(properties?: koinos.contracts.resources.Iget_resource_parameters_result): koinos.contracts.resources.get_resource_parameters_result;

                /**
                 * Encodes the specified get_resource_parameters_result message. Does not implicitly {@link koinos.contracts.resources.get_resource_parameters_result.verify|verify} messages.
                 * @param message get_resource_parameters_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.resources.Iget_resource_parameters_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_resource_parameters_result message, length delimited. Does not implicitly {@link koinos.contracts.resources.get_resource_parameters_result.verify|verify} messages.
                 * @param message get_resource_parameters_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.resources.Iget_resource_parameters_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_resource_parameters_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_resource_parameters_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.resources.get_resource_parameters_result;

                /**
                 * Decodes a get_resource_parameters_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_resource_parameters_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.resources.get_resource_parameters_result;

                /**
                 * Verifies a get_resource_parameters_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_resource_parameters_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_resource_parameters_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.resources.get_resource_parameters_result;

                /**
                 * Creates a plain object from a get_resource_parameters_result message. Also converts values to other types if specified.
                 * @param message get_resource_parameters_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.resources.get_resource_parameters_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_resource_parameters_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Namespace koin. */
        namespace koin {

            /** Properties of a mana_balance_object. */
            interface Imana_balance_object {

                /** mana_balance_object balance */
                balance?: (number|Long|null);

                /** mana_balance_object mana */
                mana?: (number|Long|null);

                /** mana_balance_object last_mana_update */
                last_mana_update?: (number|Long|null);
            }

            /** Represents a mana_balance_object. */
            class mana_balance_object implements Imana_balance_object {

                /**
                 * Constructs a new mana_balance_object.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.koin.Imana_balance_object);

                /** mana_balance_object balance. */
                public balance: (number|Long);

                /** mana_balance_object mana. */
                public mana: (number|Long);

                /** mana_balance_object last_mana_update. */
                public last_mana_update: (number|Long);

                /**
                 * Creates a new mana_balance_object instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns mana_balance_object instance
                 */
                public static create(properties?: koinos.contracts.koin.Imana_balance_object): koinos.contracts.koin.mana_balance_object;

                /**
                 * Encodes the specified mana_balance_object message. Does not implicitly {@link koinos.contracts.koin.mana_balance_object.verify|verify} messages.
                 * @param message mana_balance_object message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.koin.Imana_balance_object, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified mana_balance_object message, length delimited. Does not implicitly {@link koinos.contracts.koin.mana_balance_object.verify|verify} messages.
                 * @param message mana_balance_object message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.koin.Imana_balance_object, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a mana_balance_object message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns mana_balance_object
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.koin.mana_balance_object;

                /**
                 * Decodes a mana_balance_object message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns mana_balance_object
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.koin.mana_balance_object;

                /**
                 * Verifies a mana_balance_object message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a mana_balance_object message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns mana_balance_object
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.koin.mana_balance_object;

                /**
                 * Creates a plain object from a mana_balance_object message. Also converts values to other types if specified.
                 * @param message mana_balance_object
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.koin.mana_balance_object, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this mana_balance_object to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Namespace name_service. */
        namespace name_service {

            /** Properties of a name_record. */
            interface Iname_record {

                /** name_record name */
                name?: (string|null);
            }

            /** Represents a name_record. */
            class name_record implements Iname_record {

                /**
                 * Constructs a new name_record.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.name_service.Iname_record);

                /** name_record name. */
                public name: string;

                /**
                 * Creates a new name_record instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns name_record instance
                 */
                public static create(properties?: koinos.contracts.name_service.Iname_record): koinos.contracts.name_service.name_record;

                /**
                 * Encodes the specified name_record message. Does not implicitly {@link koinos.contracts.name_service.name_record.verify|verify} messages.
                 * @param message name_record message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.name_service.Iname_record, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified name_record message, length delimited. Does not implicitly {@link koinos.contracts.name_service.name_record.verify|verify} messages.
                 * @param message name_record message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.name_service.Iname_record, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a name_record message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns name_record
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.name_service.name_record;

                /**
                 * Decodes a name_record message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns name_record
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.name_service.name_record;

                /**
                 * Verifies a name_record message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a name_record message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns name_record
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.name_service.name_record;

                /**
                 * Creates a plain object from a name_record message. Also converts values to other types if specified.
                 * @param message name_record
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.name_service.name_record, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this name_record to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an address_record. */
            interface Iaddress_record {

                /** address_record address */
                address?: (Uint8Array|null);
            }

            /** Represents an address_record. */
            class address_record implements Iaddress_record {

                /**
                 * Constructs a new address_record.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.name_service.Iaddress_record);

                /** address_record address. */
                public address: Uint8Array;

                /**
                 * Creates a new address_record instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns address_record instance
                 */
                public static create(properties?: koinos.contracts.name_service.Iaddress_record): koinos.contracts.name_service.address_record;

                /**
                 * Encodes the specified address_record message. Does not implicitly {@link koinos.contracts.name_service.address_record.verify|verify} messages.
                 * @param message address_record message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.name_service.Iaddress_record, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified address_record message, length delimited. Does not implicitly {@link koinos.contracts.name_service.address_record.verify|verify} messages.
                 * @param message address_record message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.name_service.Iaddress_record, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an address_record message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns address_record
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.name_service.address_record;

                /**
                 * Decodes an address_record message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns address_record
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.name_service.address_record;

                /**
                 * Verifies an address_record message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an address_record message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns address_record
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.name_service.address_record;

                /**
                 * Creates a plain object from an address_record message. Also converts values to other types if specified.
                 * @param message address_record
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.name_service.address_record, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this address_record to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_address_arguments. */
            interface Iget_address_arguments {

                /** get_address_arguments name */
                name?: (string|null);
            }

            /** Represents a get_address_arguments. */
            class get_address_arguments implements Iget_address_arguments {

                /**
                 * Constructs a new get_address_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.name_service.Iget_address_arguments);

                /** get_address_arguments name. */
                public name: string;

                /**
                 * Creates a new get_address_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_address_arguments instance
                 */
                public static create(properties?: koinos.contracts.name_service.Iget_address_arguments): koinos.contracts.name_service.get_address_arguments;

                /**
                 * Encodes the specified get_address_arguments message. Does not implicitly {@link koinos.contracts.name_service.get_address_arguments.verify|verify} messages.
                 * @param message get_address_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.name_service.Iget_address_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_address_arguments message, length delimited. Does not implicitly {@link koinos.contracts.name_service.get_address_arguments.verify|verify} messages.
                 * @param message get_address_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.name_service.Iget_address_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_address_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_address_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.name_service.get_address_arguments;

                /**
                 * Decodes a get_address_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_address_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.name_service.get_address_arguments;

                /**
                 * Verifies a get_address_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_address_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_address_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.name_service.get_address_arguments;

                /**
                 * Creates a plain object from a get_address_arguments message. Also converts values to other types if specified.
                 * @param message get_address_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.name_service.get_address_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_address_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_address_result. */
            interface Iget_address_result {

                /** get_address_result value */
                value?: (koinos.contracts.name_service.Iaddress_record|null);
            }

            /** Represents a get_address_result. */
            class get_address_result implements Iget_address_result {

                /**
                 * Constructs a new get_address_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.name_service.Iget_address_result);

                /** get_address_result value. */
                public value?: (koinos.contracts.name_service.Iaddress_record|null);

                /**
                 * Creates a new get_address_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_address_result instance
                 */
                public static create(properties?: koinos.contracts.name_service.Iget_address_result): koinos.contracts.name_service.get_address_result;

                /**
                 * Encodes the specified get_address_result message. Does not implicitly {@link koinos.contracts.name_service.get_address_result.verify|verify} messages.
                 * @param message get_address_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.name_service.Iget_address_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_address_result message, length delimited. Does not implicitly {@link koinos.contracts.name_service.get_address_result.verify|verify} messages.
                 * @param message get_address_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.name_service.Iget_address_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_address_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_address_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.name_service.get_address_result;

                /**
                 * Decodes a get_address_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_address_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.name_service.get_address_result;

                /**
                 * Verifies a get_address_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_address_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_address_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.name_service.get_address_result;

                /**
                 * Creates a plain object from a get_address_result message. Also converts values to other types if specified.
                 * @param message get_address_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.name_service.get_address_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_address_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_name_arguments. */
            interface Iget_name_arguments {

                /** get_name_arguments address */
                address?: (Uint8Array|null);
            }

            /** Represents a get_name_arguments. */
            class get_name_arguments implements Iget_name_arguments {

                /**
                 * Constructs a new get_name_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.name_service.Iget_name_arguments);

                /** get_name_arguments address. */
                public address: Uint8Array;

                /**
                 * Creates a new get_name_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_name_arguments instance
                 */
                public static create(properties?: koinos.contracts.name_service.Iget_name_arguments): koinos.contracts.name_service.get_name_arguments;

                /**
                 * Encodes the specified get_name_arguments message. Does not implicitly {@link koinos.contracts.name_service.get_name_arguments.verify|verify} messages.
                 * @param message get_name_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.name_service.Iget_name_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_name_arguments message, length delimited. Does not implicitly {@link koinos.contracts.name_service.get_name_arguments.verify|verify} messages.
                 * @param message get_name_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.name_service.Iget_name_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_name_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_name_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.name_service.get_name_arguments;

                /**
                 * Decodes a get_name_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_name_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.name_service.get_name_arguments;

                /**
                 * Verifies a get_name_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_name_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_name_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.name_service.get_name_arguments;

                /**
                 * Creates a plain object from a get_name_arguments message. Also converts values to other types if specified.
                 * @param message get_name_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.name_service.get_name_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_name_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_name_result. */
            interface Iget_name_result {

                /** get_name_result value */
                value?: (koinos.contracts.name_service.Iname_record|null);
            }

            /** Represents a get_name_result. */
            class get_name_result implements Iget_name_result {

                /**
                 * Constructs a new get_name_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.name_service.Iget_name_result);

                /** get_name_result value. */
                public value?: (koinos.contracts.name_service.Iname_record|null);

                /**
                 * Creates a new get_name_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_name_result instance
                 */
                public static create(properties?: koinos.contracts.name_service.Iget_name_result): koinos.contracts.name_service.get_name_result;

                /**
                 * Encodes the specified get_name_result message. Does not implicitly {@link koinos.contracts.name_service.get_name_result.verify|verify} messages.
                 * @param message get_name_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.name_service.Iget_name_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_name_result message, length delimited. Does not implicitly {@link koinos.contracts.name_service.get_name_result.verify|verify} messages.
                 * @param message get_name_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.name_service.Iget_name_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_name_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_name_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.name_service.get_name_result;

                /**
                 * Decodes a get_name_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_name_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.name_service.get_name_result;

                /**
                 * Verifies a get_name_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_name_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_name_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.name_service.get_name_result;

                /**
                 * Creates a plain object from a get_name_result message. Also converts values to other types if specified.
                 * @param message get_name_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.name_service.get_name_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_name_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a set_record_arguments. */
            interface Iset_record_arguments {

                /** set_record_arguments name */
                name?: (string|null);

                /** set_record_arguments address */
                address?: (Uint8Array|null);
            }

            /** Represents a set_record_arguments. */
            class set_record_arguments implements Iset_record_arguments {

                /**
                 * Constructs a new set_record_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.name_service.Iset_record_arguments);

                /** set_record_arguments name. */
                public name: string;

                /** set_record_arguments address. */
                public address: Uint8Array;

                /**
                 * Creates a new set_record_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns set_record_arguments instance
                 */
                public static create(properties?: koinos.contracts.name_service.Iset_record_arguments): koinos.contracts.name_service.set_record_arguments;

                /**
                 * Encodes the specified set_record_arguments message. Does not implicitly {@link koinos.contracts.name_service.set_record_arguments.verify|verify} messages.
                 * @param message set_record_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.name_service.Iset_record_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified set_record_arguments message, length delimited. Does not implicitly {@link koinos.contracts.name_service.set_record_arguments.verify|verify} messages.
                 * @param message set_record_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.name_service.Iset_record_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a set_record_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns set_record_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.name_service.set_record_arguments;

                /**
                 * Decodes a set_record_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns set_record_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.name_service.set_record_arguments;

                /**
                 * Verifies a set_record_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a set_record_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns set_record_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.name_service.set_record_arguments;

                /**
                 * Creates a plain object from a set_record_arguments message. Also converts values to other types if specified.
                 * @param message set_record_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.name_service.set_record_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this set_record_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a set_record_result. */
            interface Iset_record_result {
            }

            /** Represents a set_record_result. */
            class set_record_result implements Iset_record_result {

                /**
                 * Constructs a new set_record_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.name_service.Iset_record_result);

                /**
                 * Creates a new set_record_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns set_record_result instance
                 */
                public static create(properties?: koinos.contracts.name_service.Iset_record_result): koinos.contracts.name_service.set_record_result;

                /**
                 * Encodes the specified set_record_result message. Does not implicitly {@link koinos.contracts.name_service.set_record_result.verify|verify} messages.
                 * @param message set_record_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.name_service.Iset_record_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified set_record_result message, length delimited. Does not implicitly {@link koinos.contracts.name_service.set_record_result.verify|verify} messages.
                 * @param message set_record_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.name_service.Iset_record_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a set_record_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns set_record_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.name_service.set_record_result;

                /**
                 * Decodes a set_record_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns set_record_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.name_service.set_record_result;

                /**
                 * Verifies a set_record_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a set_record_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns set_record_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.name_service.set_record_result;

                /**
                 * Creates a plain object from a set_record_result message. Also converts values to other types if specified.
                 * @param message set_record_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.name_service.set_record_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this set_record_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a record_update_event. */
            interface Irecord_update_event {

                /** record_update_event name */
                name?: (string|null);

                /** record_update_event address */
                address?: (Uint8Array|null);
            }

            /** Represents a record_update_event. */
            class record_update_event implements Irecord_update_event {

                /**
                 * Constructs a new record_update_event.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.name_service.Irecord_update_event);

                /** record_update_event name. */
                public name: string;

                /** record_update_event address. */
                public address: Uint8Array;

                /**
                 * Creates a new record_update_event instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns record_update_event instance
                 */
                public static create(properties?: koinos.contracts.name_service.Irecord_update_event): koinos.contracts.name_service.record_update_event;

                /**
                 * Encodes the specified record_update_event message. Does not implicitly {@link koinos.contracts.name_service.record_update_event.verify|verify} messages.
                 * @param message record_update_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.name_service.Irecord_update_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified record_update_event message, length delimited. Does not implicitly {@link koinos.contracts.name_service.record_update_event.verify|verify} messages.
                 * @param message record_update_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.name_service.Irecord_update_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a record_update_event message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns record_update_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.name_service.record_update_event;

                /**
                 * Decodes a record_update_event message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns record_update_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.name_service.record_update_event;

                /**
                 * Verifies a record_update_event message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a record_update_event message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns record_update_event
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.name_service.record_update_event;

                /**
                 * Creates a plain object from a record_update_event message. Also converts values to other types if specified.
                 * @param message record_update_event
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.name_service.record_update_event, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this record_update_event to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Namespace token. */
        namespace token {

            /** Properties of a name_arguments. */
            interface Iname_arguments {
            }

            /** Represents a name_arguments. */
            class name_arguments implements Iname_arguments {

                /**
                 * Constructs a new name_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.token.Iname_arguments);

                /**
                 * Creates a new name_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns name_arguments instance
                 */
                public static create(properties?: koinos.contracts.token.Iname_arguments): koinos.contracts.token.name_arguments;

                /**
                 * Encodes the specified name_arguments message. Does not implicitly {@link koinos.contracts.token.name_arguments.verify|verify} messages.
                 * @param message name_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.token.Iname_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified name_arguments message, length delimited. Does not implicitly {@link koinos.contracts.token.name_arguments.verify|verify} messages.
                 * @param message name_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.token.Iname_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a name_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns name_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.token.name_arguments;

                /**
                 * Decodes a name_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns name_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.token.name_arguments;

                /**
                 * Verifies a name_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a name_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns name_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.token.name_arguments;

                /**
                 * Creates a plain object from a name_arguments message. Also converts values to other types if specified.
                 * @param message name_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.token.name_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this name_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a name_result. */
            interface Iname_result {

                /** name_result value */
                value?: (string|null);
            }

            /** Represents a name_result. */
            class name_result implements Iname_result {

                /**
                 * Constructs a new name_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.token.Iname_result);

                /** name_result value. */
                public value: string;

                /**
                 * Creates a new name_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns name_result instance
                 */
                public static create(properties?: koinos.contracts.token.Iname_result): koinos.contracts.token.name_result;

                /**
                 * Encodes the specified name_result message. Does not implicitly {@link koinos.contracts.token.name_result.verify|verify} messages.
                 * @param message name_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.token.Iname_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified name_result message, length delimited. Does not implicitly {@link koinos.contracts.token.name_result.verify|verify} messages.
                 * @param message name_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.token.Iname_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a name_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns name_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.token.name_result;

                /**
                 * Decodes a name_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns name_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.token.name_result;

                /**
                 * Verifies a name_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a name_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns name_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.token.name_result;

                /**
                 * Creates a plain object from a name_result message. Also converts values to other types if specified.
                 * @param message name_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.token.name_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this name_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a symbol_arguments. */
            interface Isymbol_arguments {
            }

            /** Represents a symbol_arguments. */
            class symbol_arguments implements Isymbol_arguments {

                /**
                 * Constructs a new symbol_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.token.Isymbol_arguments);

                /**
                 * Creates a new symbol_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns symbol_arguments instance
                 */
                public static create(properties?: koinos.contracts.token.Isymbol_arguments): koinos.contracts.token.symbol_arguments;

                /**
                 * Encodes the specified symbol_arguments message. Does not implicitly {@link koinos.contracts.token.symbol_arguments.verify|verify} messages.
                 * @param message symbol_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.token.Isymbol_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified symbol_arguments message, length delimited. Does not implicitly {@link koinos.contracts.token.symbol_arguments.verify|verify} messages.
                 * @param message symbol_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.token.Isymbol_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a symbol_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns symbol_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.token.symbol_arguments;

                /**
                 * Decodes a symbol_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns symbol_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.token.symbol_arguments;

                /**
                 * Verifies a symbol_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a symbol_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns symbol_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.token.symbol_arguments;

                /**
                 * Creates a plain object from a symbol_arguments message. Also converts values to other types if specified.
                 * @param message symbol_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.token.symbol_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this symbol_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a symbol_result. */
            interface Isymbol_result {

                /** symbol_result value */
                value?: (string|null);
            }

            /** Represents a symbol_result. */
            class symbol_result implements Isymbol_result {

                /**
                 * Constructs a new symbol_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.token.Isymbol_result);

                /** symbol_result value. */
                public value: string;

                /**
                 * Creates a new symbol_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns symbol_result instance
                 */
                public static create(properties?: koinos.contracts.token.Isymbol_result): koinos.contracts.token.symbol_result;

                /**
                 * Encodes the specified symbol_result message. Does not implicitly {@link koinos.contracts.token.symbol_result.verify|verify} messages.
                 * @param message symbol_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.token.Isymbol_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified symbol_result message, length delimited. Does not implicitly {@link koinos.contracts.token.symbol_result.verify|verify} messages.
                 * @param message symbol_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.token.Isymbol_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a symbol_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns symbol_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.token.symbol_result;

                /**
                 * Decodes a symbol_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns symbol_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.token.symbol_result;

                /**
                 * Verifies a symbol_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a symbol_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns symbol_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.token.symbol_result;

                /**
                 * Creates a plain object from a symbol_result message. Also converts values to other types if specified.
                 * @param message symbol_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.token.symbol_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this symbol_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a decimals_arguments. */
            interface Idecimals_arguments {
            }

            /** Represents a decimals_arguments. */
            class decimals_arguments implements Idecimals_arguments {

                /**
                 * Constructs a new decimals_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.token.Idecimals_arguments);

                /**
                 * Creates a new decimals_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns decimals_arguments instance
                 */
                public static create(properties?: koinos.contracts.token.Idecimals_arguments): koinos.contracts.token.decimals_arguments;

                /**
                 * Encodes the specified decimals_arguments message. Does not implicitly {@link koinos.contracts.token.decimals_arguments.verify|verify} messages.
                 * @param message decimals_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.token.Idecimals_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified decimals_arguments message, length delimited. Does not implicitly {@link koinos.contracts.token.decimals_arguments.verify|verify} messages.
                 * @param message decimals_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.token.Idecimals_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a decimals_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns decimals_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.token.decimals_arguments;

                /**
                 * Decodes a decimals_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns decimals_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.token.decimals_arguments;

                /**
                 * Verifies a decimals_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a decimals_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns decimals_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.token.decimals_arguments;

                /**
                 * Creates a plain object from a decimals_arguments message. Also converts values to other types if specified.
                 * @param message decimals_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.token.decimals_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this decimals_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a decimals_result. */
            interface Idecimals_result {

                /** decimals_result value */
                value?: (number|null);
            }

            /** Represents a decimals_result. */
            class decimals_result implements Idecimals_result {

                /**
                 * Constructs a new decimals_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.token.Idecimals_result);

                /** decimals_result value. */
                public value: number;

                /**
                 * Creates a new decimals_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns decimals_result instance
                 */
                public static create(properties?: koinos.contracts.token.Idecimals_result): koinos.contracts.token.decimals_result;

                /**
                 * Encodes the specified decimals_result message. Does not implicitly {@link koinos.contracts.token.decimals_result.verify|verify} messages.
                 * @param message decimals_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.token.Idecimals_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified decimals_result message, length delimited. Does not implicitly {@link koinos.contracts.token.decimals_result.verify|verify} messages.
                 * @param message decimals_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.token.Idecimals_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a decimals_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns decimals_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.token.decimals_result;

                /**
                 * Decodes a decimals_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns decimals_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.token.decimals_result;

                /**
                 * Verifies a decimals_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a decimals_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns decimals_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.token.decimals_result;

                /**
                 * Creates a plain object from a decimals_result message. Also converts values to other types if specified.
                 * @param message decimals_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.token.decimals_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this decimals_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a total_supply_arguments. */
            interface Itotal_supply_arguments {
            }

            /** Represents a total_supply_arguments. */
            class total_supply_arguments implements Itotal_supply_arguments {

                /**
                 * Constructs a new total_supply_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.token.Itotal_supply_arguments);

                /**
                 * Creates a new total_supply_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns total_supply_arguments instance
                 */
                public static create(properties?: koinos.contracts.token.Itotal_supply_arguments): koinos.contracts.token.total_supply_arguments;

                /**
                 * Encodes the specified total_supply_arguments message. Does not implicitly {@link koinos.contracts.token.total_supply_arguments.verify|verify} messages.
                 * @param message total_supply_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.token.Itotal_supply_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified total_supply_arguments message, length delimited. Does not implicitly {@link koinos.contracts.token.total_supply_arguments.verify|verify} messages.
                 * @param message total_supply_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.token.Itotal_supply_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a total_supply_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns total_supply_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.token.total_supply_arguments;

                /**
                 * Decodes a total_supply_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns total_supply_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.token.total_supply_arguments;

                /**
                 * Verifies a total_supply_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a total_supply_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns total_supply_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.token.total_supply_arguments;

                /**
                 * Creates a plain object from a total_supply_arguments message. Also converts values to other types if specified.
                 * @param message total_supply_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.token.total_supply_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this total_supply_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a total_supply_result. */
            interface Itotal_supply_result {

                /** total_supply_result value */
                value?: (number|Long|null);
            }

            /** Represents a total_supply_result. */
            class total_supply_result implements Itotal_supply_result {

                /**
                 * Constructs a new total_supply_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.token.Itotal_supply_result);

                /** total_supply_result value. */
                public value: (number|Long);

                /**
                 * Creates a new total_supply_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns total_supply_result instance
                 */
                public static create(properties?: koinos.contracts.token.Itotal_supply_result): koinos.contracts.token.total_supply_result;

                /**
                 * Encodes the specified total_supply_result message. Does not implicitly {@link koinos.contracts.token.total_supply_result.verify|verify} messages.
                 * @param message total_supply_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.token.Itotal_supply_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified total_supply_result message, length delimited. Does not implicitly {@link koinos.contracts.token.total_supply_result.verify|verify} messages.
                 * @param message total_supply_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.token.Itotal_supply_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a total_supply_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns total_supply_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.token.total_supply_result;

                /**
                 * Decodes a total_supply_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns total_supply_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.token.total_supply_result;

                /**
                 * Verifies a total_supply_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a total_supply_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns total_supply_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.token.total_supply_result;

                /**
                 * Creates a plain object from a total_supply_result message. Also converts values to other types if specified.
                 * @param message total_supply_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.token.total_supply_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this total_supply_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a balance_of_arguments. */
            interface Ibalance_of_arguments {

                /** balance_of_arguments owner */
                owner?: (Uint8Array|null);
            }

            /** Represents a balance_of_arguments. */
            class balance_of_arguments implements Ibalance_of_arguments {

                /**
                 * Constructs a new balance_of_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.token.Ibalance_of_arguments);

                /** balance_of_arguments owner. */
                public owner: Uint8Array;

                /**
                 * Creates a new balance_of_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns balance_of_arguments instance
                 */
                public static create(properties?: koinos.contracts.token.Ibalance_of_arguments): koinos.contracts.token.balance_of_arguments;

                /**
                 * Encodes the specified balance_of_arguments message. Does not implicitly {@link koinos.contracts.token.balance_of_arguments.verify|verify} messages.
                 * @param message balance_of_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.token.Ibalance_of_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified balance_of_arguments message, length delimited. Does not implicitly {@link koinos.contracts.token.balance_of_arguments.verify|verify} messages.
                 * @param message balance_of_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.token.Ibalance_of_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a balance_of_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns balance_of_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.token.balance_of_arguments;

                /**
                 * Decodes a balance_of_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns balance_of_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.token.balance_of_arguments;

                /**
                 * Verifies a balance_of_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a balance_of_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns balance_of_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.token.balance_of_arguments;

                /**
                 * Creates a plain object from a balance_of_arguments message. Also converts values to other types if specified.
                 * @param message balance_of_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.token.balance_of_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this balance_of_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a balance_of_result. */
            interface Ibalance_of_result {

                /** balance_of_result value */
                value?: (number|Long|null);
            }

            /** Represents a balance_of_result. */
            class balance_of_result implements Ibalance_of_result {

                /**
                 * Constructs a new balance_of_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.token.Ibalance_of_result);

                /** balance_of_result value. */
                public value: (number|Long);

                /**
                 * Creates a new balance_of_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns balance_of_result instance
                 */
                public static create(properties?: koinos.contracts.token.Ibalance_of_result): koinos.contracts.token.balance_of_result;

                /**
                 * Encodes the specified balance_of_result message. Does not implicitly {@link koinos.contracts.token.balance_of_result.verify|verify} messages.
                 * @param message balance_of_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.token.Ibalance_of_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified balance_of_result message, length delimited. Does not implicitly {@link koinos.contracts.token.balance_of_result.verify|verify} messages.
                 * @param message balance_of_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.token.Ibalance_of_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a balance_of_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns balance_of_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.token.balance_of_result;

                /**
                 * Decodes a balance_of_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns balance_of_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.token.balance_of_result;

                /**
                 * Verifies a balance_of_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a balance_of_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns balance_of_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.token.balance_of_result;

                /**
                 * Creates a plain object from a balance_of_result message. Also converts values to other types if specified.
                 * @param message balance_of_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.token.balance_of_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this balance_of_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a transfer_arguments. */
            interface Itransfer_arguments {

                /** transfer_arguments from */
                from?: (Uint8Array|null);

                /** transfer_arguments to */
                to?: (Uint8Array|null);

                /** transfer_arguments value */
                value?: (number|Long|null);
            }

            /** Represents a transfer_arguments. */
            class transfer_arguments implements Itransfer_arguments {

                /**
                 * Constructs a new transfer_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.token.Itransfer_arguments);

                /** transfer_arguments from. */
                public from: Uint8Array;

                /** transfer_arguments to. */
                public to: Uint8Array;

                /** transfer_arguments value. */
                public value: (number|Long);

                /**
                 * Creates a new transfer_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns transfer_arguments instance
                 */
                public static create(properties?: koinos.contracts.token.Itransfer_arguments): koinos.contracts.token.transfer_arguments;

                /**
                 * Encodes the specified transfer_arguments message. Does not implicitly {@link koinos.contracts.token.transfer_arguments.verify|verify} messages.
                 * @param message transfer_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.token.Itransfer_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified transfer_arguments message, length delimited. Does not implicitly {@link koinos.contracts.token.transfer_arguments.verify|verify} messages.
                 * @param message transfer_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.token.Itransfer_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a transfer_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns transfer_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.token.transfer_arguments;

                /**
                 * Decodes a transfer_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns transfer_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.token.transfer_arguments;

                /**
                 * Verifies a transfer_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a transfer_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns transfer_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.token.transfer_arguments;

                /**
                 * Creates a plain object from a transfer_arguments message. Also converts values to other types if specified.
                 * @param message transfer_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.token.transfer_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this transfer_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a transfer_result. */
            interface Itransfer_result {
            }

            /** Represents a transfer_result. */
            class transfer_result implements Itransfer_result {

                /**
                 * Constructs a new transfer_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.token.Itransfer_result);

                /**
                 * Creates a new transfer_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns transfer_result instance
                 */
                public static create(properties?: koinos.contracts.token.Itransfer_result): koinos.contracts.token.transfer_result;

                /**
                 * Encodes the specified transfer_result message. Does not implicitly {@link koinos.contracts.token.transfer_result.verify|verify} messages.
                 * @param message transfer_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.token.Itransfer_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified transfer_result message, length delimited. Does not implicitly {@link koinos.contracts.token.transfer_result.verify|verify} messages.
                 * @param message transfer_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.token.Itransfer_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a transfer_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns transfer_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.token.transfer_result;

                /**
                 * Decodes a transfer_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns transfer_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.token.transfer_result;

                /**
                 * Verifies a transfer_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a transfer_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns transfer_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.token.transfer_result;

                /**
                 * Creates a plain object from a transfer_result message. Also converts values to other types if specified.
                 * @param message transfer_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.token.transfer_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this transfer_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a mint_arguments. */
            interface Imint_arguments {

                /** mint_arguments to */
                to?: (Uint8Array|null);

                /** mint_arguments value */
                value?: (number|Long|null);
            }

            /** Represents a mint_arguments. */
            class mint_arguments implements Imint_arguments {

                /**
                 * Constructs a new mint_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.token.Imint_arguments);

                /** mint_arguments to. */
                public to: Uint8Array;

                /** mint_arguments value. */
                public value: (number|Long);

                /**
                 * Creates a new mint_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns mint_arguments instance
                 */
                public static create(properties?: koinos.contracts.token.Imint_arguments): koinos.contracts.token.mint_arguments;

                /**
                 * Encodes the specified mint_arguments message. Does not implicitly {@link koinos.contracts.token.mint_arguments.verify|verify} messages.
                 * @param message mint_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.token.Imint_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified mint_arguments message, length delimited. Does not implicitly {@link koinos.contracts.token.mint_arguments.verify|verify} messages.
                 * @param message mint_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.token.Imint_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a mint_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns mint_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.token.mint_arguments;

                /**
                 * Decodes a mint_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns mint_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.token.mint_arguments;

                /**
                 * Verifies a mint_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a mint_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns mint_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.token.mint_arguments;

                /**
                 * Creates a plain object from a mint_arguments message. Also converts values to other types if specified.
                 * @param message mint_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.token.mint_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this mint_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a mint_result. */
            interface Imint_result {
            }

            /** Represents a mint_result. */
            class mint_result implements Imint_result {

                /**
                 * Constructs a new mint_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.token.Imint_result);

                /**
                 * Creates a new mint_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns mint_result instance
                 */
                public static create(properties?: koinos.contracts.token.Imint_result): koinos.contracts.token.mint_result;

                /**
                 * Encodes the specified mint_result message. Does not implicitly {@link koinos.contracts.token.mint_result.verify|verify} messages.
                 * @param message mint_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.token.Imint_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified mint_result message, length delimited. Does not implicitly {@link koinos.contracts.token.mint_result.verify|verify} messages.
                 * @param message mint_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.token.Imint_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a mint_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns mint_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.token.mint_result;

                /**
                 * Decodes a mint_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns mint_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.token.mint_result;

                /**
                 * Verifies a mint_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a mint_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns mint_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.token.mint_result;

                /**
                 * Creates a plain object from a mint_result message. Also converts values to other types if specified.
                 * @param message mint_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.token.mint_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this mint_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a burn_arguments. */
            interface Iburn_arguments {

                /** burn_arguments from */
                from?: (Uint8Array|null);

                /** burn_arguments value */
                value?: (number|Long|null);
            }

            /** Represents a burn_arguments. */
            class burn_arguments implements Iburn_arguments {

                /**
                 * Constructs a new burn_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.token.Iburn_arguments);

                /** burn_arguments from. */
                public from: Uint8Array;

                /** burn_arguments value. */
                public value: (number|Long);

                /**
                 * Creates a new burn_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns burn_arguments instance
                 */
                public static create(properties?: koinos.contracts.token.Iburn_arguments): koinos.contracts.token.burn_arguments;

                /**
                 * Encodes the specified burn_arguments message. Does not implicitly {@link koinos.contracts.token.burn_arguments.verify|verify} messages.
                 * @param message burn_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.token.Iburn_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified burn_arguments message, length delimited. Does not implicitly {@link koinos.contracts.token.burn_arguments.verify|verify} messages.
                 * @param message burn_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.token.Iburn_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a burn_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns burn_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.token.burn_arguments;

                /**
                 * Decodes a burn_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns burn_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.token.burn_arguments;

                /**
                 * Verifies a burn_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a burn_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns burn_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.token.burn_arguments;

                /**
                 * Creates a plain object from a burn_arguments message. Also converts values to other types if specified.
                 * @param message burn_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.token.burn_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this burn_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a burn_result. */
            interface Iburn_result {
            }

            /** Represents a burn_result. */
            class burn_result implements Iburn_result {

                /**
                 * Constructs a new burn_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.token.Iburn_result);

                /**
                 * Creates a new burn_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns burn_result instance
                 */
                public static create(properties?: koinos.contracts.token.Iburn_result): koinos.contracts.token.burn_result;

                /**
                 * Encodes the specified burn_result message. Does not implicitly {@link koinos.contracts.token.burn_result.verify|verify} messages.
                 * @param message burn_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.token.Iburn_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified burn_result message, length delimited. Does not implicitly {@link koinos.contracts.token.burn_result.verify|verify} messages.
                 * @param message burn_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.token.Iburn_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a burn_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns burn_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.token.burn_result;

                /**
                 * Decodes a burn_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns burn_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.token.burn_result;

                /**
                 * Verifies a burn_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a burn_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns burn_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.token.burn_result;

                /**
                 * Creates a plain object from a burn_result message. Also converts values to other types if specified.
                 * @param message burn_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.token.burn_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this burn_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a balance_object. */
            interface Ibalance_object {

                /** balance_object value */
                value?: (number|Long|null);
            }

            /** Represents a balance_object. */
            class balance_object implements Ibalance_object {

                /**
                 * Constructs a new balance_object.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.token.Ibalance_object);

                /** balance_object value. */
                public value: (number|Long);

                /**
                 * Creates a new balance_object instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns balance_object instance
                 */
                public static create(properties?: koinos.contracts.token.Ibalance_object): koinos.contracts.token.balance_object;

                /**
                 * Encodes the specified balance_object message. Does not implicitly {@link koinos.contracts.token.balance_object.verify|verify} messages.
                 * @param message balance_object message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.token.Ibalance_object, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified balance_object message, length delimited. Does not implicitly {@link koinos.contracts.token.balance_object.verify|verify} messages.
                 * @param message balance_object message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.token.Ibalance_object, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a balance_object message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns balance_object
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.token.balance_object;

                /**
                 * Decodes a balance_object message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns balance_object
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.token.balance_object;

                /**
                 * Verifies a balance_object message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a balance_object message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns balance_object
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.token.balance_object;

                /**
                 * Creates a plain object from a balance_object message. Also converts values to other types if specified.
                 * @param message balance_object
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.token.balance_object, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this balance_object to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a burn_event. */
            interface Iburn_event {

                /** burn_event from */
                from?: (Uint8Array|null);

                /** burn_event value */
                value?: (number|Long|null);
            }

            /** Represents a burn_event. */
            class burn_event implements Iburn_event {

                /**
                 * Constructs a new burn_event.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.token.Iburn_event);

                /** burn_event from. */
                public from: Uint8Array;

                /** burn_event value. */
                public value: (number|Long);

                /**
                 * Creates a new burn_event instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns burn_event instance
                 */
                public static create(properties?: koinos.contracts.token.Iburn_event): koinos.contracts.token.burn_event;

                /**
                 * Encodes the specified burn_event message. Does not implicitly {@link koinos.contracts.token.burn_event.verify|verify} messages.
                 * @param message burn_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.token.Iburn_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified burn_event message, length delimited. Does not implicitly {@link koinos.contracts.token.burn_event.verify|verify} messages.
                 * @param message burn_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.token.Iburn_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a burn_event message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns burn_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.token.burn_event;

                /**
                 * Decodes a burn_event message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns burn_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.token.burn_event;

                /**
                 * Verifies a burn_event message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a burn_event message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns burn_event
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.token.burn_event;

                /**
                 * Creates a plain object from a burn_event message. Also converts values to other types if specified.
                 * @param message burn_event
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.token.burn_event, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this burn_event to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a mint_event. */
            interface Imint_event {

                /** mint_event to */
                to?: (Uint8Array|null);

                /** mint_event value */
                value?: (number|Long|null);
            }

            /** Represents a mint_event. */
            class mint_event implements Imint_event {

                /**
                 * Constructs a new mint_event.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.token.Imint_event);

                /** mint_event to. */
                public to: Uint8Array;

                /** mint_event value. */
                public value: (number|Long);

                /**
                 * Creates a new mint_event instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns mint_event instance
                 */
                public static create(properties?: koinos.contracts.token.Imint_event): koinos.contracts.token.mint_event;

                /**
                 * Encodes the specified mint_event message. Does not implicitly {@link koinos.contracts.token.mint_event.verify|verify} messages.
                 * @param message mint_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.token.Imint_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified mint_event message, length delimited. Does not implicitly {@link koinos.contracts.token.mint_event.verify|verify} messages.
                 * @param message mint_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.token.Imint_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a mint_event message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns mint_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.token.mint_event;

                /**
                 * Decodes a mint_event message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns mint_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.token.mint_event;

                /**
                 * Verifies a mint_event message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a mint_event message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns mint_event
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.token.mint_event;

                /**
                 * Creates a plain object from a mint_event message. Also converts values to other types if specified.
                 * @param message mint_event
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.token.mint_event, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this mint_event to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a transfer_event. */
            interface Itransfer_event {

                /** transfer_event from */
                from?: (Uint8Array|null);

                /** transfer_event to */
                to?: (Uint8Array|null);

                /** transfer_event value */
                value?: (number|Long|null);
            }

            /** Represents a transfer_event. */
            class transfer_event implements Itransfer_event {

                /**
                 * Constructs a new transfer_event.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.token.Itransfer_event);

                /** transfer_event from. */
                public from: Uint8Array;

                /** transfer_event to. */
                public to: Uint8Array;

                /** transfer_event value. */
                public value: (number|Long);

                /**
                 * Creates a new transfer_event instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns transfer_event instance
                 */
                public static create(properties?: koinos.contracts.token.Itransfer_event): koinos.contracts.token.transfer_event;

                /**
                 * Encodes the specified transfer_event message. Does not implicitly {@link koinos.contracts.token.transfer_event.verify|verify} messages.
                 * @param message transfer_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.token.Itransfer_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified transfer_event message, length delimited. Does not implicitly {@link koinos.contracts.token.transfer_event.verify|verify} messages.
                 * @param message transfer_event message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.token.Itransfer_event, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a transfer_event message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns transfer_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.token.transfer_event;

                /**
                 * Decodes a transfer_event message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns transfer_event
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.token.transfer_event;

                /**
                 * Verifies a transfer_event message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a transfer_event message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns transfer_event
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.token.transfer_event;

                /**
                 * Creates a plain object from a transfer_event message. Also converts values to other types if specified.
                 * @param message transfer_event
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.token.transfer_event, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this transfer_event to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Namespace pow. */
        namespace pow {

            /** Properties of a difficulty_metadata. */
            interface Idifficulty_metadata {

                /** difficulty_metadata target */
                target?: (Uint8Array|null);

                /** difficulty_metadata last_block_time */
                last_block_time?: (number|Long|null);

                /** difficulty_metadata difficulty */
                difficulty?: (Uint8Array|null);

                /** difficulty_metadata target_block_interval */
                target_block_interval?: (number|Long|null);
            }

            /** Represents a difficulty_metadata. */
            class difficulty_metadata implements Idifficulty_metadata {

                /**
                 * Constructs a new difficulty_metadata.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.pow.Idifficulty_metadata);

                /** difficulty_metadata target. */
                public target: Uint8Array;

                /** difficulty_metadata last_block_time. */
                public last_block_time: (number|Long);

                /** difficulty_metadata difficulty. */
                public difficulty: Uint8Array;

                /** difficulty_metadata target_block_interval. */
                public target_block_interval: (number|Long);

                /**
                 * Creates a new difficulty_metadata instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns difficulty_metadata instance
                 */
                public static create(properties?: koinos.contracts.pow.Idifficulty_metadata): koinos.contracts.pow.difficulty_metadata;

                /**
                 * Encodes the specified difficulty_metadata message. Does not implicitly {@link koinos.contracts.pow.difficulty_metadata.verify|verify} messages.
                 * @param message difficulty_metadata message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.pow.Idifficulty_metadata, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified difficulty_metadata message, length delimited. Does not implicitly {@link koinos.contracts.pow.difficulty_metadata.verify|verify} messages.
                 * @param message difficulty_metadata message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.pow.Idifficulty_metadata, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a difficulty_metadata message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns difficulty_metadata
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.pow.difficulty_metadata;

                /**
                 * Decodes a difficulty_metadata message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns difficulty_metadata
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.pow.difficulty_metadata;

                /**
                 * Verifies a difficulty_metadata message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a difficulty_metadata message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns difficulty_metadata
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.pow.difficulty_metadata;

                /**
                 * Creates a plain object from a difficulty_metadata message. Also converts values to other types if specified.
                 * @param message difficulty_metadata
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.pow.difficulty_metadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this difficulty_metadata to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_difficulty_metadata_arguments. */
            interface Iget_difficulty_metadata_arguments {
            }

            /** Represents a get_difficulty_metadata_arguments. */
            class get_difficulty_metadata_arguments implements Iget_difficulty_metadata_arguments {

                /**
                 * Constructs a new get_difficulty_metadata_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.pow.Iget_difficulty_metadata_arguments);

                /**
                 * Creates a new get_difficulty_metadata_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_difficulty_metadata_arguments instance
                 */
                public static create(properties?: koinos.contracts.pow.Iget_difficulty_metadata_arguments): koinos.contracts.pow.get_difficulty_metadata_arguments;

                /**
                 * Encodes the specified get_difficulty_metadata_arguments message. Does not implicitly {@link koinos.contracts.pow.get_difficulty_metadata_arguments.verify|verify} messages.
                 * @param message get_difficulty_metadata_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.pow.Iget_difficulty_metadata_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_difficulty_metadata_arguments message, length delimited. Does not implicitly {@link koinos.contracts.pow.get_difficulty_metadata_arguments.verify|verify} messages.
                 * @param message get_difficulty_metadata_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.pow.Iget_difficulty_metadata_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_difficulty_metadata_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_difficulty_metadata_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.pow.get_difficulty_metadata_arguments;

                /**
                 * Decodes a get_difficulty_metadata_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_difficulty_metadata_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.pow.get_difficulty_metadata_arguments;

                /**
                 * Verifies a get_difficulty_metadata_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_difficulty_metadata_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_difficulty_metadata_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.pow.get_difficulty_metadata_arguments;

                /**
                 * Creates a plain object from a get_difficulty_metadata_arguments message. Also converts values to other types if specified.
                 * @param message get_difficulty_metadata_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.pow.get_difficulty_metadata_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_difficulty_metadata_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_difficulty_metadata_result. */
            interface Iget_difficulty_metadata_result {

                /** get_difficulty_metadata_result value */
                value?: (koinos.contracts.pow.Idifficulty_metadata|null);
            }

            /** Represents a get_difficulty_metadata_result. */
            class get_difficulty_metadata_result implements Iget_difficulty_metadata_result {

                /**
                 * Constructs a new get_difficulty_metadata_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.pow.Iget_difficulty_metadata_result);

                /** get_difficulty_metadata_result value. */
                public value?: (koinos.contracts.pow.Idifficulty_metadata|null);

                /**
                 * Creates a new get_difficulty_metadata_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_difficulty_metadata_result instance
                 */
                public static create(properties?: koinos.contracts.pow.Iget_difficulty_metadata_result): koinos.contracts.pow.get_difficulty_metadata_result;

                /**
                 * Encodes the specified get_difficulty_metadata_result message. Does not implicitly {@link koinos.contracts.pow.get_difficulty_metadata_result.verify|verify} messages.
                 * @param message get_difficulty_metadata_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.pow.Iget_difficulty_metadata_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_difficulty_metadata_result message, length delimited. Does not implicitly {@link koinos.contracts.pow.get_difficulty_metadata_result.verify|verify} messages.
                 * @param message get_difficulty_metadata_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.pow.Iget_difficulty_metadata_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_difficulty_metadata_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_difficulty_metadata_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.pow.get_difficulty_metadata_result;

                /**
                 * Decodes a get_difficulty_metadata_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_difficulty_metadata_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.pow.get_difficulty_metadata_result;

                /**
                 * Verifies a get_difficulty_metadata_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_difficulty_metadata_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_difficulty_metadata_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.pow.get_difficulty_metadata_result;

                /**
                 * Creates a plain object from a get_difficulty_metadata_result message. Also converts values to other types if specified.
                 * @param message get_difficulty_metadata_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.pow.get_difficulty_metadata_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_difficulty_metadata_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a pow_signature_data. */
            interface Ipow_signature_data {

                /** pow_signature_data nonce */
                nonce?: (Uint8Array|null);

                /** pow_signature_data recoverable_signature */
                recoverable_signature?: (Uint8Array|null);
            }

            /** Represents a pow_signature_data. */
            class pow_signature_data implements Ipow_signature_data {

                /**
                 * Constructs a new pow_signature_data.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.pow.Ipow_signature_data);

                /** pow_signature_data nonce. */
                public nonce: Uint8Array;

                /** pow_signature_data recoverable_signature. */
                public recoverable_signature: Uint8Array;

                /**
                 * Creates a new pow_signature_data instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns pow_signature_data instance
                 */
                public static create(properties?: koinos.contracts.pow.Ipow_signature_data): koinos.contracts.pow.pow_signature_data;

                /**
                 * Encodes the specified pow_signature_data message. Does not implicitly {@link koinos.contracts.pow.pow_signature_data.verify|verify} messages.
                 * @param message pow_signature_data message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.pow.Ipow_signature_data, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified pow_signature_data message, length delimited. Does not implicitly {@link koinos.contracts.pow.pow_signature_data.verify|verify} messages.
                 * @param message pow_signature_data message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.pow.Ipow_signature_data, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a pow_signature_data message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns pow_signature_data
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.pow.pow_signature_data;

                /**
                 * Decodes a pow_signature_data message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns pow_signature_data
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.pow.pow_signature_data;

                /**
                 * Verifies a pow_signature_data message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a pow_signature_data message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns pow_signature_data
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.pow.pow_signature_data;

                /**
                 * Creates a plain object from a pow_signature_data message. Also converts values to other types if specified.
                 * @param message pow_signature_data
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.pow.pow_signature_data, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this pow_signature_data to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Namespace vhp. */
        namespace vhp {

            /** Properties of an effective_balance_of_arguments. */
            interface Ieffective_balance_of_arguments {

                /** effective_balance_of_arguments owner */
                owner?: (Uint8Array|null);
            }

            /** Represents an effective_balance_of_arguments. */
            class effective_balance_of_arguments implements Ieffective_balance_of_arguments {

                /**
                 * Constructs a new effective_balance_of_arguments.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.vhp.Ieffective_balance_of_arguments);

                /** effective_balance_of_arguments owner. */
                public owner: Uint8Array;

                /**
                 * Creates a new effective_balance_of_arguments instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns effective_balance_of_arguments instance
                 */
                public static create(properties?: koinos.contracts.vhp.Ieffective_balance_of_arguments): koinos.contracts.vhp.effective_balance_of_arguments;

                /**
                 * Encodes the specified effective_balance_of_arguments message. Does not implicitly {@link koinos.contracts.vhp.effective_balance_of_arguments.verify|verify} messages.
                 * @param message effective_balance_of_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.vhp.Ieffective_balance_of_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified effective_balance_of_arguments message, length delimited. Does not implicitly {@link koinos.contracts.vhp.effective_balance_of_arguments.verify|verify} messages.
                 * @param message effective_balance_of_arguments message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.vhp.Ieffective_balance_of_arguments, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an effective_balance_of_arguments message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns effective_balance_of_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.vhp.effective_balance_of_arguments;

                /**
                 * Decodes an effective_balance_of_arguments message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns effective_balance_of_arguments
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.vhp.effective_balance_of_arguments;

                /**
                 * Verifies an effective_balance_of_arguments message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an effective_balance_of_arguments message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns effective_balance_of_arguments
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.vhp.effective_balance_of_arguments;

                /**
                 * Creates a plain object from an effective_balance_of_arguments message. Also converts values to other types if specified.
                 * @param message effective_balance_of_arguments
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.vhp.effective_balance_of_arguments, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this effective_balance_of_arguments to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an effective_balance_of_result. */
            interface Ieffective_balance_of_result {

                /** effective_balance_of_result value */
                value?: (number|Long|null);
            }

            /** Represents an effective_balance_of_result. */
            class effective_balance_of_result implements Ieffective_balance_of_result {

                /**
                 * Constructs a new effective_balance_of_result.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.vhp.Ieffective_balance_of_result);

                /** effective_balance_of_result value. */
                public value: (number|Long);

                /**
                 * Creates a new effective_balance_of_result instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns effective_balance_of_result instance
                 */
                public static create(properties?: koinos.contracts.vhp.Ieffective_balance_of_result): koinos.contracts.vhp.effective_balance_of_result;

                /**
                 * Encodes the specified effective_balance_of_result message. Does not implicitly {@link koinos.contracts.vhp.effective_balance_of_result.verify|verify} messages.
                 * @param message effective_balance_of_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.vhp.Ieffective_balance_of_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified effective_balance_of_result message, length delimited. Does not implicitly {@link koinos.contracts.vhp.effective_balance_of_result.verify|verify} messages.
                 * @param message effective_balance_of_result message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.vhp.Ieffective_balance_of_result, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an effective_balance_of_result message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns effective_balance_of_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.vhp.effective_balance_of_result;

                /**
                 * Decodes an effective_balance_of_result message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns effective_balance_of_result
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.vhp.effective_balance_of_result;

                /**
                 * Verifies an effective_balance_of_result message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an effective_balance_of_result message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns effective_balance_of_result
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.vhp.effective_balance_of_result;

                /**
                 * Creates a plain object from an effective_balance_of_result message. Also converts values to other types if specified.
                 * @param message effective_balance_of_result
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.vhp.effective_balance_of_result, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this effective_balance_of_result to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a balance_entry. */
            interface Ibalance_entry {

                /** balance_entry block_height */
                block_height?: (number|Long|null);

                /** balance_entry balance */
                balance?: (number|Long|null);
            }

            /** Represents a balance_entry. */
            class balance_entry implements Ibalance_entry {

                /**
                 * Constructs a new balance_entry.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.vhp.Ibalance_entry);

                /** balance_entry block_height. */
                public block_height: (number|Long);

                /** balance_entry balance. */
                public balance: (number|Long);

                /**
                 * Creates a new balance_entry instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns balance_entry instance
                 */
                public static create(properties?: koinos.contracts.vhp.Ibalance_entry): koinos.contracts.vhp.balance_entry;

                /**
                 * Encodes the specified balance_entry message. Does not implicitly {@link koinos.contracts.vhp.balance_entry.verify|verify} messages.
                 * @param message balance_entry message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.vhp.Ibalance_entry, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified balance_entry message, length delimited. Does not implicitly {@link koinos.contracts.vhp.balance_entry.verify|verify} messages.
                 * @param message balance_entry message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.vhp.Ibalance_entry, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a balance_entry message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns balance_entry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.vhp.balance_entry;

                /**
                 * Decodes a balance_entry message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns balance_entry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.vhp.balance_entry;

                /**
                 * Verifies a balance_entry message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a balance_entry message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns balance_entry
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.vhp.balance_entry;

                /**
                 * Creates a plain object from a balance_entry message. Also converts values to other types if specified.
                 * @param message balance_entry
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.vhp.balance_entry, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this balance_entry to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an effective_balance_object. */
            interface Ieffective_balance_object {

                /** effective_balance_object current_balance */
                current_balance?: (number|Long|null);

                /** effective_balance_object past_balances */
                past_balances?: (koinos.contracts.vhp.Ibalance_entry[]|null);
            }

            /** Represents an effective_balance_object. */
            class effective_balance_object implements Ieffective_balance_object {

                /**
                 * Constructs a new effective_balance_object.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.contracts.vhp.Ieffective_balance_object);

                /** effective_balance_object current_balance. */
                public current_balance: (number|Long);

                /** effective_balance_object past_balances. */
                public past_balances: koinos.contracts.vhp.Ibalance_entry[];

                /**
                 * Creates a new effective_balance_object instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns effective_balance_object instance
                 */
                public static create(properties?: koinos.contracts.vhp.Ieffective_balance_object): koinos.contracts.vhp.effective_balance_object;

                /**
                 * Encodes the specified effective_balance_object message. Does not implicitly {@link koinos.contracts.vhp.effective_balance_object.verify|verify} messages.
                 * @param message effective_balance_object message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.contracts.vhp.Ieffective_balance_object, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified effective_balance_object message, length delimited. Does not implicitly {@link koinos.contracts.vhp.effective_balance_object.verify|verify} messages.
                 * @param message effective_balance_object message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.contracts.vhp.Ieffective_balance_object, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an effective_balance_object message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns effective_balance_object
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contracts.vhp.effective_balance_object;

                /**
                 * Decodes an effective_balance_object message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns effective_balance_object
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contracts.vhp.effective_balance_object;

                /**
                 * Verifies an effective_balance_object message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an effective_balance_object message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns effective_balance_object
                 */
                public static fromObject(object: { [k: string]: any }): koinos.contracts.vhp.effective_balance_object;

                /**
                 * Creates a plain object from an effective_balance_object message. Also converts values to other types if specified.
                 * @param message effective_balance_object
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.contracts.vhp.effective_balance_object, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this effective_balance_object to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Properties of a block_topology. */
    interface Iblock_topology {

        /** block_topology id */
        id?: (Uint8Array|null);

        /** block_topology height */
        height?: (number|Long|null);

        /** block_topology previous */
        previous?: (Uint8Array|null);
    }

    /** Represents a block_topology. */
    class block_topology implements Iblock_topology {

        /**
         * Constructs a new block_topology.
         * @param [properties] Properties to set
         */
        constructor(properties?: koinos.Iblock_topology);

        /** block_topology id. */
        public id: Uint8Array;

        /** block_topology height. */
        public height: (number|Long);

        /** block_topology previous. */
        public previous: Uint8Array;

        /**
         * Creates a new block_topology instance using the specified properties.
         * @param [properties] Properties to set
         * @returns block_topology instance
         */
        public static create(properties?: koinos.Iblock_topology): koinos.block_topology;

        /**
         * Encodes the specified block_topology message. Does not implicitly {@link koinos.block_topology.verify|verify} messages.
         * @param message block_topology message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: koinos.Iblock_topology, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified block_topology message, length delimited. Does not implicitly {@link koinos.block_topology.verify|verify} messages.
         * @param message block_topology message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: koinos.Iblock_topology, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a block_topology message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns block_topology
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.block_topology;

        /**
         * Decodes a block_topology message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns block_topology
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.block_topology;

        /**
         * Verifies a block_topology message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a block_topology message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns block_topology
         */
        public static fromObject(object: { [k: string]: any }): koinos.block_topology;

        /**
         * Creates a plain object from a block_topology message. Also converts values to other types if specified.
         * @param message block_topology
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: koinos.block_topology, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this block_topology to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Namespace contract_meta_store. */
    namespace contract_meta_store {

        /** Properties of a contract_meta_item. */
        interface Icontract_meta_item {

            /** contract_meta_item abi */
            abi?: (string|null);
        }

        /** Represents a contract_meta_item. */
        class contract_meta_item implements Icontract_meta_item {

            /**
             * Constructs a new contract_meta_item.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.contract_meta_store.Icontract_meta_item);

            /** contract_meta_item abi. */
            public abi: string;

            /**
             * Creates a new contract_meta_item instance using the specified properties.
             * @param [properties] Properties to set
             * @returns contract_meta_item instance
             */
            public static create(properties?: koinos.contract_meta_store.Icontract_meta_item): koinos.contract_meta_store.contract_meta_item;

            /**
             * Encodes the specified contract_meta_item message. Does not implicitly {@link koinos.contract_meta_store.contract_meta_item.verify|verify} messages.
             * @param message contract_meta_item message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.contract_meta_store.Icontract_meta_item, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified contract_meta_item message, length delimited. Does not implicitly {@link koinos.contract_meta_store.contract_meta_item.verify|verify} messages.
             * @param message contract_meta_item message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.contract_meta_store.Icontract_meta_item, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a contract_meta_item message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns contract_meta_item
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.contract_meta_store.contract_meta_item;

            /**
             * Decodes a contract_meta_item message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns contract_meta_item
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.contract_meta_store.contract_meta_item;

            /**
             * Verifies a contract_meta_item message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a contract_meta_item message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns contract_meta_item
             */
            public static fromObject(object: { [k: string]: any }): koinos.contract_meta_store.contract_meta_item;

            /**
             * Creates a plain object from a contract_meta_item message. Also converts values to other types if specified.
             * @param message contract_meta_item
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.contract_meta_store.contract_meta_item, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this contract_meta_item to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Namespace protocol. */
    namespace protocol {

        /** Properties of an object_space. */
        interface Iobject_space {

            /** object_space system */
            system?: (boolean|null);

            /** object_space zone */
            zone?: (Uint8Array|null);

            /** object_space id */
            id?: (number|null);
        }

        /** Represents an object_space. */
        class object_space implements Iobject_space {

            /**
             * Constructs a new object_space.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.protocol.Iobject_space);

            /** object_space system. */
            public system: boolean;

            /** object_space zone. */
            public zone: Uint8Array;

            /** object_space id. */
            public id: number;

            /**
             * Creates a new object_space instance using the specified properties.
             * @param [properties] Properties to set
             * @returns object_space instance
             */
            public static create(properties?: koinos.protocol.Iobject_space): koinos.protocol.object_space;

            /**
             * Encodes the specified object_space message. Does not implicitly {@link koinos.protocol.object_space.verify|verify} messages.
             * @param message object_space message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.protocol.Iobject_space, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified object_space message, length delimited. Does not implicitly {@link koinos.protocol.object_space.verify|verify} messages.
             * @param message object_space message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.protocol.Iobject_space, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an object_space message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns object_space
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.protocol.object_space;

            /**
             * Decodes an object_space message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns object_space
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.protocol.object_space;

            /**
             * Verifies an object_space message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an object_space message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns object_space
             */
            public static fromObject(object: { [k: string]: any }): koinos.protocol.object_space;

            /**
             * Creates a plain object from an object_space message. Also converts values to other types if specified.
             * @param message object_space
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.protocol.object_space, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this object_space to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an event_data. */
        interface Ievent_data {

            /** event_data sequence */
            sequence?: (number|null);

            /** event_data source */
            source?: (Uint8Array|null);

            /** event_data name */
            name?: (string|null);

            /** event_data data */
            data?: (Uint8Array|null);

            /** event_data impacted */
            impacted?: (Uint8Array[]|null);
        }

        /** Represents an event_data. */
        class event_data implements Ievent_data {

            /**
             * Constructs a new event_data.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.protocol.Ievent_data);

            /** event_data sequence. */
            public sequence: number;

            /** event_data source. */
            public source: Uint8Array;

            /** event_data name. */
            public name: string;

            /** event_data data. */
            public data: Uint8Array;

            /** event_data impacted. */
            public impacted: Uint8Array[];

            /**
             * Creates a new event_data instance using the specified properties.
             * @param [properties] Properties to set
             * @returns event_data instance
             */
            public static create(properties?: koinos.protocol.Ievent_data): koinos.protocol.event_data;

            /**
             * Encodes the specified event_data message. Does not implicitly {@link koinos.protocol.event_data.verify|verify} messages.
             * @param message event_data message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.protocol.Ievent_data, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified event_data message, length delimited. Does not implicitly {@link koinos.protocol.event_data.verify|verify} messages.
             * @param message event_data message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.protocol.Ievent_data, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an event_data message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns event_data
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.protocol.event_data;

            /**
             * Decodes an event_data message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns event_data
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.protocol.event_data;

            /**
             * Verifies an event_data message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an event_data message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns event_data
             */
            public static fromObject(object: { [k: string]: any }): koinos.protocol.event_data;

            /**
             * Creates a plain object from an event_data message. Also converts values to other types if specified.
             * @param message event_data
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.protocol.event_data, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this event_data to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a contract_call_bundle. */
        interface Icontract_call_bundle {

            /** contract_call_bundle contract_id */
            contract_id?: (Uint8Array|null);

            /** contract_call_bundle entry_point */
            entry_point?: (number|null);
        }

        /** Represents a contract_call_bundle. */
        class contract_call_bundle implements Icontract_call_bundle {

            /**
             * Constructs a new contract_call_bundle.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.protocol.Icontract_call_bundle);

            /** contract_call_bundle contract_id. */
            public contract_id: Uint8Array;

            /** contract_call_bundle entry_point. */
            public entry_point: number;

            /**
             * Creates a new contract_call_bundle instance using the specified properties.
             * @param [properties] Properties to set
             * @returns contract_call_bundle instance
             */
            public static create(properties?: koinos.protocol.Icontract_call_bundle): koinos.protocol.contract_call_bundle;

            /**
             * Encodes the specified contract_call_bundle message. Does not implicitly {@link koinos.protocol.contract_call_bundle.verify|verify} messages.
             * @param message contract_call_bundle message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.protocol.Icontract_call_bundle, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified contract_call_bundle message, length delimited. Does not implicitly {@link koinos.protocol.contract_call_bundle.verify|verify} messages.
             * @param message contract_call_bundle message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.protocol.Icontract_call_bundle, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a contract_call_bundle message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns contract_call_bundle
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.protocol.contract_call_bundle;

            /**
             * Decodes a contract_call_bundle message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns contract_call_bundle
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.protocol.contract_call_bundle;

            /**
             * Verifies a contract_call_bundle message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a contract_call_bundle message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns contract_call_bundle
             */
            public static fromObject(object: { [k: string]: any }): koinos.protocol.contract_call_bundle;

            /**
             * Creates a plain object from a contract_call_bundle message. Also converts values to other types if specified.
             * @param message contract_call_bundle
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.protocol.contract_call_bundle, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this contract_call_bundle to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a system_call_target. */
        interface Isystem_call_target {

            /** system_call_target thunk_id */
            thunk_id?: (number|null);

            /** system_call_target system_call_bundle */
            system_call_bundle?: (koinos.protocol.Icontract_call_bundle|null);
        }

        /** Represents a system_call_target. */
        class system_call_target implements Isystem_call_target {

            /**
             * Constructs a new system_call_target.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.protocol.Isystem_call_target);

            /** system_call_target thunk_id. */
            public thunk_id?: (number|null);

            /** system_call_target system_call_bundle. */
            public system_call_bundle?: (koinos.protocol.Icontract_call_bundle|null);

            /** system_call_target target. */
            public target?: ("thunk_id"|"system_call_bundle");

            /**
             * Creates a new system_call_target instance using the specified properties.
             * @param [properties] Properties to set
             * @returns system_call_target instance
             */
            public static create(properties?: koinos.protocol.Isystem_call_target): koinos.protocol.system_call_target;

            /**
             * Encodes the specified system_call_target message. Does not implicitly {@link koinos.protocol.system_call_target.verify|verify} messages.
             * @param message system_call_target message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.protocol.Isystem_call_target, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified system_call_target message, length delimited. Does not implicitly {@link koinos.protocol.system_call_target.verify|verify} messages.
             * @param message system_call_target message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.protocol.Isystem_call_target, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a system_call_target message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns system_call_target
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.protocol.system_call_target;

            /**
             * Decodes a system_call_target message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns system_call_target
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.protocol.system_call_target;

            /**
             * Verifies a system_call_target message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a system_call_target message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns system_call_target
             */
            public static fromObject(object: { [k: string]: any }): koinos.protocol.system_call_target;

            /**
             * Creates a plain object from a system_call_target message. Also converts values to other types if specified.
             * @param message system_call_target
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.protocol.system_call_target, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this system_call_target to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an upload_contract_operation. */
        interface Iupload_contract_operation {

            /** upload_contract_operation contract_id */
            contract_id?: (Uint8Array|null);

            /** upload_contract_operation bytecode */
            bytecode?: (Uint8Array|null);

            /** upload_contract_operation abi */
            abi?: (string|null);

            /** upload_contract_operation authorizes_call_contract */
            authorizes_call_contract?: (boolean|null);

            /** upload_contract_operation authorizes_transaction_application */
            authorizes_transaction_application?: (boolean|null);

            /** upload_contract_operation authorizes_upload_contract */
            authorizes_upload_contract?: (boolean|null);
        }

        /** Represents an upload_contract_operation. */
        class upload_contract_operation implements Iupload_contract_operation {

            /**
             * Constructs a new upload_contract_operation.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.protocol.Iupload_contract_operation);

            /** upload_contract_operation contract_id. */
            public contract_id: Uint8Array;

            /** upload_contract_operation bytecode. */
            public bytecode: Uint8Array;

            /** upload_contract_operation abi. */
            public abi: string;

            /** upload_contract_operation authorizes_call_contract. */
            public authorizes_call_contract: boolean;

            /** upload_contract_operation authorizes_transaction_application. */
            public authorizes_transaction_application: boolean;

            /** upload_contract_operation authorizes_upload_contract. */
            public authorizes_upload_contract: boolean;

            /**
             * Creates a new upload_contract_operation instance using the specified properties.
             * @param [properties] Properties to set
             * @returns upload_contract_operation instance
             */
            public static create(properties?: koinos.protocol.Iupload_contract_operation): koinos.protocol.upload_contract_operation;

            /**
             * Encodes the specified upload_contract_operation message. Does not implicitly {@link koinos.protocol.upload_contract_operation.verify|verify} messages.
             * @param message upload_contract_operation message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.protocol.Iupload_contract_operation, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified upload_contract_operation message, length delimited. Does not implicitly {@link koinos.protocol.upload_contract_operation.verify|verify} messages.
             * @param message upload_contract_operation message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.protocol.Iupload_contract_operation, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an upload_contract_operation message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns upload_contract_operation
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.protocol.upload_contract_operation;

            /**
             * Decodes an upload_contract_operation message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns upload_contract_operation
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.protocol.upload_contract_operation;

            /**
             * Verifies an upload_contract_operation message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an upload_contract_operation message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns upload_contract_operation
             */
            public static fromObject(object: { [k: string]: any }): koinos.protocol.upload_contract_operation;

            /**
             * Creates a plain object from an upload_contract_operation message. Also converts values to other types if specified.
             * @param message upload_contract_operation
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.protocol.upload_contract_operation, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this upload_contract_operation to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a call_contract_operation. */
        interface Icall_contract_operation {

            /** call_contract_operation contract_id */
            contract_id?: (Uint8Array|null);

            /** call_contract_operation entry_point */
            entry_point?: (number|null);

            /** call_contract_operation args */
            args?: (Uint8Array|null);
        }

        /** Represents a call_contract_operation. */
        class call_contract_operation implements Icall_contract_operation {

            /**
             * Constructs a new call_contract_operation.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.protocol.Icall_contract_operation);

            /** call_contract_operation contract_id. */
            public contract_id: Uint8Array;

            /** call_contract_operation entry_point. */
            public entry_point: number;

            /** call_contract_operation args. */
            public args: Uint8Array;

            /**
             * Creates a new call_contract_operation instance using the specified properties.
             * @param [properties] Properties to set
             * @returns call_contract_operation instance
             */
            public static create(properties?: koinos.protocol.Icall_contract_operation): koinos.protocol.call_contract_operation;

            /**
             * Encodes the specified call_contract_operation message. Does not implicitly {@link koinos.protocol.call_contract_operation.verify|verify} messages.
             * @param message call_contract_operation message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.protocol.Icall_contract_operation, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified call_contract_operation message, length delimited. Does not implicitly {@link koinos.protocol.call_contract_operation.verify|verify} messages.
             * @param message call_contract_operation message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.protocol.Icall_contract_operation, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a call_contract_operation message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns call_contract_operation
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.protocol.call_contract_operation;

            /**
             * Decodes a call_contract_operation message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns call_contract_operation
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.protocol.call_contract_operation;

            /**
             * Verifies a call_contract_operation message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a call_contract_operation message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns call_contract_operation
             */
            public static fromObject(object: { [k: string]: any }): koinos.protocol.call_contract_operation;

            /**
             * Creates a plain object from a call_contract_operation message. Also converts values to other types if specified.
             * @param message call_contract_operation
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.protocol.call_contract_operation, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this call_contract_operation to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a set_system_call_operation. */
        interface Iset_system_call_operation {

            /** set_system_call_operation call_id */
            call_id?: (number|null);

            /** set_system_call_operation target */
            target?: (koinos.protocol.Isystem_call_target|null);
        }

        /** Represents a set_system_call_operation. */
        class set_system_call_operation implements Iset_system_call_operation {

            /**
             * Constructs a new set_system_call_operation.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.protocol.Iset_system_call_operation);

            /** set_system_call_operation call_id. */
            public call_id: number;

            /** set_system_call_operation target. */
            public target?: (koinos.protocol.Isystem_call_target|null);

            /**
             * Creates a new set_system_call_operation instance using the specified properties.
             * @param [properties] Properties to set
             * @returns set_system_call_operation instance
             */
            public static create(properties?: koinos.protocol.Iset_system_call_operation): koinos.protocol.set_system_call_operation;

            /**
             * Encodes the specified set_system_call_operation message. Does not implicitly {@link koinos.protocol.set_system_call_operation.verify|verify} messages.
             * @param message set_system_call_operation message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.protocol.Iset_system_call_operation, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified set_system_call_operation message, length delimited. Does not implicitly {@link koinos.protocol.set_system_call_operation.verify|verify} messages.
             * @param message set_system_call_operation message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.protocol.Iset_system_call_operation, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a set_system_call_operation message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns set_system_call_operation
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.protocol.set_system_call_operation;

            /**
             * Decodes a set_system_call_operation message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns set_system_call_operation
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.protocol.set_system_call_operation;

            /**
             * Verifies a set_system_call_operation message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a set_system_call_operation message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns set_system_call_operation
             */
            public static fromObject(object: { [k: string]: any }): koinos.protocol.set_system_call_operation;

            /**
             * Creates a plain object from a set_system_call_operation message. Also converts values to other types if specified.
             * @param message set_system_call_operation
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.protocol.set_system_call_operation, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this set_system_call_operation to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a set_system_contract_operation. */
        interface Iset_system_contract_operation {

            /** set_system_contract_operation contract_id */
            contract_id?: (Uint8Array|null);

            /** set_system_contract_operation system_contract */
            system_contract?: (boolean|null);
        }

        /** Represents a set_system_contract_operation. */
        class set_system_contract_operation implements Iset_system_contract_operation {

            /**
             * Constructs a new set_system_contract_operation.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.protocol.Iset_system_contract_operation);

            /** set_system_contract_operation contract_id. */
            public contract_id: Uint8Array;

            /** set_system_contract_operation system_contract. */
            public system_contract: boolean;

            /**
             * Creates a new set_system_contract_operation instance using the specified properties.
             * @param [properties] Properties to set
             * @returns set_system_contract_operation instance
             */
            public static create(properties?: koinos.protocol.Iset_system_contract_operation): koinos.protocol.set_system_contract_operation;

            /**
             * Encodes the specified set_system_contract_operation message. Does not implicitly {@link koinos.protocol.set_system_contract_operation.verify|verify} messages.
             * @param message set_system_contract_operation message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.protocol.Iset_system_contract_operation, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified set_system_contract_operation message, length delimited. Does not implicitly {@link koinos.protocol.set_system_contract_operation.verify|verify} messages.
             * @param message set_system_contract_operation message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.protocol.Iset_system_contract_operation, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a set_system_contract_operation message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns set_system_contract_operation
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.protocol.set_system_contract_operation;

            /**
             * Decodes a set_system_contract_operation message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns set_system_contract_operation
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.protocol.set_system_contract_operation;

            /**
             * Verifies a set_system_contract_operation message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a set_system_contract_operation message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns set_system_contract_operation
             */
            public static fromObject(object: { [k: string]: any }): koinos.protocol.set_system_contract_operation;

            /**
             * Creates a plain object from a set_system_contract_operation message. Also converts values to other types if specified.
             * @param message set_system_contract_operation
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.protocol.set_system_contract_operation, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this set_system_contract_operation to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an operation. */
        interface Ioperation {

            /** operation upload_contract */
            upload_contract?: (koinos.protocol.Iupload_contract_operation|null);

            /** operation call_contract */
            call_contract?: (koinos.protocol.Icall_contract_operation|null);

            /** operation set_system_call */
            set_system_call?: (koinos.protocol.Iset_system_call_operation|null);

            /** operation set_system_contract */
            set_system_contract?: (koinos.protocol.Iset_system_contract_operation|null);
        }

        /** Represents an operation. */
        class operation implements Ioperation {

            /**
             * Constructs a new operation.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.protocol.Ioperation);

            /** operation upload_contract. */
            public upload_contract?: (koinos.protocol.Iupload_contract_operation|null);

            /** operation call_contract. */
            public call_contract?: (koinos.protocol.Icall_contract_operation|null);

            /** operation set_system_call. */
            public set_system_call?: (koinos.protocol.Iset_system_call_operation|null);

            /** operation set_system_contract. */
            public set_system_contract?: (koinos.protocol.Iset_system_contract_operation|null);

            /** operation op. */
            public op?: ("upload_contract"|"call_contract"|"set_system_call"|"set_system_contract");

            /**
             * Creates a new operation instance using the specified properties.
             * @param [properties] Properties to set
             * @returns operation instance
             */
            public static create(properties?: koinos.protocol.Ioperation): koinos.protocol.operation;

            /**
             * Encodes the specified operation message. Does not implicitly {@link koinos.protocol.operation.verify|verify} messages.
             * @param message operation message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.protocol.Ioperation, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified operation message, length delimited. Does not implicitly {@link koinos.protocol.operation.verify|verify} messages.
             * @param message operation message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.protocol.Ioperation, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an operation message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns operation
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.protocol.operation;

            /**
             * Decodes an operation message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns operation
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.protocol.operation;

            /**
             * Verifies an operation message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an operation message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns operation
             */
            public static fromObject(object: { [k: string]: any }): koinos.protocol.operation;

            /**
             * Creates a plain object from an operation message. Also converts values to other types if specified.
             * @param message operation
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.protocol.operation, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this operation to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a transaction_header. */
        interface Itransaction_header {

            /** transaction_header chain_id */
            chain_id?: (Uint8Array|null);

            /** transaction_header rc_limit */
            rc_limit?: (number|Long|null);

            /** transaction_header nonce */
            nonce?: (Uint8Array|null);

            /** transaction_header operation_merkle_root */
            operation_merkle_root?: (Uint8Array|null);

            /** transaction_header payer */
            payer?: (Uint8Array|null);

            /** transaction_header payee */
            payee?: (Uint8Array|null);
        }

        /** Represents a transaction_header. */
        class transaction_header implements Itransaction_header {

            /**
             * Constructs a new transaction_header.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.protocol.Itransaction_header);

            /** transaction_header chain_id. */
            public chain_id: Uint8Array;

            /** transaction_header rc_limit. */
            public rc_limit: (number|Long);

            /** transaction_header nonce. */
            public nonce: Uint8Array;

            /** transaction_header operation_merkle_root. */
            public operation_merkle_root: Uint8Array;

            /** transaction_header payer. */
            public payer: Uint8Array;

            /** transaction_header payee. */
            public payee: Uint8Array;

            /**
             * Creates a new transaction_header instance using the specified properties.
             * @param [properties] Properties to set
             * @returns transaction_header instance
             */
            public static create(properties?: koinos.protocol.Itransaction_header): koinos.protocol.transaction_header;

            /**
             * Encodes the specified transaction_header message. Does not implicitly {@link koinos.protocol.transaction_header.verify|verify} messages.
             * @param message transaction_header message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.protocol.Itransaction_header, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified transaction_header message, length delimited. Does not implicitly {@link koinos.protocol.transaction_header.verify|verify} messages.
             * @param message transaction_header message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.protocol.Itransaction_header, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a transaction_header message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns transaction_header
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.protocol.transaction_header;

            /**
             * Decodes a transaction_header message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns transaction_header
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.protocol.transaction_header;

            /**
             * Verifies a transaction_header message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a transaction_header message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns transaction_header
             */
            public static fromObject(object: { [k: string]: any }): koinos.protocol.transaction_header;

            /**
             * Creates a plain object from a transaction_header message. Also converts values to other types if specified.
             * @param message transaction_header
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.protocol.transaction_header, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this transaction_header to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a transaction. */
        interface Itransaction {

            /** transaction id */
            id?: (Uint8Array|null);

            /** transaction header */
            header?: (koinos.protocol.Itransaction_header|null);

            /** transaction operations */
            operations?: (koinos.protocol.Ioperation[]|null);

            /** transaction signatures */
            signatures?: (Uint8Array[]|null);
        }

        /** Represents a transaction. */
        class transaction implements Itransaction {

            /**
             * Constructs a new transaction.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.protocol.Itransaction);

            /** transaction id. */
            public id: Uint8Array;

            /** transaction header. */
            public header?: (koinos.protocol.Itransaction_header|null);

            /** transaction operations. */
            public operations: koinos.protocol.Ioperation[];

            /** transaction signatures. */
            public signatures: Uint8Array[];

            /**
             * Creates a new transaction instance using the specified properties.
             * @param [properties] Properties to set
             * @returns transaction instance
             */
            public static create(properties?: koinos.protocol.Itransaction): koinos.protocol.transaction;

            /**
             * Encodes the specified transaction message. Does not implicitly {@link koinos.protocol.transaction.verify|verify} messages.
             * @param message transaction message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.protocol.Itransaction, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified transaction message, length delimited. Does not implicitly {@link koinos.protocol.transaction.verify|verify} messages.
             * @param message transaction message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.protocol.Itransaction, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a transaction message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns transaction
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.protocol.transaction;

            /**
             * Decodes a transaction message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns transaction
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.protocol.transaction;

            /**
             * Verifies a transaction message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a transaction message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns transaction
             */
            public static fromObject(object: { [k: string]: any }): koinos.protocol.transaction;

            /**
             * Creates a plain object from a transaction message. Also converts values to other types if specified.
             * @param message transaction
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.protocol.transaction, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this transaction to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a transaction_receipt. */
        interface Itransaction_receipt {

            /** transaction_receipt id */
            id?: (Uint8Array|null);

            /** transaction_receipt payer */
            payer?: (Uint8Array|null);

            /** transaction_receipt max_payer_rc */
            max_payer_rc?: (number|Long|null);

            /** transaction_receipt rc_limit */
            rc_limit?: (number|Long|null);

            /** transaction_receipt rc_used */
            rc_used?: (number|Long|null);

            /** transaction_receipt disk_storage_used */
            disk_storage_used?: (number|Long|null);

            /** transaction_receipt network_bandwidth_used */
            network_bandwidth_used?: (number|Long|null);

            /** transaction_receipt compute_bandwidth_used */
            compute_bandwidth_used?: (number|Long|null);

            /** transaction_receipt reverted */
            reverted?: (boolean|null);

            /** transaction_receipt events */
            events?: (koinos.protocol.Ievent_data[]|null);

            /** transaction_receipt logs */
            logs?: (string[]|null);

            /** transaction_receipt state_delta_entries */
            state_delta_entries?: (koinos.protocol.Istate_delta_entry[]|null);
        }

        /** Represents a transaction_receipt. */
        class transaction_receipt implements Itransaction_receipt {

            /**
             * Constructs a new transaction_receipt.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.protocol.Itransaction_receipt);

            /** transaction_receipt id. */
            public id: Uint8Array;

            /** transaction_receipt payer. */
            public payer: Uint8Array;

            /** transaction_receipt max_payer_rc. */
            public max_payer_rc: (number|Long);

            /** transaction_receipt rc_limit. */
            public rc_limit: (number|Long);

            /** transaction_receipt rc_used. */
            public rc_used: (number|Long);

            /** transaction_receipt disk_storage_used. */
            public disk_storage_used: (number|Long);

            /** transaction_receipt network_bandwidth_used. */
            public network_bandwidth_used: (number|Long);

            /** transaction_receipt compute_bandwidth_used. */
            public compute_bandwidth_used: (number|Long);

            /** transaction_receipt reverted. */
            public reverted: boolean;

            /** transaction_receipt events. */
            public events: koinos.protocol.Ievent_data[];

            /** transaction_receipt logs. */
            public logs: string[];

            /** transaction_receipt state_delta_entries. */
            public state_delta_entries: koinos.protocol.Istate_delta_entry[];

            /**
             * Creates a new transaction_receipt instance using the specified properties.
             * @param [properties] Properties to set
             * @returns transaction_receipt instance
             */
            public static create(properties?: koinos.protocol.Itransaction_receipt): koinos.protocol.transaction_receipt;

            /**
             * Encodes the specified transaction_receipt message. Does not implicitly {@link koinos.protocol.transaction_receipt.verify|verify} messages.
             * @param message transaction_receipt message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.protocol.Itransaction_receipt, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified transaction_receipt message, length delimited. Does not implicitly {@link koinos.protocol.transaction_receipt.verify|verify} messages.
             * @param message transaction_receipt message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.protocol.Itransaction_receipt, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a transaction_receipt message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns transaction_receipt
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.protocol.transaction_receipt;

            /**
             * Decodes a transaction_receipt message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns transaction_receipt
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.protocol.transaction_receipt;

            /**
             * Verifies a transaction_receipt message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a transaction_receipt message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns transaction_receipt
             */
            public static fromObject(object: { [k: string]: any }): koinos.protocol.transaction_receipt;

            /**
             * Creates a plain object from a transaction_receipt message. Also converts values to other types if specified.
             * @param message transaction_receipt
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.protocol.transaction_receipt, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this transaction_receipt to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a block_header. */
        interface Iblock_header {

            /** block_header previous */
            previous?: (Uint8Array|null);

            /** block_header height */
            height?: (number|Long|null);

            /** block_header timestamp */
            timestamp?: (number|Long|null);

            /** block_header previous_state_merkle_root */
            previous_state_merkle_root?: (Uint8Array|null);

            /** block_header transaction_merkle_root */
            transaction_merkle_root?: (Uint8Array|null);

            /** block_header signer */
            signer?: (Uint8Array|null);

            /** block_header approved_proposals */
            approved_proposals?: (Uint8Array[]|null);
        }

        /** Represents a block_header. */
        class block_header implements Iblock_header {

            /**
             * Constructs a new block_header.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.protocol.Iblock_header);

            /** block_header previous. */
            public previous: Uint8Array;

            /** block_header height. */
            public height: (number|Long);

            /** block_header timestamp. */
            public timestamp: (number|Long);

            /** block_header previous_state_merkle_root. */
            public previous_state_merkle_root: Uint8Array;

            /** block_header transaction_merkle_root. */
            public transaction_merkle_root: Uint8Array;

            /** block_header signer. */
            public signer: Uint8Array;

            /** block_header approved_proposals. */
            public approved_proposals: Uint8Array[];

            /**
             * Creates a new block_header instance using the specified properties.
             * @param [properties] Properties to set
             * @returns block_header instance
             */
            public static create(properties?: koinos.protocol.Iblock_header): koinos.protocol.block_header;

            /**
             * Encodes the specified block_header message. Does not implicitly {@link koinos.protocol.block_header.verify|verify} messages.
             * @param message block_header message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.protocol.Iblock_header, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified block_header message, length delimited. Does not implicitly {@link koinos.protocol.block_header.verify|verify} messages.
             * @param message block_header message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.protocol.Iblock_header, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a block_header message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns block_header
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.protocol.block_header;

            /**
             * Decodes a block_header message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns block_header
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.protocol.block_header;

            /**
             * Verifies a block_header message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a block_header message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns block_header
             */
            public static fromObject(object: { [k: string]: any }): koinos.protocol.block_header;

            /**
             * Creates a plain object from a block_header message. Also converts values to other types if specified.
             * @param message block_header
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.protocol.block_header, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this block_header to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a block. */
        interface Iblock {

            /** block id */
            id?: (Uint8Array|null);

            /** block header */
            header?: (koinos.protocol.Iblock_header|null);

            /** block transactions */
            transactions?: (koinos.protocol.Itransaction[]|null);

            /** block signature */
            signature?: (Uint8Array|null);
        }

        /** Represents a block. */
        class block implements Iblock {

            /**
             * Constructs a new block.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.protocol.Iblock);

            /** block id. */
            public id: Uint8Array;

            /** block header. */
            public header?: (koinos.protocol.Iblock_header|null);

            /** block transactions. */
            public transactions: koinos.protocol.Itransaction[];

            /** block signature. */
            public signature: Uint8Array;

            /**
             * Creates a new block instance using the specified properties.
             * @param [properties] Properties to set
             * @returns block instance
             */
            public static create(properties?: koinos.protocol.Iblock): koinos.protocol.block;

            /**
             * Encodes the specified block message. Does not implicitly {@link koinos.protocol.block.verify|verify} messages.
             * @param message block message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.protocol.Iblock, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified block message, length delimited. Does not implicitly {@link koinos.protocol.block.verify|verify} messages.
             * @param message block message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.protocol.Iblock, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a block message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns block
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.protocol.block;

            /**
             * Decodes a block message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns block
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.protocol.block;

            /**
             * Verifies a block message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a block message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns block
             */
            public static fromObject(object: { [k: string]: any }): koinos.protocol.block;

            /**
             * Creates a plain object from a block message. Also converts values to other types if specified.
             * @param message block
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.protocol.block, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this block to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a block_receipt. */
        interface Iblock_receipt {

            /** block_receipt id */
            id?: (Uint8Array|null);

            /** block_receipt height */
            height?: (number|Long|null);

            /** block_receipt disk_storage_used */
            disk_storage_used?: (number|Long|null);

            /** block_receipt network_bandwidth_used */
            network_bandwidth_used?: (number|Long|null);

            /** block_receipt compute_bandwidth_used */
            compute_bandwidth_used?: (number|Long|null);

            /** block_receipt state_merkle_root */
            state_merkle_root?: (Uint8Array|null);

            /** block_receipt events */
            events?: (koinos.protocol.Ievent_data[]|null);

            /** block_receipt transaction_receipts */
            transaction_receipts?: (koinos.protocol.Itransaction_receipt[]|null);

            /** block_receipt logs */
            logs?: (string[]|null);

            /** block_receipt disk_storage_charged */
            disk_storage_charged?: (number|Long|null);

            /** block_receipt network_bandwidth_charged */
            network_bandwidth_charged?: (number|Long|null);

            /** block_receipt compute_bandwidth_charged */
            compute_bandwidth_charged?: (number|Long|null);

            /** block_receipt state_delta_entries */
            state_delta_entries?: (koinos.protocol.Istate_delta_entry[]|null);
        }

        /** Represents a block_receipt. */
        class block_receipt implements Iblock_receipt {

            /**
             * Constructs a new block_receipt.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.protocol.Iblock_receipt);

            /** block_receipt id. */
            public id: Uint8Array;

            /** block_receipt height. */
            public height: (number|Long);

            /** block_receipt disk_storage_used. */
            public disk_storage_used: (number|Long);

            /** block_receipt network_bandwidth_used. */
            public network_bandwidth_used: (number|Long);

            /** block_receipt compute_bandwidth_used. */
            public compute_bandwidth_used: (number|Long);

            /** block_receipt state_merkle_root. */
            public state_merkle_root: Uint8Array;

            /** block_receipt events. */
            public events: koinos.protocol.Ievent_data[];

            /** block_receipt transaction_receipts. */
            public transaction_receipts: koinos.protocol.Itransaction_receipt[];

            /** block_receipt logs. */
            public logs: string[];

            /** block_receipt disk_storage_charged. */
            public disk_storage_charged: (number|Long);

            /** block_receipt network_bandwidth_charged. */
            public network_bandwidth_charged: (number|Long);

            /** block_receipt compute_bandwidth_charged. */
            public compute_bandwidth_charged: (number|Long);

            /** block_receipt state_delta_entries. */
            public state_delta_entries: koinos.protocol.Istate_delta_entry[];

            /**
             * Creates a new block_receipt instance using the specified properties.
             * @param [properties] Properties to set
             * @returns block_receipt instance
             */
            public static create(properties?: koinos.protocol.Iblock_receipt): koinos.protocol.block_receipt;

            /**
             * Encodes the specified block_receipt message. Does not implicitly {@link koinos.protocol.block_receipt.verify|verify} messages.
             * @param message block_receipt message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.protocol.Iblock_receipt, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified block_receipt message, length delimited. Does not implicitly {@link koinos.protocol.block_receipt.verify|verify} messages.
             * @param message block_receipt message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.protocol.Iblock_receipt, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a block_receipt message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns block_receipt
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.protocol.block_receipt;

            /**
             * Decodes a block_receipt message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns block_receipt
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.protocol.block_receipt;

            /**
             * Verifies a block_receipt message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a block_receipt message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns block_receipt
             */
            public static fromObject(object: { [k: string]: any }): koinos.protocol.block_receipt;

            /**
             * Creates a plain object from a block_receipt message. Also converts values to other types if specified.
             * @param message block_receipt
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.protocol.block_receipt, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this block_receipt to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a state_delta_entry. */
        interface Istate_delta_entry {

            /** state_delta_entry object_space */
            object_space?: (koinos.protocol.Iobject_space|null);

            /** state_delta_entry key */
            key?: (Uint8Array|null);

            /** state_delta_entry value */
            value?: (Uint8Array|null);
        }

        /** Represents a state_delta_entry. */
        class state_delta_entry implements Istate_delta_entry {

            /**
             * Constructs a new state_delta_entry.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.protocol.Istate_delta_entry);

            /** state_delta_entry object_space. */
            public object_space?: (koinos.protocol.Iobject_space|null);

            /** state_delta_entry key. */
            public key: Uint8Array;

            /** state_delta_entry value. */
            public value?: (Uint8Array|null);

            /** state_delta_entry _value. */
            public _value?: "value";

            /**
             * Creates a new state_delta_entry instance using the specified properties.
             * @param [properties] Properties to set
             * @returns state_delta_entry instance
             */
            public static create(properties?: koinos.protocol.Istate_delta_entry): koinos.protocol.state_delta_entry;

            /**
             * Encodes the specified state_delta_entry message. Does not implicitly {@link koinos.protocol.state_delta_entry.verify|verify} messages.
             * @param message state_delta_entry message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.protocol.Istate_delta_entry, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified state_delta_entry message, length delimited. Does not implicitly {@link koinos.protocol.state_delta_entry.verify|verify} messages.
             * @param message state_delta_entry message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.protocol.Istate_delta_entry, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a state_delta_entry message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns state_delta_entry
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.protocol.state_delta_entry;

            /**
             * Decodes a state_delta_entry message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns state_delta_entry
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.protocol.state_delta_entry;

            /**
             * Verifies a state_delta_entry message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a state_delta_entry message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns state_delta_entry
             */
            public static fromObject(object: { [k: string]: any }): koinos.protocol.state_delta_entry;

            /**
             * Creates a plain object from a state_delta_entry message. Also converts values to other types if specified.
             * @param message state_delta_entry
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.protocol.state_delta_entry, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this state_delta_entry to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** bytes_type enum. */
    enum bytes_type {
        BASE64 = 0,
        BASE58 = 1,
        HEX = 2,
        BLOCK_ID = 3,
        TRANSACTION_ID = 4,
        CONTRACT_ID = 5,
        ADDRESS = 6
    }

    /** Namespace broadcast. */
    namespace broadcast {

        /** Properties of a transaction_accepted. */
        interface Itransaction_accepted {

            /** transaction_accepted transaction */
            transaction?: (koinos.protocol.Itransaction|null);

            /** transaction_accepted receipt */
            receipt?: (koinos.protocol.Itransaction_receipt|null);

            /** transaction_accepted height */
            height?: (number|Long|null);
        }

        /** Represents a transaction_accepted. */
        class transaction_accepted implements Itransaction_accepted {

            /**
             * Constructs a new transaction_accepted.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.broadcast.Itransaction_accepted);

            /** transaction_accepted transaction. */
            public transaction?: (koinos.protocol.Itransaction|null);

            /** transaction_accepted receipt. */
            public receipt?: (koinos.protocol.Itransaction_receipt|null);

            /** transaction_accepted height. */
            public height: (number|Long);

            /**
             * Creates a new transaction_accepted instance using the specified properties.
             * @param [properties] Properties to set
             * @returns transaction_accepted instance
             */
            public static create(properties?: koinos.broadcast.Itransaction_accepted): koinos.broadcast.transaction_accepted;

            /**
             * Encodes the specified transaction_accepted message. Does not implicitly {@link koinos.broadcast.transaction_accepted.verify|verify} messages.
             * @param message transaction_accepted message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.broadcast.Itransaction_accepted, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified transaction_accepted message, length delimited. Does not implicitly {@link koinos.broadcast.transaction_accepted.verify|verify} messages.
             * @param message transaction_accepted message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.broadcast.Itransaction_accepted, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a transaction_accepted message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns transaction_accepted
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.broadcast.transaction_accepted;

            /**
             * Decodes a transaction_accepted message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns transaction_accepted
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.broadcast.transaction_accepted;

            /**
             * Verifies a transaction_accepted message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a transaction_accepted message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns transaction_accepted
             */
            public static fromObject(object: { [k: string]: any }): koinos.broadcast.transaction_accepted;

            /**
             * Creates a plain object from a transaction_accepted message. Also converts values to other types if specified.
             * @param message transaction_accepted
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.broadcast.transaction_accepted, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this transaction_accepted to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a transaction_failed. */
        interface Itransaction_failed {

            /** transaction_failed id */
            id?: (Uint8Array|null);
        }

        /** Represents a transaction_failed. */
        class transaction_failed implements Itransaction_failed {

            /**
             * Constructs a new transaction_failed.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.broadcast.Itransaction_failed);

            /** transaction_failed id. */
            public id: Uint8Array;

            /**
             * Creates a new transaction_failed instance using the specified properties.
             * @param [properties] Properties to set
             * @returns transaction_failed instance
             */
            public static create(properties?: koinos.broadcast.Itransaction_failed): koinos.broadcast.transaction_failed;

            /**
             * Encodes the specified transaction_failed message. Does not implicitly {@link koinos.broadcast.transaction_failed.verify|verify} messages.
             * @param message transaction_failed message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.broadcast.Itransaction_failed, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified transaction_failed message, length delimited. Does not implicitly {@link koinos.broadcast.transaction_failed.verify|verify} messages.
             * @param message transaction_failed message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.broadcast.Itransaction_failed, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a transaction_failed message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns transaction_failed
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.broadcast.transaction_failed;

            /**
             * Decodes a transaction_failed message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns transaction_failed
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.broadcast.transaction_failed;

            /**
             * Verifies a transaction_failed message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a transaction_failed message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns transaction_failed
             */
            public static fromObject(object: { [k: string]: any }): koinos.broadcast.transaction_failed;

            /**
             * Creates a plain object from a transaction_failed message. Also converts values to other types if specified.
             * @param message transaction_failed
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.broadcast.transaction_failed, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this transaction_failed to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a mempool_accepted. */
        interface Imempool_accepted {

            /** mempool_accepted transaction */
            transaction?: (koinos.protocol.Itransaction|null);

            /** mempool_accepted receipt */
            receipt?: (koinos.protocol.Itransaction_receipt|null);

            /** mempool_accepted height */
            height?: (number|Long|null);

            /** mempool_accepted pending_rc_used */
            pending_rc_used?: (number|Long|null);
        }

        /** Represents a mempool_accepted. */
        class mempool_accepted implements Imempool_accepted {

            /**
             * Constructs a new mempool_accepted.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.broadcast.Imempool_accepted);

            /** mempool_accepted transaction. */
            public transaction?: (koinos.protocol.Itransaction|null);

            /** mempool_accepted receipt. */
            public receipt?: (koinos.protocol.Itransaction_receipt|null);

            /** mempool_accepted height. */
            public height: (number|Long);

            /** mempool_accepted pending_rc_used. */
            public pending_rc_used: (number|Long);

            /**
             * Creates a new mempool_accepted instance using the specified properties.
             * @param [properties] Properties to set
             * @returns mempool_accepted instance
             */
            public static create(properties?: koinos.broadcast.Imempool_accepted): koinos.broadcast.mempool_accepted;

            /**
             * Encodes the specified mempool_accepted message. Does not implicitly {@link koinos.broadcast.mempool_accepted.verify|verify} messages.
             * @param message mempool_accepted message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.broadcast.Imempool_accepted, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified mempool_accepted message, length delimited. Does not implicitly {@link koinos.broadcast.mempool_accepted.verify|verify} messages.
             * @param message mempool_accepted message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.broadcast.Imempool_accepted, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a mempool_accepted message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns mempool_accepted
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.broadcast.mempool_accepted;

            /**
             * Decodes a mempool_accepted message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns mempool_accepted
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.broadcast.mempool_accepted;

            /**
             * Verifies a mempool_accepted message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a mempool_accepted message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns mempool_accepted
             */
            public static fromObject(object: { [k: string]: any }): koinos.broadcast.mempool_accepted;

            /**
             * Creates a plain object from a mempool_accepted message. Also converts values to other types if specified.
             * @param message mempool_accepted
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.broadcast.mempool_accepted, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this mempool_accepted to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a block_accepted. */
        interface Iblock_accepted {

            /** block_accepted block */
            block?: (koinos.protocol.Iblock|null);

            /** block_accepted receipt */
            receipt?: (koinos.protocol.Iblock_receipt|null);

            /** block_accepted live */
            live?: (boolean|null);

            /** block_accepted head */
            head?: (boolean|null);
        }

        /** Represents a block_accepted. */
        class block_accepted implements Iblock_accepted {

            /**
             * Constructs a new block_accepted.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.broadcast.Iblock_accepted);

            /** block_accepted block. */
            public block?: (koinos.protocol.Iblock|null);

            /** block_accepted receipt. */
            public receipt?: (koinos.protocol.Iblock_receipt|null);

            /** block_accepted live. */
            public live: boolean;

            /** block_accepted head. */
            public head: boolean;

            /**
             * Creates a new block_accepted instance using the specified properties.
             * @param [properties] Properties to set
             * @returns block_accepted instance
             */
            public static create(properties?: koinos.broadcast.Iblock_accepted): koinos.broadcast.block_accepted;

            /**
             * Encodes the specified block_accepted message. Does not implicitly {@link koinos.broadcast.block_accepted.verify|verify} messages.
             * @param message block_accepted message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.broadcast.Iblock_accepted, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified block_accepted message, length delimited. Does not implicitly {@link koinos.broadcast.block_accepted.verify|verify} messages.
             * @param message block_accepted message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.broadcast.Iblock_accepted, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a block_accepted message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns block_accepted
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.broadcast.block_accepted;

            /**
             * Decodes a block_accepted message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns block_accepted
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.broadcast.block_accepted;

            /**
             * Verifies a block_accepted message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a block_accepted message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns block_accepted
             */
            public static fromObject(object: { [k: string]: any }): koinos.broadcast.block_accepted;

            /**
             * Creates a plain object from a block_accepted message. Also converts values to other types if specified.
             * @param message block_accepted
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.broadcast.block_accepted, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this block_accepted to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a block_irreversible. */
        interface Iblock_irreversible {

            /** block_irreversible topology */
            topology?: (koinos.Iblock_topology|null);
        }

        /** Represents a block_irreversible. */
        class block_irreversible implements Iblock_irreversible {

            /**
             * Constructs a new block_irreversible.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.broadcast.Iblock_irreversible);

            /** block_irreversible topology. */
            public topology?: (koinos.Iblock_topology|null);

            /**
             * Creates a new block_irreversible instance using the specified properties.
             * @param [properties] Properties to set
             * @returns block_irreversible instance
             */
            public static create(properties?: koinos.broadcast.Iblock_irreversible): koinos.broadcast.block_irreversible;

            /**
             * Encodes the specified block_irreversible message. Does not implicitly {@link koinos.broadcast.block_irreversible.verify|verify} messages.
             * @param message block_irreversible message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.broadcast.Iblock_irreversible, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified block_irreversible message, length delimited. Does not implicitly {@link koinos.broadcast.block_irreversible.verify|verify} messages.
             * @param message block_irreversible message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.broadcast.Iblock_irreversible, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a block_irreversible message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns block_irreversible
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.broadcast.block_irreversible;

            /**
             * Decodes a block_irreversible message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns block_irreversible
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.broadcast.block_irreversible;

            /**
             * Verifies a block_irreversible message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a block_irreversible message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns block_irreversible
             */
            public static fromObject(object: { [k: string]: any }): koinos.broadcast.block_irreversible;

            /**
             * Creates a plain object from a block_irreversible message. Also converts values to other types if specified.
             * @param message block_irreversible
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.broadcast.block_irreversible, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this block_irreversible to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a fork_heads. */
        interface Ifork_heads {

            /** fork_heads last_irreversible_block */
            last_irreversible_block?: (koinos.Iblock_topology|null);

            /** fork_heads heads */
            heads?: (koinos.Iblock_topology[]|null);
        }

        /** Represents a fork_heads. */
        class fork_heads implements Ifork_heads {

            /**
             * Constructs a new fork_heads.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.broadcast.Ifork_heads);

            /** fork_heads last_irreversible_block. */
            public last_irreversible_block?: (koinos.Iblock_topology|null);

            /** fork_heads heads. */
            public heads: koinos.Iblock_topology[];

            /**
             * Creates a new fork_heads instance using the specified properties.
             * @param [properties] Properties to set
             * @returns fork_heads instance
             */
            public static create(properties?: koinos.broadcast.Ifork_heads): koinos.broadcast.fork_heads;

            /**
             * Encodes the specified fork_heads message. Does not implicitly {@link koinos.broadcast.fork_heads.verify|verify} messages.
             * @param message fork_heads message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.broadcast.Ifork_heads, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified fork_heads message, length delimited. Does not implicitly {@link koinos.broadcast.fork_heads.verify|verify} messages.
             * @param message fork_heads message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.broadcast.Ifork_heads, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a fork_heads message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns fork_heads
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.broadcast.fork_heads;

            /**
             * Decodes a fork_heads message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns fork_heads
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.broadcast.fork_heads;

            /**
             * Verifies a fork_heads message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a fork_heads message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns fork_heads
             */
            public static fromObject(object: { [k: string]: any }): koinos.broadcast.fork_heads;

            /**
             * Creates a plain object from a fork_heads message. Also converts values to other types if specified.
             * @param message fork_heads
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.broadcast.fork_heads, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this fork_heads to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a gossip_status. */
        interface Igossip_status {

            /** gossip_status enabled */
            enabled?: (boolean|null);
        }

        /** Represents a gossip_status. */
        class gossip_status implements Igossip_status {

            /**
             * Constructs a new gossip_status.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.broadcast.Igossip_status);

            /** gossip_status enabled. */
            public enabled: boolean;

            /**
             * Creates a new gossip_status instance using the specified properties.
             * @param [properties] Properties to set
             * @returns gossip_status instance
             */
            public static create(properties?: koinos.broadcast.Igossip_status): koinos.broadcast.gossip_status;

            /**
             * Encodes the specified gossip_status message. Does not implicitly {@link koinos.broadcast.gossip_status.verify|verify} messages.
             * @param message gossip_status message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.broadcast.Igossip_status, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified gossip_status message, length delimited. Does not implicitly {@link koinos.broadcast.gossip_status.verify|verify} messages.
             * @param message gossip_status message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.broadcast.Igossip_status, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a gossip_status message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns gossip_status
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.broadcast.gossip_status;

            /**
             * Decodes a gossip_status message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns gossip_status
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.broadcast.gossip_status;

            /**
             * Verifies a gossip_status message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a gossip_status message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns gossip_status
             */
            public static fromObject(object: { [k: string]: any }): koinos.broadcast.gossip_status;

            /**
             * Creates a plain object from a gossip_status message. Also converts values to other types if specified.
             * @param message gossip_status
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.broadcast.gossip_status, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this gossip_status to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an event_parcel. */
        interface Ievent_parcel {

            /** event_parcel block_id */
            block_id?: (Uint8Array|null);

            /** event_parcel height */
            height?: (number|Long|null);

            /** event_parcel transaction_id */
            transaction_id?: (Uint8Array|null);

            /** event_parcel event */
            event?: (koinos.protocol.Ievent_data|null);
        }

        /** Represents an event_parcel. */
        class event_parcel implements Ievent_parcel {

            /**
             * Constructs a new event_parcel.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.broadcast.Ievent_parcel);

            /** event_parcel block_id. */
            public block_id: Uint8Array;

            /** event_parcel height. */
            public height: (number|Long);

            /** event_parcel transaction_id. */
            public transaction_id?: (Uint8Array|null);

            /** event_parcel event. */
            public event?: (koinos.protocol.Ievent_data|null);

            /** event_parcel _transaction_id. */
            public _transaction_id?: "transaction_id";

            /**
             * Creates a new event_parcel instance using the specified properties.
             * @param [properties] Properties to set
             * @returns event_parcel instance
             */
            public static create(properties?: koinos.broadcast.Ievent_parcel): koinos.broadcast.event_parcel;

            /**
             * Encodes the specified event_parcel message. Does not implicitly {@link koinos.broadcast.event_parcel.verify|verify} messages.
             * @param message event_parcel message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.broadcast.Ievent_parcel, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified event_parcel message, length delimited. Does not implicitly {@link koinos.broadcast.event_parcel.verify|verify} messages.
             * @param message event_parcel message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.broadcast.Ievent_parcel, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an event_parcel message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns event_parcel
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.broadcast.event_parcel;

            /**
             * Decodes an event_parcel message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns event_parcel
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.broadcast.event_parcel;

            /**
             * Verifies an event_parcel message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an event_parcel message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns event_parcel
             */
            public static fromObject(object: { [k: string]: any }): koinos.broadcast.event_parcel;

            /**
             * Creates a plain object from an event_parcel message. Also converts values to other types if specified.
             * @param message event_parcel
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.broadcast.event_parcel, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this event_parcel to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Namespace rpc. */
    namespace rpc {

        /** Namespace koindx_tracker. */
        namespace koindx_tracker {

            /** Properties of a pool_pair. */
            interface Ipool_pair {

                /** pool_pair pool */
                pool?: (Uint8Array|null);

                /** pool_pair token_a */
                token_a?: (string|null);

                /** pool_pair token_b */
                token_b?: (string|null);
            }

            /** Represents a pool_pair. */
            class pool_pair implements Ipool_pair {

                /**
                 * Constructs a new pool_pair.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.koindx_tracker.Ipool_pair);

                /** pool_pair pool. */
                public pool: Uint8Array;

                /** pool_pair token_a. */
                public token_a: string;

                /** pool_pair token_b. */
                public token_b: string;

                /**
                 * Creates a new pool_pair instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns pool_pair instance
                 */
                public static create(properties?: koinos.rpc.koindx_tracker.Ipool_pair): koinos.rpc.koindx_tracker.pool_pair;

                /**
                 * Encodes the specified pool_pair message. Does not implicitly {@link koinos.rpc.koindx_tracker.pool_pair.verify|verify} messages.
                 * @param message pool_pair message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.koindx_tracker.Ipool_pair, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified pool_pair message, length delimited. Does not implicitly {@link koinos.rpc.koindx_tracker.pool_pair.verify|verify} messages.
                 * @param message pool_pair message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.koindx_tracker.Ipool_pair, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a pool_pair message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns pool_pair
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.koindx_tracker.pool_pair;

                /**
                 * Decodes a pool_pair message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns pool_pair
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.koindx_tracker.pool_pair;

                /**
                 * Verifies a pool_pair message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a pool_pair message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns pool_pair
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.koindx_tracker.pool_pair;

                /**
                 * Creates a plain object from a pool_pair message. Also converts values to other types if specified.
                 * @param message pool_pair
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.koindx_tracker.pool_pair, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this pool_pair to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_pools_request. */
            interface Iget_pools_request {

                /** get_pools_request start */
                start?: (Uint8Array|null);

                /** get_pools_request pool */
                pool?: (Uint8Array|null);

                /** get_pools_request limit */
                limit?: (number|Long|null);
            }

            /** Represents a get_pools_request. */
            class get_pools_request implements Iget_pools_request {

                /**
                 * Constructs a new get_pools_request.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.koindx_tracker.Iget_pools_request);

                /** get_pools_request start. */
                public start?: (Uint8Array|null);

                /** get_pools_request pool. */
                public pool?: (Uint8Array|null);

                /** get_pools_request limit. */
                public limit: (number|Long);

                /** get_pools_request target. */
                public target?: ("start"|"pool");

                /**
                 * Creates a new get_pools_request instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_pools_request instance
                 */
                public static create(properties?: koinos.rpc.koindx_tracker.Iget_pools_request): koinos.rpc.koindx_tracker.get_pools_request;

                /**
                 * Encodes the specified get_pools_request message. Does not implicitly {@link koinos.rpc.koindx_tracker.get_pools_request.verify|verify} messages.
                 * @param message get_pools_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.koindx_tracker.Iget_pools_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_pools_request message, length delimited. Does not implicitly {@link koinos.rpc.koindx_tracker.get_pools_request.verify|verify} messages.
                 * @param message get_pools_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.koindx_tracker.Iget_pools_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_pools_request message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_pools_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.koindx_tracker.get_pools_request;

                /**
                 * Decodes a get_pools_request message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_pools_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.koindx_tracker.get_pools_request;

                /**
                 * Verifies a get_pools_request message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_pools_request message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_pools_request
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.koindx_tracker.get_pools_request;

                /**
                 * Creates a plain object from a get_pools_request message. Also converts values to other types if specified.
                 * @param message get_pools_request
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.koindx_tracker.get_pools_request, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_pools_request to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_pools_response. */
            interface Iget_pools_response {

                /** get_pools_response values */
                values?: (koinos.rpc.koindx_tracker.Ipool_pair[]|null);
            }

            /** Represents a get_pools_response. */
            class get_pools_response implements Iget_pools_response {

                /**
                 * Constructs a new get_pools_response.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.koindx_tracker.Iget_pools_response);

                /** get_pools_response values. */
                public values: koinos.rpc.koindx_tracker.Ipool_pair[];

                /**
                 * Creates a new get_pools_response instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_pools_response instance
                 */
                public static create(properties?: koinos.rpc.koindx_tracker.Iget_pools_response): koinos.rpc.koindx_tracker.get_pools_response;

                /**
                 * Encodes the specified get_pools_response message. Does not implicitly {@link koinos.rpc.koindx_tracker.get_pools_response.verify|verify} messages.
                 * @param message get_pools_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.koindx_tracker.Iget_pools_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_pools_response message, length delimited. Does not implicitly {@link koinos.rpc.koindx_tracker.get_pools_response.verify|verify} messages.
                 * @param message get_pools_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.koindx_tracker.Iget_pools_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_pools_response message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_pools_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.koindx_tracker.get_pools_response;

                /**
                 * Decodes a get_pools_response message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_pools_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.koindx_tracker.get_pools_response;

                /**
                 * Verifies a get_pools_response message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_pools_response message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_pools_response
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.koindx_tracker.get_pools_response;

                /**
                 * Creates a plain object from a get_pools_response message. Also converts values to other types if specified.
                 * @param message get_pools_response
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.koindx_tracker.get_pools_response, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_pools_response to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an account_liquidity. */
            interface Iaccount_liquidity {

                /** account_liquidity address */
                address?: (Uint8Array|null);

                /** account_liquidity balance */
                balance?: (number|Long|null);

                /** account_liquidity coin_ms_hi */
                coin_ms_hi?: (number|Long|null);

                /** account_liquidity coin_ms_lo */
                coin_ms_lo?: (number|Long|null);
            }

            /** Represents an account_liquidity. */
            class account_liquidity implements Iaccount_liquidity {

                /**
                 * Constructs a new account_liquidity.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.koindx_tracker.Iaccount_liquidity);

                /** account_liquidity address. */
                public address: Uint8Array;

                /** account_liquidity balance. */
                public balance: (number|Long);

                /** account_liquidity coin_ms_hi. */
                public coin_ms_hi: (number|Long);

                /** account_liquidity coin_ms_lo. */
                public coin_ms_lo: (number|Long);

                /**
                 * Creates a new account_liquidity instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns account_liquidity instance
                 */
                public static create(properties?: koinos.rpc.koindx_tracker.Iaccount_liquidity): koinos.rpc.koindx_tracker.account_liquidity;

                /**
                 * Encodes the specified account_liquidity message. Does not implicitly {@link koinos.rpc.koindx_tracker.account_liquidity.verify|verify} messages.
                 * @param message account_liquidity message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.koindx_tracker.Iaccount_liquidity, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified account_liquidity message, length delimited. Does not implicitly {@link koinos.rpc.koindx_tracker.account_liquidity.verify|verify} messages.
                 * @param message account_liquidity message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.koindx_tracker.Iaccount_liquidity, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an account_liquidity message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns account_liquidity
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.koindx_tracker.account_liquidity;

                /**
                 * Decodes an account_liquidity message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns account_liquidity
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.koindx_tracker.account_liquidity;

                /**
                 * Verifies an account_liquidity message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an account_liquidity message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns account_liquidity
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.koindx_tracker.account_liquidity;

                /**
                 * Creates a plain object from an account_liquidity message. Also converts values to other types if specified.
                 * @param message account_liquidity
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.koindx_tracker.account_liquidity, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this account_liquidity to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_liquidity_request. */
            interface Iget_liquidity_request {

                /** get_liquidity_request pool */
                pool?: (Uint8Array|null);

                /** get_liquidity_request start */
                start?: (Uint8Array|null);

                /** get_liquidity_request limit */
                limit?: (number|Long|null);

                /** get_liquidity_request start_ms */
                start_ms?: (number|Long|null);

                /** get_liquidity_request end_ms */
                end_ms?: (number|Long|null);
            }

            /** Represents a get_liquidity_request. */
            class get_liquidity_request implements Iget_liquidity_request {

                /**
                 * Constructs a new get_liquidity_request.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.koindx_tracker.Iget_liquidity_request);

                /** get_liquidity_request pool. */
                public pool: Uint8Array;

                /** get_liquidity_request start. */
                public start: Uint8Array;

                /** get_liquidity_request limit. */
                public limit: (number|Long);

                /** get_liquidity_request start_ms. */
                public start_ms?: (number|Long|null);

                /** get_liquidity_request end_ms. */
                public end_ms?: (number|Long|null);

                /** get_liquidity_request _start_ms. */
                public _start_ms?: "start_ms";

                /** get_liquidity_request _end_ms. */
                public _end_ms?: "end_ms";

                /**
                 * Creates a new get_liquidity_request instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_liquidity_request instance
                 */
                public static create(properties?: koinos.rpc.koindx_tracker.Iget_liquidity_request): koinos.rpc.koindx_tracker.get_liquidity_request;

                /**
                 * Encodes the specified get_liquidity_request message. Does not implicitly {@link koinos.rpc.koindx_tracker.get_liquidity_request.verify|verify} messages.
                 * @param message get_liquidity_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.koindx_tracker.Iget_liquidity_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_liquidity_request message, length delimited. Does not implicitly {@link koinos.rpc.koindx_tracker.get_liquidity_request.verify|verify} messages.
                 * @param message get_liquidity_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.koindx_tracker.Iget_liquidity_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_liquidity_request message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_liquidity_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.koindx_tracker.get_liquidity_request;

                /**
                 * Decodes a get_liquidity_request message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_liquidity_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.koindx_tracker.get_liquidity_request;

                /**
                 * Verifies a get_liquidity_request message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_liquidity_request message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_liquidity_request
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.koindx_tracker.get_liquidity_request;

                /**
                 * Creates a plain object from a get_liquidity_request message. Also converts values to other types if specified.
                 * @param message get_liquidity_request
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.koindx_tracker.get_liquidity_request, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_liquidity_request to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_liquidity_response. */
            interface Iget_liquidity_response {

                /** get_liquidity_response values */
                values?: (koinos.rpc.koindx_tracker.Iaccount_liquidity[]|null);
            }

            /** Represents a get_liquidity_response. */
            class get_liquidity_response implements Iget_liquidity_response {

                /**
                 * Constructs a new get_liquidity_response.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.koindx_tracker.Iget_liquidity_response);

                /** get_liquidity_response values. */
                public values: koinos.rpc.koindx_tracker.Iaccount_liquidity[];

                /**
                 * Creates a new get_liquidity_response instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_liquidity_response instance
                 */
                public static create(properties?: koinos.rpc.koindx_tracker.Iget_liquidity_response): koinos.rpc.koindx_tracker.get_liquidity_response;

                /**
                 * Encodes the specified get_liquidity_response message. Does not implicitly {@link koinos.rpc.koindx_tracker.get_liquidity_response.verify|verify} messages.
                 * @param message get_liquidity_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.koindx_tracker.Iget_liquidity_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_liquidity_response message, length delimited. Does not implicitly {@link koinos.rpc.koindx_tracker.get_liquidity_response.verify|verify} messages.
                 * @param message get_liquidity_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.koindx_tracker.Iget_liquidity_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_liquidity_response message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_liquidity_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.koindx_tracker.get_liquidity_response;

                /**
                 * Decodes a get_liquidity_response message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_liquidity_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.koindx_tracker.get_liquidity_response;

                /**
                 * Verifies a get_liquidity_response message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_liquidity_response message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_liquidity_response
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.koindx_tracker.get_liquidity_response;

                /**
                 * Creates a plain object from a get_liquidity_response message. Also converts values to other types if specified.
                 * @param message get_liquidity_response
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.koindx_tracker.get_liquidity_response, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_liquidity_response to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a pool_tvl. */
            interface Ipool_tvl {

                /** pool_tvl pool */
                pool?: (Uint8Array|null);

                /** pool_tvl tvl */
                tvl?: (number|Long|null);
            }

            /** Represents a pool_tvl. */
            class pool_tvl implements Ipool_tvl {

                /**
                 * Constructs a new pool_tvl.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.koindx_tracker.Ipool_tvl);

                /** pool_tvl pool. */
                public pool: Uint8Array;

                /** pool_tvl tvl. */
                public tvl: (number|Long);

                /**
                 * Creates a new pool_tvl instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns pool_tvl instance
                 */
                public static create(properties?: koinos.rpc.koindx_tracker.Ipool_tvl): koinos.rpc.koindx_tracker.pool_tvl;

                /**
                 * Encodes the specified pool_tvl message. Does not implicitly {@link koinos.rpc.koindx_tracker.pool_tvl.verify|verify} messages.
                 * @param message pool_tvl message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.koindx_tracker.Ipool_tvl, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified pool_tvl message, length delimited. Does not implicitly {@link koinos.rpc.koindx_tracker.pool_tvl.verify|verify} messages.
                 * @param message pool_tvl message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.koindx_tracker.Ipool_tvl, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a pool_tvl message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns pool_tvl
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.koindx_tracker.pool_tvl;

                /**
                 * Decodes a pool_tvl message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns pool_tvl
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.koindx_tracker.pool_tvl;

                /**
                 * Verifies a pool_tvl message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a pool_tvl message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns pool_tvl
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.koindx_tracker.pool_tvl;

                /**
                 * Creates a plain object from a pool_tvl message. Also converts values to other types if specified.
                 * @param message pool_tvl
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.koindx_tracker.pool_tvl, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this pool_tvl to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_tvl_request. */
            interface Iget_tvl_request {

                /** get_tvl_request start */
                start?: (Uint8Array|null);

                /** get_tvl_request pool */
                pool?: (Uint8Array|null);

                /** get_tvl_request limit */
                limit?: (number|Long|null);

                /** get_tvl_request ms */
                ms?: (number|Long|null);
            }

            /** Represents a get_tvl_request. */
            class get_tvl_request implements Iget_tvl_request {

                /**
                 * Constructs a new get_tvl_request.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.koindx_tracker.Iget_tvl_request);

                /** get_tvl_request start. */
                public start?: (Uint8Array|null);

                /** get_tvl_request pool. */
                public pool?: (Uint8Array|null);

                /** get_tvl_request limit. */
                public limit: (number|Long);

                /** get_tvl_request ms. */
                public ms?: (number|Long|null);

                /** get_tvl_request target. */
                public target?: ("start"|"pool");

                /** get_tvl_request _ms. */
                public _ms?: "ms";

                /**
                 * Creates a new get_tvl_request instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_tvl_request instance
                 */
                public static create(properties?: koinos.rpc.koindx_tracker.Iget_tvl_request): koinos.rpc.koindx_tracker.get_tvl_request;

                /**
                 * Encodes the specified get_tvl_request message. Does not implicitly {@link koinos.rpc.koindx_tracker.get_tvl_request.verify|verify} messages.
                 * @param message get_tvl_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.koindx_tracker.Iget_tvl_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_tvl_request message, length delimited. Does not implicitly {@link koinos.rpc.koindx_tracker.get_tvl_request.verify|verify} messages.
                 * @param message get_tvl_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.koindx_tracker.Iget_tvl_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_tvl_request message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_tvl_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.koindx_tracker.get_tvl_request;

                /**
                 * Decodes a get_tvl_request message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_tvl_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.koindx_tracker.get_tvl_request;

                /**
                 * Verifies a get_tvl_request message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_tvl_request message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_tvl_request
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.koindx_tracker.get_tvl_request;

                /**
                 * Creates a plain object from a get_tvl_request message. Also converts values to other types if specified.
                 * @param message get_tvl_request
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.koindx_tracker.get_tvl_request, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_tvl_request to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_tvl_response. */
            interface Iget_tvl_response {

                /** get_tvl_response values */
                values?: (koinos.rpc.koindx_tracker.Ipool_tvl[]|null);
            }

            /** Represents a get_tvl_response. */
            class get_tvl_response implements Iget_tvl_response {

                /**
                 * Constructs a new get_tvl_response.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.koindx_tracker.Iget_tvl_response);

                /** get_tvl_response values. */
                public values: koinos.rpc.koindx_tracker.Ipool_tvl[];

                /**
                 * Creates a new get_tvl_response instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_tvl_response instance
                 */
                public static create(properties?: koinos.rpc.koindx_tracker.Iget_tvl_response): koinos.rpc.koindx_tracker.get_tvl_response;

                /**
                 * Encodes the specified get_tvl_response message. Does not implicitly {@link koinos.rpc.koindx_tracker.get_tvl_response.verify|verify} messages.
                 * @param message get_tvl_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.koindx_tracker.Iget_tvl_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_tvl_response message, length delimited. Does not implicitly {@link koinos.rpc.koindx_tracker.get_tvl_response.verify|verify} messages.
                 * @param message get_tvl_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.koindx_tracker.Iget_tvl_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_tvl_response message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_tvl_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.koindx_tracker.get_tvl_response;

                /**
                 * Decodes a get_tvl_response message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_tvl_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.koindx_tracker.get_tvl_response;

                /**
                 * Verifies a get_tvl_response message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_tvl_response message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_tvl_response
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.koindx_tracker.get_tvl_response;

                /**
                 * Creates a plain object from a get_tvl_response message. Also converts values to other types if specified.
                 * @param message get_tvl_response
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.koindx_tracker.get_tvl_response, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_tvl_response to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a koindx_tracker_request. */
            interface Ikoindx_tracker_request {

                /** koindx_tracker_request reserved */
                reserved?: (koinos.rpc.Ireserved_rpc|null);

                /** koindx_tracker_request get_pools */
                get_pools?: (koinos.rpc.koindx_tracker.Iget_pools_request|null);

                /** koindx_tracker_request get_liquidity */
                get_liquidity?: (koinos.rpc.koindx_tracker.Iget_liquidity_request|null);

                /** koindx_tracker_request get_tvl */
                get_tvl?: (koinos.rpc.koindx_tracker.Iget_tvl_request|null);
            }

            /** Represents a koindx_tracker_request. */
            class koindx_tracker_request implements Ikoindx_tracker_request {

                /**
                 * Constructs a new koindx_tracker_request.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.koindx_tracker.Ikoindx_tracker_request);

                /** koindx_tracker_request reserved. */
                public reserved?: (koinos.rpc.Ireserved_rpc|null);

                /** koindx_tracker_request get_pools. */
                public get_pools?: (koinos.rpc.koindx_tracker.Iget_pools_request|null);

                /** koindx_tracker_request get_liquidity. */
                public get_liquidity?: (koinos.rpc.koindx_tracker.Iget_liquidity_request|null);

                /** koindx_tracker_request get_tvl. */
                public get_tvl?: (koinos.rpc.koindx_tracker.Iget_tvl_request|null);

                /** koindx_tracker_request request. */
                public request?: ("reserved"|"get_pools"|"get_liquidity"|"get_tvl");

                /**
                 * Creates a new koindx_tracker_request instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns koindx_tracker_request instance
                 */
                public static create(properties?: koinos.rpc.koindx_tracker.Ikoindx_tracker_request): koinos.rpc.koindx_tracker.koindx_tracker_request;

                /**
                 * Encodes the specified koindx_tracker_request message. Does not implicitly {@link koinos.rpc.koindx_tracker.koindx_tracker_request.verify|verify} messages.
                 * @param message koindx_tracker_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.koindx_tracker.Ikoindx_tracker_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified koindx_tracker_request message, length delimited. Does not implicitly {@link koinos.rpc.koindx_tracker.koindx_tracker_request.verify|verify} messages.
                 * @param message koindx_tracker_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.koindx_tracker.Ikoindx_tracker_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a koindx_tracker_request message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns koindx_tracker_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.koindx_tracker.koindx_tracker_request;

                /**
                 * Decodes a koindx_tracker_request message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns koindx_tracker_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.koindx_tracker.koindx_tracker_request;

                /**
                 * Verifies a koindx_tracker_request message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a koindx_tracker_request message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns koindx_tracker_request
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.koindx_tracker.koindx_tracker_request;

                /**
                 * Creates a plain object from a koindx_tracker_request message. Also converts values to other types if specified.
                 * @param message koindx_tracker_request
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.koindx_tracker.koindx_tracker_request, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this koindx_tracker_request to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a koindx_tracker_response. */
            interface Ikoindx_tracker_response {

                /** koindx_tracker_response reserved */
                reserved?: (koinos.rpc.Ireserved_rpc|null);

                /** koindx_tracker_response error */
                error?: (koinos.rpc.Ierror_status|null);

                /** koindx_tracker_response get_pools */
                get_pools?: (koinos.rpc.koindx_tracker.Iget_pools_response|null);

                /** koindx_tracker_response get_liquidity */
                get_liquidity?: (koinos.rpc.koindx_tracker.Iget_liquidity_response|null);

                /** koindx_tracker_response get_tvl */
                get_tvl?: (koinos.rpc.koindx_tracker.Iget_tvl_response|null);
            }

            /** Represents a koindx_tracker_response. */
            class koindx_tracker_response implements Ikoindx_tracker_response {

                /**
                 * Constructs a new koindx_tracker_response.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.koindx_tracker.Ikoindx_tracker_response);

                /** koindx_tracker_response reserved. */
                public reserved?: (koinos.rpc.Ireserved_rpc|null);

                /** koindx_tracker_response error. */
                public error?: (koinos.rpc.Ierror_status|null);

                /** koindx_tracker_response get_pools. */
                public get_pools?: (koinos.rpc.koindx_tracker.Iget_pools_response|null);

                /** koindx_tracker_response get_liquidity. */
                public get_liquidity?: (koinos.rpc.koindx_tracker.Iget_liquidity_response|null);

                /** koindx_tracker_response get_tvl. */
                public get_tvl?: (koinos.rpc.koindx_tracker.Iget_tvl_response|null);

                /** koindx_tracker_response response. */
                public response?: ("reserved"|"error"|"get_pools"|"get_liquidity"|"get_tvl");

                /**
                 * Creates a new koindx_tracker_response instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns koindx_tracker_response instance
                 */
                public static create(properties?: koinos.rpc.koindx_tracker.Ikoindx_tracker_response): koinos.rpc.koindx_tracker.koindx_tracker_response;

                /**
                 * Encodes the specified koindx_tracker_response message. Does not implicitly {@link koinos.rpc.koindx_tracker.koindx_tracker_response.verify|verify} messages.
                 * @param message koindx_tracker_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.koindx_tracker.Ikoindx_tracker_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified koindx_tracker_response message, length delimited. Does not implicitly {@link koinos.rpc.koindx_tracker.koindx_tracker_response.verify|verify} messages.
                 * @param message koindx_tracker_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.koindx_tracker.Ikoindx_tracker_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a koindx_tracker_response message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns koindx_tracker_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.koindx_tracker.koindx_tracker_response;

                /**
                 * Decodes a koindx_tracker_response message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns koindx_tracker_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.koindx_tracker.koindx_tracker_response;

                /**
                 * Verifies a koindx_tracker_response message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a koindx_tracker_response message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns koindx_tracker_response
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.koindx_tracker.koindx_tracker_response;

                /**
                 * Creates a plain object from a koindx_tracker_response message. Also converts values to other types if specified.
                 * @param message koindx_tracker_response
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.koindx_tracker.koindx_tracker_response, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this koindx_tracker_response to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Namespace chain. */
        namespace chain {

            /** Properties of a submit_block_request. */
            interface Isubmit_block_request {

                /** submit_block_request block */
                block?: (koinos.protocol.Iblock|null);
            }

            /** Represents a submit_block_request. */
            class submit_block_request implements Isubmit_block_request {

                /**
                 * Constructs a new submit_block_request.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.chain.Isubmit_block_request);

                /** submit_block_request block. */
                public block?: (koinos.protocol.Iblock|null);

                /**
                 * Creates a new submit_block_request instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns submit_block_request instance
                 */
                public static create(properties?: koinos.rpc.chain.Isubmit_block_request): koinos.rpc.chain.submit_block_request;

                /**
                 * Encodes the specified submit_block_request message. Does not implicitly {@link koinos.rpc.chain.submit_block_request.verify|verify} messages.
                 * @param message submit_block_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.chain.Isubmit_block_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified submit_block_request message, length delimited. Does not implicitly {@link koinos.rpc.chain.submit_block_request.verify|verify} messages.
                 * @param message submit_block_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.chain.Isubmit_block_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a submit_block_request message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns submit_block_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.chain.submit_block_request;

                /**
                 * Decodes a submit_block_request message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns submit_block_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.chain.submit_block_request;

                /**
                 * Verifies a submit_block_request message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a submit_block_request message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns submit_block_request
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.chain.submit_block_request;

                /**
                 * Creates a plain object from a submit_block_request message. Also converts values to other types if specified.
                 * @param message submit_block_request
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.chain.submit_block_request, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this submit_block_request to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a submit_block_response. */
            interface Isubmit_block_response {

                /** submit_block_response receipt */
                receipt?: (koinos.protocol.Iblock_receipt|null);
            }

            /** Represents a submit_block_response. */
            class submit_block_response implements Isubmit_block_response {

                /**
                 * Constructs a new submit_block_response.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.chain.Isubmit_block_response);

                /** submit_block_response receipt. */
                public receipt?: (koinos.protocol.Iblock_receipt|null);

                /**
                 * Creates a new submit_block_response instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns submit_block_response instance
                 */
                public static create(properties?: koinos.rpc.chain.Isubmit_block_response): koinos.rpc.chain.submit_block_response;

                /**
                 * Encodes the specified submit_block_response message. Does not implicitly {@link koinos.rpc.chain.submit_block_response.verify|verify} messages.
                 * @param message submit_block_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.chain.Isubmit_block_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified submit_block_response message, length delimited. Does not implicitly {@link koinos.rpc.chain.submit_block_response.verify|verify} messages.
                 * @param message submit_block_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.chain.Isubmit_block_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a submit_block_response message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns submit_block_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.chain.submit_block_response;

                /**
                 * Decodes a submit_block_response message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns submit_block_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.chain.submit_block_response;

                /**
                 * Verifies a submit_block_response message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a submit_block_response message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns submit_block_response
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.chain.submit_block_response;

                /**
                 * Creates a plain object from a submit_block_response message. Also converts values to other types if specified.
                 * @param message submit_block_response
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.chain.submit_block_response, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this submit_block_response to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a submit_transaction_request. */
            interface Isubmit_transaction_request {

                /** submit_transaction_request transaction */
                transaction?: (koinos.protocol.Itransaction|null);

                /** submit_transaction_request broadcast */
                broadcast?: (boolean|null);
            }

            /** Represents a submit_transaction_request. */
            class submit_transaction_request implements Isubmit_transaction_request {

                /**
                 * Constructs a new submit_transaction_request.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.chain.Isubmit_transaction_request);

                /** submit_transaction_request transaction. */
                public transaction?: (koinos.protocol.Itransaction|null);

                /** submit_transaction_request broadcast. */
                public broadcast: boolean;

                /**
                 * Creates a new submit_transaction_request instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns submit_transaction_request instance
                 */
                public static create(properties?: koinos.rpc.chain.Isubmit_transaction_request): koinos.rpc.chain.submit_transaction_request;

                /**
                 * Encodes the specified submit_transaction_request message. Does not implicitly {@link koinos.rpc.chain.submit_transaction_request.verify|verify} messages.
                 * @param message submit_transaction_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.chain.Isubmit_transaction_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified submit_transaction_request message, length delimited. Does not implicitly {@link koinos.rpc.chain.submit_transaction_request.verify|verify} messages.
                 * @param message submit_transaction_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.chain.Isubmit_transaction_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a submit_transaction_request message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns submit_transaction_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.chain.submit_transaction_request;

                /**
                 * Decodes a submit_transaction_request message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns submit_transaction_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.chain.submit_transaction_request;

                /**
                 * Verifies a submit_transaction_request message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a submit_transaction_request message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns submit_transaction_request
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.chain.submit_transaction_request;

                /**
                 * Creates a plain object from a submit_transaction_request message. Also converts values to other types if specified.
                 * @param message submit_transaction_request
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.chain.submit_transaction_request, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this submit_transaction_request to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a submit_transaction_response. */
            interface Isubmit_transaction_response {

                /** submit_transaction_response receipt */
                receipt?: (koinos.protocol.Itransaction_receipt|null);
            }

            /** Represents a submit_transaction_response. */
            class submit_transaction_response implements Isubmit_transaction_response {

                /**
                 * Constructs a new submit_transaction_response.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.chain.Isubmit_transaction_response);

                /** submit_transaction_response receipt. */
                public receipt?: (koinos.protocol.Itransaction_receipt|null);

                /**
                 * Creates a new submit_transaction_response instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns submit_transaction_response instance
                 */
                public static create(properties?: koinos.rpc.chain.Isubmit_transaction_response): koinos.rpc.chain.submit_transaction_response;

                /**
                 * Encodes the specified submit_transaction_response message. Does not implicitly {@link koinos.rpc.chain.submit_transaction_response.verify|verify} messages.
                 * @param message submit_transaction_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.chain.Isubmit_transaction_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified submit_transaction_response message, length delimited. Does not implicitly {@link koinos.rpc.chain.submit_transaction_response.verify|verify} messages.
                 * @param message submit_transaction_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.chain.Isubmit_transaction_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a submit_transaction_response message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns submit_transaction_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.chain.submit_transaction_response;

                /**
                 * Decodes a submit_transaction_response message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns submit_transaction_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.chain.submit_transaction_response;

                /**
                 * Verifies a submit_transaction_response message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a submit_transaction_response message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns submit_transaction_response
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.chain.submit_transaction_response;

                /**
                 * Creates a plain object from a submit_transaction_response message. Also converts values to other types if specified.
                 * @param message submit_transaction_response
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.chain.submit_transaction_response, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this submit_transaction_response to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_head_info_request. */
            interface Iget_head_info_request {
            }

            /** Represents a get_head_info_request. */
            class get_head_info_request implements Iget_head_info_request {

                /**
                 * Constructs a new get_head_info_request.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.chain.Iget_head_info_request);

                /**
                 * Creates a new get_head_info_request instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_head_info_request instance
                 */
                public static create(properties?: koinos.rpc.chain.Iget_head_info_request): koinos.rpc.chain.get_head_info_request;

                /**
                 * Encodes the specified get_head_info_request message. Does not implicitly {@link koinos.rpc.chain.get_head_info_request.verify|verify} messages.
                 * @param message get_head_info_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.chain.Iget_head_info_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_head_info_request message, length delimited. Does not implicitly {@link koinos.rpc.chain.get_head_info_request.verify|verify} messages.
                 * @param message get_head_info_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.chain.Iget_head_info_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_head_info_request message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_head_info_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.chain.get_head_info_request;

                /**
                 * Decodes a get_head_info_request message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_head_info_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.chain.get_head_info_request;

                /**
                 * Verifies a get_head_info_request message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_head_info_request message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_head_info_request
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.chain.get_head_info_request;

                /**
                 * Creates a plain object from a get_head_info_request message. Also converts values to other types if specified.
                 * @param message get_head_info_request
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.chain.get_head_info_request, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_head_info_request to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_head_info_response. */
            interface Iget_head_info_response {

                /** get_head_info_response head_topology */
                head_topology?: (koinos.Iblock_topology|null);

                /** get_head_info_response last_irreversible_block */
                last_irreversible_block?: (number|Long|null);

                /** get_head_info_response head_state_merkle_root */
                head_state_merkle_root?: (Uint8Array|null);

                /** get_head_info_response head_block_time */
                head_block_time?: (number|Long|null);
            }

            /** Represents a get_head_info_response. */
            class get_head_info_response implements Iget_head_info_response {

                /**
                 * Constructs a new get_head_info_response.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.chain.Iget_head_info_response);

                /** get_head_info_response head_topology. */
                public head_topology?: (koinos.Iblock_topology|null);

                /** get_head_info_response last_irreversible_block. */
                public last_irreversible_block: (number|Long);

                /** get_head_info_response head_state_merkle_root. */
                public head_state_merkle_root: Uint8Array;

                /** get_head_info_response head_block_time. */
                public head_block_time: (number|Long);

                /**
                 * Creates a new get_head_info_response instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_head_info_response instance
                 */
                public static create(properties?: koinos.rpc.chain.Iget_head_info_response): koinos.rpc.chain.get_head_info_response;

                /**
                 * Encodes the specified get_head_info_response message. Does not implicitly {@link koinos.rpc.chain.get_head_info_response.verify|verify} messages.
                 * @param message get_head_info_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.chain.Iget_head_info_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_head_info_response message, length delimited. Does not implicitly {@link koinos.rpc.chain.get_head_info_response.verify|verify} messages.
                 * @param message get_head_info_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.chain.Iget_head_info_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_head_info_response message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_head_info_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.chain.get_head_info_response;

                /**
                 * Decodes a get_head_info_response message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_head_info_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.chain.get_head_info_response;

                /**
                 * Verifies a get_head_info_response message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_head_info_response message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_head_info_response
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.chain.get_head_info_response;

                /**
                 * Creates a plain object from a get_head_info_response message. Also converts values to other types if specified.
                 * @param message get_head_info_response
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.chain.get_head_info_response, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_head_info_response to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_chain_id_request. */
            interface Iget_chain_id_request {
            }

            /** Represents a get_chain_id_request. */
            class get_chain_id_request implements Iget_chain_id_request {

                /**
                 * Constructs a new get_chain_id_request.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.chain.Iget_chain_id_request);

                /**
                 * Creates a new get_chain_id_request instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_chain_id_request instance
                 */
                public static create(properties?: koinos.rpc.chain.Iget_chain_id_request): koinos.rpc.chain.get_chain_id_request;

                /**
                 * Encodes the specified get_chain_id_request message. Does not implicitly {@link koinos.rpc.chain.get_chain_id_request.verify|verify} messages.
                 * @param message get_chain_id_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.chain.Iget_chain_id_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_chain_id_request message, length delimited. Does not implicitly {@link koinos.rpc.chain.get_chain_id_request.verify|verify} messages.
                 * @param message get_chain_id_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.chain.Iget_chain_id_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_chain_id_request message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_chain_id_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.chain.get_chain_id_request;

                /**
                 * Decodes a get_chain_id_request message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_chain_id_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.chain.get_chain_id_request;

                /**
                 * Verifies a get_chain_id_request message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_chain_id_request message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_chain_id_request
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.chain.get_chain_id_request;

                /**
                 * Creates a plain object from a get_chain_id_request message. Also converts values to other types if specified.
                 * @param message get_chain_id_request
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.chain.get_chain_id_request, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_chain_id_request to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_chain_id_response. */
            interface Iget_chain_id_response {

                /** get_chain_id_response chain_id */
                chain_id?: (Uint8Array|null);
            }

            /** Represents a get_chain_id_response. */
            class get_chain_id_response implements Iget_chain_id_response {

                /**
                 * Constructs a new get_chain_id_response.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.chain.Iget_chain_id_response);

                /** get_chain_id_response chain_id. */
                public chain_id: Uint8Array;

                /**
                 * Creates a new get_chain_id_response instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_chain_id_response instance
                 */
                public static create(properties?: koinos.rpc.chain.Iget_chain_id_response): koinos.rpc.chain.get_chain_id_response;

                /**
                 * Encodes the specified get_chain_id_response message. Does not implicitly {@link koinos.rpc.chain.get_chain_id_response.verify|verify} messages.
                 * @param message get_chain_id_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.chain.Iget_chain_id_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_chain_id_response message, length delimited. Does not implicitly {@link koinos.rpc.chain.get_chain_id_response.verify|verify} messages.
                 * @param message get_chain_id_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.chain.Iget_chain_id_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_chain_id_response message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_chain_id_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.chain.get_chain_id_response;

                /**
                 * Decodes a get_chain_id_response message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_chain_id_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.chain.get_chain_id_response;

                /**
                 * Verifies a get_chain_id_response message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_chain_id_response message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_chain_id_response
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.chain.get_chain_id_response;

                /**
                 * Creates a plain object from a get_chain_id_response message. Also converts values to other types if specified.
                 * @param message get_chain_id_response
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.chain.get_chain_id_response, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_chain_id_response to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_fork_heads_request. */
            interface Iget_fork_heads_request {
            }

            /** Represents a get_fork_heads_request. */
            class get_fork_heads_request implements Iget_fork_heads_request {

                /**
                 * Constructs a new get_fork_heads_request.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.chain.Iget_fork_heads_request);

                /**
                 * Creates a new get_fork_heads_request instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_fork_heads_request instance
                 */
                public static create(properties?: koinos.rpc.chain.Iget_fork_heads_request): koinos.rpc.chain.get_fork_heads_request;

                /**
                 * Encodes the specified get_fork_heads_request message. Does not implicitly {@link koinos.rpc.chain.get_fork_heads_request.verify|verify} messages.
                 * @param message get_fork_heads_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.chain.Iget_fork_heads_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_fork_heads_request message, length delimited. Does not implicitly {@link koinos.rpc.chain.get_fork_heads_request.verify|verify} messages.
                 * @param message get_fork_heads_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.chain.Iget_fork_heads_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_fork_heads_request message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_fork_heads_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.chain.get_fork_heads_request;

                /**
                 * Decodes a get_fork_heads_request message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_fork_heads_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.chain.get_fork_heads_request;

                /**
                 * Verifies a get_fork_heads_request message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_fork_heads_request message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_fork_heads_request
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.chain.get_fork_heads_request;

                /**
                 * Creates a plain object from a get_fork_heads_request message. Also converts values to other types if specified.
                 * @param message get_fork_heads_request
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.chain.get_fork_heads_request, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_fork_heads_request to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_fork_heads_response. */
            interface Iget_fork_heads_response {

                /** get_fork_heads_response last_irreversible_block */
                last_irreversible_block?: (koinos.Iblock_topology|null);

                /** get_fork_heads_response fork_heads */
                fork_heads?: (koinos.Iblock_topology[]|null);
            }

            /** Represents a get_fork_heads_response. */
            class get_fork_heads_response implements Iget_fork_heads_response {

                /**
                 * Constructs a new get_fork_heads_response.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.chain.Iget_fork_heads_response);

                /** get_fork_heads_response last_irreversible_block. */
                public last_irreversible_block?: (koinos.Iblock_topology|null);

                /** get_fork_heads_response fork_heads. */
                public fork_heads: koinos.Iblock_topology[];

                /**
                 * Creates a new get_fork_heads_response instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_fork_heads_response instance
                 */
                public static create(properties?: koinos.rpc.chain.Iget_fork_heads_response): koinos.rpc.chain.get_fork_heads_response;

                /**
                 * Encodes the specified get_fork_heads_response message. Does not implicitly {@link koinos.rpc.chain.get_fork_heads_response.verify|verify} messages.
                 * @param message get_fork_heads_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.chain.Iget_fork_heads_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_fork_heads_response message, length delimited. Does not implicitly {@link koinos.rpc.chain.get_fork_heads_response.verify|verify} messages.
                 * @param message get_fork_heads_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.chain.Iget_fork_heads_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_fork_heads_response message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_fork_heads_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.chain.get_fork_heads_response;

                /**
                 * Decodes a get_fork_heads_response message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_fork_heads_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.chain.get_fork_heads_response;

                /**
                 * Verifies a get_fork_heads_response message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_fork_heads_response message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_fork_heads_response
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.chain.get_fork_heads_response;

                /**
                 * Creates a plain object from a get_fork_heads_response message. Also converts values to other types if specified.
                 * @param message get_fork_heads_response
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.chain.get_fork_heads_response, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_fork_heads_response to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a read_contract_request. */
            interface Iread_contract_request {

                /** read_contract_request contract_id */
                contract_id?: (Uint8Array|null);

                /** read_contract_request entry_point */
                entry_point?: (number|null);

                /** read_contract_request args */
                args?: (Uint8Array|null);
            }

            /** Represents a read_contract_request. */
            class read_contract_request implements Iread_contract_request {

                /**
                 * Constructs a new read_contract_request.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.chain.Iread_contract_request);

                /** read_contract_request contract_id. */
                public contract_id: Uint8Array;

                /** read_contract_request entry_point. */
                public entry_point: number;

                /** read_contract_request args. */
                public args: Uint8Array;

                /**
                 * Creates a new read_contract_request instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns read_contract_request instance
                 */
                public static create(properties?: koinos.rpc.chain.Iread_contract_request): koinos.rpc.chain.read_contract_request;

                /**
                 * Encodes the specified read_contract_request message. Does not implicitly {@link koinos.rpc.chain.read_contract_request.verify|verify} messages.
                 * @param message read_contract_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.chain.Iread_contract_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified read_contract_request message, length delimited. Does not implicitly {@link koinos.rpc.chain.read_contract_request.verify|verify} messages.
                 * @param message read_contract_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.chain.Iread_contract_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a read_contract_request message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns read_contract_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.chain.read_contract_request;

                /**
                 * Decodes a read_contract_request message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns read_contract_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.chain.read_contract_request;

                /**
                 * Verifies a read_contract_request message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a read_contract_request message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns read_contract_request
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.chain.read_contract_request;

                /**
                 * Creates a plain object from a read_contract_request message. Also converts values to other types if specified.
                 * @param message read_contract_request
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.chain.read_contract_request, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this read_contract_request to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a read_contract_response. */
            interface Iread_contract_response {

                /** read_contract_response result */
                result?: (Uint8Array|null);

                /** read_contract_response logs */
                logs?: (string[]|null);
            }

            /** Represents a read_contract_response. */
            class read_contract_response implements Iread_contract_response {

                /**
                 * Constructs a new read_contract_response.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.chain.Iread_contract_response);

                /** read_contract_response result. */
                public result: Uint8Array;

                /** read_contract_response logs. */
                public logs: string[];

                /**
                 * Creates a new read_contract_response instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns read_contract_response instance
                 */
                public static create(properties?: koinos.rpc.chain.Iread_contract_response): koinos.rpc.chain.read_contract_response;

                /**
                 * Encodes the specified read_contract_response message. Does not implicitly {@link koinos.rpc.chain.read_contract_response.verify|verify} messages.
                 * @param message read_contract_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.chain.Iread_contract_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified read_contract_response message, length delimited. Does not implicitly {@link koinos.rpc.chain.read_contract_response.verify|verify} messages.
                 * @param message read_contract_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.chain.Iread_contract_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a read_contract_response message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns read_contract_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.chain.read_contract_response;

                /**
                 * Decodes a read_contract_response message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns read_contract_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.chain.read_contract_response;

                /**
                 * Verifies a read_contract_response message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a read_contract_response message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns read_contract_response
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.chain.read_contract_response;

                /**
                 * Creates a plain object from a read_contract_response message. Also converts values to other types if specified.
                 * @param message read_contract_response
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.chain.read_contract_response, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this read_contract_response to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_account_nonce_request. */
            interface Iget_account_nonce_request {

                /** get_account_nonce_request account */
                account?: (Uint8Array|null);
            }

            /** Represents a get_account_nonce_request. */
            class get_account_nonce_request implements Iget_account_nonce_request {

                /**
                 * Constructs a new get_account_nonce_request.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.chain.Iget_account_nonce_request);

                /** get_account_nonce_request account. */
                public account: Uint8Array;

                /**
                 * Creates a new get_account_nonce_request instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_account_nonce_request instance
                 */
                public static create(properties?: koinos.rpc.chain.Iget_account_nonce_request): koinos.rpc.chain.get_account_nonce_request;

                /**
                 * Encodes the specified get_account_nonce_request message. Does not implicitly {@link koinos.rpc.chain.get_account_nonce_request.verify|verify} messages.
                 * @param message get_account_nonce_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.chain.Iget_account_nonce_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_account_nonce_request message, length delimited. Does not implicitly {@link koinos.rpc.chain.get_account_nonce_request.verify|verify} messages.
                 * @param message get_account_nonce_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.chain.Iget_account_nonce_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_account_nonce_request message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_account_nonce_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.chain.get_account_nonce_request;

                /**
                 * Decodes a get_account_nonce_request message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_account_nonce_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.chain.get_account_nonce_request;

                /**
                 * Verifies a get_account_nonce_request message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_account_nonce_request message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_account_nonce_request
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.chain.get_account_nonce_request;

                /**
                 * Creates a plain object from a get_account_nonce_request message. Also converts values to other types if specified.
                 * @param message get_account_nonce_request
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.chain.get_account_nonce_request, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_account_nonce_request to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_account_nonce_response. */
            interface Iget_account_nonce_response {

                /** get_account_nonce_response nonce */
                nonce?: (Uint8Array|null);
            }

            /** Represents a get_account_nonce_response. */
            class get_account_nonce_response implements Iget_account_nonce_response {

                /**
                 * Constructs a new get_account_nonce_response.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.chain.Iget_account_nonce_response);

                /** get_account_nonce_response nonce. */
                public nonce: Uint8Array;

                /**
                 * Creates a new get_account_nonce_response instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_account_nonce_response instance
                 */
                public static create(properties?: koinos.rpc.chain.Iget_account_nonce_response): koinos.rpc.chain.get_account_nonce_response;

                /**
                 * Encodes the specified get_account_nonce_response message. Does not implicitly {@link koinos.rpc.chain.get_account_nonce_response.verify|verify} messages.
                 * @param message get_account_nonce_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.chain.Iget_account_nonce_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_account_nonce_response message, length delimited. Does not implicitly {@link koinos.rpc.chain.get_account_nonce_response.verify|verify} messages.
                 * @param message get_account_nonce_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.chain.Iget_account_nonce_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_account_nonce_response message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_account_nonce_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.chain.get_account_nonce_response;

                /**
                 * Decodes a get_account_nonce_response message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_account_nonce_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.chain.get_account_nonce_response;

                /**
                 * Verifies a get_account_nonce_response message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_account_nonce_response message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_account_nonce_response
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.chain.get_account_nonce_response;

                /**
                 * Creates a plain object from a get_account_nonce_response message. Also converts values to other types if specified.
                 * @param message get_account_nonce_response
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.chain.get_account_nonce_response, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_account_nonce_response to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_account_rc_request. */
            interface Iget_account_rc_request {

                /** get_account_rc_request account */
                account?: (Uint8Array|null);
            }

            /** Represents a get_account_rc_request. */
            class get_account_rc_request implements Iget_account_rc_request {

                /**
                 * Constructs a new get_account_rc_request.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.chain.Iget_account_rc_request);

                /** get_account_rc_request account. */
                public account: Uint8Array;

                /**
                 * Creates a new get_account_rc_request instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_account_rc_request instance
                 */
                public static create(properties?: koinos.rpc.chain.Iget_account_rc_request): koinos.rpc.chain.get_account_rc_request;

                /**
                 * Encodes the specified get_account_rc_request message. Does not implicitly {@link koinos.rpc.chain.get_account_rc_request.verify|verify} messages.
                 * @param message get_account_rc_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.chain.Iget_account_rc_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_account_rc_request message, length delimited. Does not implicitly {@link koinos.rpc.chain.get_account_rc_request.verify|verify} messages.
                 * @param message get_account_rc_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.chain.Iget_account_rc_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_account_rc_request message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_account_rc_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.chain.get_account_rc_request;

                /**
                 * Decodes a get_account_rc_request message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_account_rc_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.chain.get_account_rc_request;

                /**
                 * Verifies a get_account_rc_request message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_account_rc_request message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_account_rc_request
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.chain.get_account_rc_request;

                /**
                 * Creates a plain object from a get_account_rc_request message. Also converts values to other types if specified.
                 * @param message get_account_rc_request
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.chain.get_account_rc_request, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_account_rc_request to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_account_rc_response. */
            interface Iget_account_rc_response {

                /** get_account_rc_response rc */
                rc?: (number|Long|null);
            }

            /** Represents a get_account_rc_response. */
            class get_account_rc_response implements Iget_account_rc_response {

                /**
                 * Constructs a new get_account_rc_response.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.chain.Iget_account_rc_response);

                /** get_account_rc_response rc. */
                public rc: (number|Long);

                /**
                 * Creates a new get_account_rc_response instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_account_rc_response instance
                 */
                public static create(properties?: koinos.rpc.chain.Iget_account_rc_response): koinos.rpc.chain.get_account_rc_response;

                /**
                 * Encodes the specified get_account_rc_response message. Does not implicitly {@link koinos.rpc.chain.get_account_rc_response.verify|verify} messages.
                 * @param message get_account_rc_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.chain.Iget_account_rc_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_account_rc_response message, length delimited. Does not implicitly {@link koinos.rpc.chain.get_account_rc_response.verify|verify} messages.
                 * @param message get_account_rc_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.chain.Iget_account_rc_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_account_rc_response message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_account_rc_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.chain.get_account_rc_response;

                /**
                 * Decodes a get_account_rc_response message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_account_rc_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.chain.get_account_rc_response;

                /**
                 * Verifies a get_account_rc_response message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_account_rc_response message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_account_rc_response
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.chain.get_account_rc_response;

                /**
                 * Creates a plain object from a get_account_rc_response message. Also converts values to other types if specified.
                 * @param message get_account_rc_response
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.chain.get_account_rc_response, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_account_rc_response to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_resource_limits_request. */
            interface Iget_resource_limits_request {
            }

            /** Represents a get_resource_limits_request. */
            class get_resource_limits_request implements Iget_resource_limits_request {

                /**
                 * Constructs a new get_resource_limits_request.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.chain.Iget_resource_limits_request);

                /**
                 * Creates a new get_resource_limits_request instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_resource_limits_request instance
                 */
                public static create(properties?: koinos.rpc.chain.Iget_resource_limits_request): koinos.rpc.chain.get_resource_limits_request;

                /**
                 * Encodes the specified get_resource_limits_request message. Does not implicitly {@link koinos.rpc.chain.get_resource_limits_request.verify|verify} messages.
                 * @param message get_resource_limits_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.chain.Iget_resource_limits_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_resource_limits_request message, length delimited. Does not implicitly {@link koinos.rpc.chain.get_resource_limits_request.verify|verify} messages.
                 * @param message get_resource_limits_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.chain.Iget_resource_limits_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_resource_limits_request message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_resource_limits_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.chain.get_resource_limits_request;

                /**
                 * Decodes a get_resource_limits_request message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_resource_limits_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.chain.get_resource_limits_request;

                /**
                 * Verifies a get_resource_limits_request message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_resource_limits_request message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_resource_limits_request
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.chain.get_resource_limits_request;

                /**
                 * Creates a plain object from a get_resource_limits_request message. Also converts values to other types if specified.
                 * @param message get_resource_limits_request
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.chain.get_resource_limits_request, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_resource_limits_request to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_resource_limits_response. */
            interface Iget_resource_limits_response {

                /** get_resource_limits_response resource_limit_data */
                resource_limit_data?: (koinos.chain.Iresource_limit_data|null);
            }

            /** Represents a get_resource_limits_response. */
            class get_resource_limits_response implements Iget_resource_limits_response {

                /**
                 * Constructs a new get_resource_limits_response.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.chain.Iget_resource_limits_response);

                /** get_resource_limits_response resource_limit_data. */
                public resource_limit_data?: (koinos.chain.Iresource_limit_data|null);

                /**
                 * Creates a new get_resource_limits_response instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_resource_limits_response instance
                 */
                public static create(properties?: koinos.rpc.chain.Iget_resource_limits_response): koinos.rpc.chain.get_resource_limits_response;

                /**
                 * Encodes the specified get_resource_limits_response message. Does not implicitly {@link koinos.rpc.chain.get_resource_limits_response.verify|verify} messages.
                 * @param message get_resource_limits_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.chain.Iget_resource_limits_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_resource_limits_response message, length delimited. Does not implicitly {@link koinos.rpc.chain.get_resource_limits_response.verify|verify} messages.
                 * @param message get_resource_limits_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.chain.Iget_resource_limits_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_resource_limits_response message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_resource_limits_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.chain.get_resource_limits_response;

                /**
                 * Decodes a get_resource_limits_response message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_resource_limits_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.chain.get_resource_limits_response;

                /**
                 * Verifies a get_resource_limits_response message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_resource_limits_response message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_resource_limits_response
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.chain.get_resource_limits_response;

                /**
                 * Creates a plain object from a get_resource_limits_response message. Also converts values to other types if specified.
                 * @param message get_resource_limits_response
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.chain.get_resource_limits_response, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_resource_limits_response to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an invoke_system_call_request. */
            interface Iinvoke_system_call_request {

                /** invoke_system_call_request id */
                id?: (number|Long|null);

                /** invoke_system_call_request name */
                name?: (string|null);

                /** invoke_system_call_request args */
                args?: (Uint8Array|null);

                /** invoke_system_call_request caller_data */
                caller_data?: (koinos.chain.Icaller_data|null);
            }

            /** Represents an invoke_system_call_request. */
            class invoke_system_call_request implements Iinvoke_system_call_request {

                /**
                 * Constructs a new invoke_system_call_request.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.chain.Iinvoke_system_call_request);

                /** invoke_system_call_request id. */
                public id?: (number|Long|null);

                /** invoke_system_call_request name. */
                public name?: (string|null);

                /** invoke_system_call_request args. */
                public args: Uint8Array;

                /** invoke_system_call_request caller_data. */
                public caller_data?: (koinos.chain.Icaller_data|null);

                /** invoke_system_call_request system_call. */
                public system_call?: ("id"|"name");

                /** invoke_system_call_request _caller_data. */
                public _caller_data?: "caller_data";

                /**
                 * Creates a new invoke_system_call_request instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns invoke_system_call_request instance
                 */
                public static create(properties?: koinos.rpc.chain.Iinvoke_system_call_request): koinos.rpc.chain.invoke_system_call_request;

                /**
                 * Encodes the specified invoke_system_call_request message. Does not implicitly {@link koinos.rpc.chain.invoke_system_call_request.verify|verify} messages.
                 * @param message invoke_system_call_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.chain.Iinvoke_system_call_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified invoke_system_call_request message, length delimited. Does not implicitly {@link koinos.rpc.chain.invoke_system_call_request.verify|verify} messages.
                 * @param message invoke_system_call_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.chain.Iinvoke_system_call_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an invoke_system_call_request message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns invoke_system_call_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.chain.invoke_system_call_request;

                /**
                 * Decodes an invoke_system_call_request message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns invoke_system_call_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.chain.invoke_system_call_request;

                /**
                 * Verifies an invoke_system_call_request message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an invoke_system_call_request message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns invoke_system_call_request
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.chain.invoke_system_call_request;

                /**
                 * Creates a plain object from an invoke_system_call_request message. Also converts values to other types if specified.
                 * @param message invoke_system_call_request
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.chain.invoke_system_call_request, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this invoke_system_call_request to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an invoke_system_call_response. */
            interface Iinvoke_system_call_response {

                /** invoke_system_call_response value */
                value?: (Uint8Array|null);
            }

            /** Represents an invoke_system_call_response. */
            class invoke_system_call_response implements Iinvoke_system_call_response {

                /**
                 * Constructs a new invoke_system_call_response.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.chain.Iinvoke_system_call_response);

                /** invoke_system_call_response value. */
                public value: Uint8Array;

                /**
                 * Creates a new invoke_system_call_response instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns invoke_system_call_response instance
                 */
                public static create(properties?: koinos.rpc.chain.Iinvoke_system_call_response): koinos.rpc.chain.invoke_system_call_response;

                /**
                 * Encodes the specified invoke_system_call_response message. Does not implicitly {@link koinos.rpc.chain.invoke_system_call_response.verify|verify} messages.
                 * @param message invoke_system_call_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.chain.Iinvoke_system_call_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified invoke_system_call_response message, length delimited. Does not implicitly {@link koinos.rpc.chain.invoke_system_call_response.verify|verify} messages.
                 * @param message invoke_system_call_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.chain.Iinvoke_system_call_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an invoke_system_call_response message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns invoke_system_call_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.chain.invoke_system_call_response;

                /**
                 * Decodes an invoke_system_call_response message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns invoke_system_call_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.chain.invoke_system_call_response;

                /**
                 * Verifies an invoke_system_call_response message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an invoke_system_call_response message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns invoke_system_call_response
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.chain.invoke_system_call_response;

                /**
                 * Creates a plain object from an invoke_system_call_response message. Also converts values to other types if specified.
                 * @param message invoke_system_call_response
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.chain.invoke_system_call_response, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this invoke_system_call_response to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a propose_block_request. */
            interface Ipropose_block_request {

                /** propose_block_request block */
                block?: (koinos.protocol.Iblock|null);
            }

            /** Represents a propose_block_request. */
            class propose_block_request implements Ipropose_block_request {

                /**
                 * Constructs a new propose_block_request.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.chain.Ipropose_block_request);

                /** propose_block_request block. */
                public block?: (koinos.protocol.Iblock|null);

                /**
                 * Creates a new propose_block_request instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns propose_block_request instance
                 */
                public static create(properties?: koinos.rpc.chain.Ipropose_block_request): koinos.rpc.chain.propose_block_request;

                /**
                 * Encodes the specified propose_block_request message. Does not implicitly {@link koinos.rpc.chain.propose_block_request.verify|verify} messages.
                 * @param message propose_block_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.chain.Ipropose_block_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified propose_block_request message, length delimited. Does not implicitly {@link koinos.rpc.chain.propose_block_request.verify|verify} messages.
                 * @param message propose_block_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.chain.Ipropose_block_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a propose_block_request message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns propose_block_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.chain.propose_block_request;

                /**
                 * Decodes a propose_block_request message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns propose_block_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.chain.propose_block_request;

                /**
                 * Verifies a propose_block_request message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a propose_block_request message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns propose_block_request
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.chain.propose_block_request;

                /**
                 * Creates a plain object from a propose_block_request message. Also converts values to other types if specified.
                 * @param message propose_block_request
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.chain.propose_block_request, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this propose_block_request to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a propose_block_response. */
            interface Ipropose_block_response {

                /** propose_block_response receipt */
                receipt?: (koinos.protocol.Iblock_receipt|null);

                /** propose_block_response failed_transaction_indices */
                failed_transaction_indices?: (number[]|null);
            }

            /** Represents a propose_block_response. */
            class propose_block_response implements Ipropose_block_response {

                /**
                 * Constructs a new propose_block_response.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.chain.Ipropose_block_response);

                /** propose_block_response receipt. */
                public receipt?: (koinos.protocol.Iblock_receipt|null);

                /** propose_block_response failed_transaction_indices. */
                public failed_transaction_indices: number[];

                /** propose_block_response _receipt. */
                public _receipt?: "receipt";

                /**
                 * Creates a new propose_block_response instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns propose_block_response instance
                 */
                public static create(properties?: koinos.rpc.chain.Ipropose_block_response): koinos.rpc.chain.propose_block_response;

                /**
                 * Encodes the specified propose_block_response message. Does not implicitly {@link koinos.rpc.chain.propose_block_response.verify|verify} messages.
                 * @param message propose_block_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.chain.Ipropose_block_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified propose_block_response message, length delimited. Does not implicitly {@link koinos.rpc.chain.propose_block_response.verify|verify} messages.
                 * @param message propose_block_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.chain.Ipropose_block_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a propose_block_response message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns propose_block_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.chain.propose_block_response;

                /**
                 * Decodes a propose_block_response message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns propose_block_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.chain.propose_block_response;

                /**
                 * Verifies a propose_block_response message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a propose_block_response message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns propose_block_response
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.chain.propose_block_response;

                /**
                 * Creates a plain object from a propose_block_response message. Also converts values to other types if specified.
                 * @param message propose_block_response
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.chain.propose_block_response, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this propose_block_response to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a chain_request. */
            interface Ichain_request {

                /** chain_request reserved */
                reserved?: (koinos.rpc.Ireserved_rpc|null);

                /** chain_request submit_block */
                submit_block?: (koinos.rpc.chain.Isubmit_block_request|null);

                /** chain_request submit_transaction */
                submit_transaction?: (koinos.rpc.chain.Isubmit_transaction_request|null);

                /** chain_request get_head_info */
                get_head_info?: (koinos.rpc.chain.Iget_head_info_request|null);

                /** chain_request get_chain_id */
                get_chain_id?: (koinos.rpc.chain.Iget_chain_id_request|null);

                /** chain_request get_fork_heads */
                get_fork_heads?: (koinos.rpc.chain.Iget_fork_heads_request|null);

                /** chain_request read_contract */
                read_contract?: (koinos.rpc.chain.Iread_contract_request|null);

                /** chain_request get_account_nonce */
                get_account_nonce?: (koinos.rpc.chain.Iget_account_nonce_request|null);

                /** chain_request get_account_rc */
                get_account_rc?: (koinos.rpc.chain.Iget_account_rc_request|null);

                /** chain_request get_resource_limits */
                get_resource_limits?: (koinos.rpc.chain.Iget_resource_limits_request|null);

                /** chain_request invoke_system_call */
                invoke_system_call?: (koinos.rpc.chain.Iinvoke_system_call_request|null);

                /** chain_request propose_block */
                propose_block?: (koinos.rpc.chain.Ipropose_block_request|null);
            }

            /** Represents a chain_request. */
            class chain_request implements Ichain_request {

                /**
                 * Constructs a new chain_request.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.chain.Ichain_request);

                /** chain_request reserved. */
                public reserved?: (koinos.rpc.Ireserved_rpc|null);

                /** chain_request submit_block. */
                public submit_block?: (koinos.rpc.chain.Isubmit_block_request|null);

                /** chain_request submit_transaction. */
                public submit_transaction?: (koinos.rpc.chain.Isubmit_transaction_request|null);

                /** chain_request get_head_info. */
                public get_head_info?: (koinos.rpc.chain.Iget_head_info_request|null);

                /** chain_request get_chain_id. */
                public get_chain_id?: (koinos.rpc.chain.Iget_chain_id_request|null);

                /** chain_request get_fork_heads. */
                public get_fork_heads?: (koinos.rpc.chain.Iget_fork_heads_request|null);

                /** chain_request read_contract. */
                public read_contract?: (koinos.rpc.chain.Iread_contract_request|null);

                /** chain_request get_account_nonce. */
                public get_account_nonce?: (koinos.rpc.chain.Iget_account_nonce_request|null);

                /** chain_request get_account_rc. */
                public get_account_rc?: (koinos.rpc.chain.Iget_account_rc_request|null);

                /** chain_request get_resource_limits. */
                public get_resource_limits?: (koinos.rpc.chain.Iget_resource_limits_request|null);

                /** chain_request invoke_system_call. */
                public invoke_system_call?: (koinos.rpc.chain.Iinvoke_system_call_request|null);

                /** chain_request propose_block. */
                public propose_block?: (koinos.rpc.chain.Ipropose_block_request|null);

                /** chain_request request. */
                public request?: ("reserved"|"submit_block"|"submit_transaction"|"get_head_info"|"get_chain_id"|"get_fork_heads"|"read_contract"|"get_account_nonce"|"get_account_rc"|"get_resource_limits"|"invoke_system_call"|"propose_block");

                /**
                 * Creates a new chain_request instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns chain_request instance
                 */
                public static create(properties?: koinos.rpc.chain.Ichain_request): koinos.rpc.chain.chain_request;

                /**
                 * Encodes the specified chain_request message. Does not implicitly {@link koinos.rpc.chain.chain_request.verify|verify} messages.
                 * @param message chain_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.chain.Ichain_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified chain_request message, length delimited. Does not implicitly {@link koinos.rpc.chain.chain_request.verify|verify} messages.
                 * @param message chain_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.chain.Ichain_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a chain_request message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns chain_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.chain.chain_request;

                /**
                 * Decodes a chain_request message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns chain_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.chain.chain_request;

                /**
                 * Verifies a chain_request message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a chain_request message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns chain_request
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.chain.chain_request;

                /**
                 * Creates a plain object from a chain_request message. Also converts values to other types if specified.
                 * @param message chain_request
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.chain.chain_request, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this chain_request to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a chain_response. */
            interface Ichain_response {

                /** chain_response reserved */
                reserved?: (koinos.rpc.Ireserved_rpc|null);

                /** chain_response error */
                error?: (koinos.rpc.Ierror_status|null);

                /** chain_response submit_block */
                submit_block?: (koinos.rpc.chain.Isubmit_block_response|null);

                /** chain_response submit_transaction */
                submit_transaction?: (koinos.rpc.chain.Isubmit_transaction_response|null);

                /** chain_response get_head_info */
                get_head_info?: (koinos.rpc.chain.Iget_head_info_response|null);

                /** chain_response get_chain_id */
                get_chain_id?: (koinos.rpc.chain.Iget_chain_id_response|null);

                /** chain_response get_fork_heads */
                get_fork_heads?: (koinos.rpc.chain.Iget_fork_heads_response|null);

                /** chain_response read_contract */
                read_contract?: (koinos.rpc.chain.Iread_contract_response|null);

                /** chain_response get_account_nonce */
                get_account_nonce?: (koinos.rpc.chain.Iget_account_nonce_response|null);

                /** chain_response get_account_rc */
                get_account_rc?: (koinos.rpc.chain.Iget_account_rc_response|null);

                /** chain_response get_resource_limits */
                get_resource_limits?: (koinos.rpc.chain.Iget_resource_limits_response|null);

                /** chain_response invoke_system_call */
                invoke_system_call?: (koinos.rpc.chain.Iinvoke_system_call_response|null);

                /** chain_response propose_block */
                propose_block?: (koinos.rpc.chain.Ipropose_block_response|null);
            }

            /** Represents a chain_response. */
            class chain_response implements Ichain_response {

                /**
                 * Constructs a new chain_response.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.chain.Ichain_response);

                /** chain_response reserved. */
                public reserved?: (koinos.rpc.Ireserved_rpc|null);

                /** chain_response error. */
                public error?: (koinos.rpc.Ierror_status|null);

                /** chain_response submit_block. */
                public submit_block?: (koinos.rpc.chain.Isubmit_block_response|null);

                /** chain_response submit_transaction. */
                public submit_transaction?: (koinos.rpc.chain.Isubmit_transaction_response|null);

                /** chain_response get_head_info. */
                public get_head_info?: (koinos.rpc.chain.Iget_head_info_response|null);

                /** chain_response get_chain_id. */
                public get_chain_id?: (koinos.rpc.chain.Iget_chain_id_response|null);

                /** chain_response get_fork_heads. */
                public get_fork_heads?: (koinos.rpc.chain.Iget_fork_heads_response|null);

                /** chain_response read_contract. */
                public read_contract?: (koinos.rpc.chain.Iread_contract_response|null);

                /** chain_response get_account_nonce. */
                public get_account_nonce?: (koinos.rpc.chain.Iget_account_nonce_response|null);

                /** chain_response get_account_rc. */
                public get_account_rc?: (koinos.rpc.chain.Iget_account_rc_response|null);

                /** chain_response get_resource_limits. */
                public get_resource_limits?: (koinos.rpc.chain.Iget_resource_limits_response|null);

                /** chain_response invoke_system_call. */
                public invoke_system_call?: (koinos.rpc.chain.Iinvoke_system_call_response|null);

                /** chain_response propose_block. */
                public propose_block?: (koinos.rpc.chain.Ipropose_block_response|null);

                /** chain_response response. */
                public response?: ("reserved"|"error"|"submit_block"|"submit_transaction"|"get_head_info"|"get_chain_id"|"get_fork_heads"|"read_contract"|"get_account_nonce"|"get_account_rc"|"get_resource_limits"|"invoke_system_call"|"propose_block");

                /**
                 * Creates a new chain_response instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns chain_response instance
                 */
                public static create(properties?: koinos.rpc.chain.Ichain_response): koinos.rpc.chain.chain_response;

                /**
                 * Encodes the specified chain_response message. Does not implicitly {@link koinos.rpc.chain.chain_response.verify|verify} messages.
                 * @param message chain_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.chain.Ichain_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified chain_response message, length delimited. Does not implicitly {@link koinos.rpc.chain.chain_response.verify|verify} messages.
                 * @param message chain_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.chain.Ichain_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a chain_response message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns chain_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.chain.chain_response;

                /**
                 * Decodes a chain_response message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns chain_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.chain.chain_response;

                /**
                 * Verifies a chain_response message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a chain_response message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns chain_response
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.chain.chain_response;

                /**
                 * Creates a plain object from a chain_response message. Also converts values to other types if specified.
                 * @param message chain_response
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.chain.chain_response, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this chain_response to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Namespace transaction_store. */
        namespace transaction_store {

            /** Properties of a get_transactions_by_id_request. */
            interface Iget_transactions_by_id_request {

                /** get_transactions_by_id_request transaction_ids */
                transaction_ids?: (Uint8Array[]|null);
            }

            /** Represents a get_transactions_by_id_request. */
            class get_transactions_by_id_request implements Iget_transactions_by_id_request {

                /**
                 * Constructs a new get_transactions_by_id_request.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.transaction_store.Iget_transactions_by_id_request);

                /** get_transactions_by_id_request transaction_ids. */
                public transaction_ids: Uint8Array[];

                /**
                 * Creates a new get_transactions_by_id_request instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_transactions_by_id_request instance
                 */
                public static create(properties?: koinos.rpc.transaction_store.Iget_transactions_by_id_request): koinos.rpc.transaction_store.get_transactions_by_id_request;

                /**
                 * Encodes the specified get_transactions_by_id_request message. Does not implicitly {@link koinos.rpc.transaction_store.get_transactions_by_id_request.verify|verify} messages.
                 * @param message get_transactions_by_id_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.transaction_store.Iget_transactions_by_id_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_transactions_by_id_request message, length delimited. Does not implicitly {@link koinos.rpc.transaction_store.get_transactions_by_id_request.verify|verify} messages.
                 * @param message get_transactions_by_id_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.transaction_store.Iget_transactions_by_id_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_transactions_by_id_request message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_transactions_by_id_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.transaction_store.get_transactions_by_id_request;

                /**
                 * Decodes a get_transactions_by_id_request message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_transactions_by_id_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.transaction_store.get_transactions_by_id_request;

                /**
                 * Verifies a get_transactions_by_id_request message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_transactions_by_id_request message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_transactions_by_id_request
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.transaction_store.get_transactions_by_id_request;

                /**
                 * Creates a plain object from a get_transactions_by_id_request message. Also converts values to other types if specified.
                 * @param message get_transactions_by_id_request
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.transaction_store.get_transactions_by_id_request, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_transactions_by_id_request to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_transactions_by_id_response. */
            interface Iget_transactions_by_id_response {

                /** get_transactions_by_id_response transactions */
                transactions?: (koinos.transaction_store.Itransaction_item[]|null);
            }

            /** Represents a get_transactions_by_id_response. */
            class get_transactions_by_id_response implements Iget_transactions_by_id_response {

                /**
                 * Constructs a new get_transactions_by_id_response.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.transaction_store.Iget_transactions_by_id_response);

                /** get_transactions_by_id_response transactions. */
                public transactions: koinos.transaction_store.Itransaction_item[];

                /**
                 * Creates a new get_transactions_by_id_response instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_transactions_by_id_response instance
                 */
                public static create(properties?: koinos.rpc.transaction_store.Iget_transactions_by_id_response): koinos.rpc.transaction_store.get_transactions_by_id_response;

                /**
                 * Encodes the specified get_transactions_by_id_response message. Does not implicitly {@link koinos.rpc.transaction_store.get_transactions_by_id_response.verify|verify} messages.
                 * @param message get_transactions_by_id_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.transaction_store.Iget_transactions_by_id_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_transactions_by_id_response message, length delimited. Does not implicitly {@link koinos.rpc.transaction_store.get_transactions_by_id_response.verify|verify} messages.
                 * @param message get_transactions_by_id_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.transaction_store.Iget_transactions_by_id_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_transactions_by_id_response message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_transactions_by_id_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.transaction_store.get_transactions_by_id_response;

                /**
                 * Decodes a get_transactions_by_id_response message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_transactions_by_id_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.transaction_store.get_transactions_by_id_response;

                /**
                 * Verifies a get_transactions_by_id_response message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_transactions_by_id_response message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_transactions_by_id_response
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.transaction_store.get_transactions_by_id_response;

                /**
                 * Creates a plain object from a get_transactions_by_id_response message. Also converts values to other types if specified.
                 * @param message get_transactions_by_id_response
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.transaction_store.get_transactions_by_id_response, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_transactions_by_id_response to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a transaction_store_request. */
            interface Itransaction_store_request {

                /** transaction_store_request reserved */
                reserved?: (koinos.rpc.Ireserved_rpc|null);

                /** transaction_store_request get_transactions_by_id */
                get_transactions_by_id?: (koinos.rpc.transaction_store.Iget_transactions_by_id_request|null);
            }

            /** Represents a transaction_store_request. */
            class transaction_store_request implements Itransaction_store_request {

                /**
                 * Constructs a new transaction_store_request.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.transaction_store.Itransaction_store_request);

                /** transaction_store_request reserved. */
                public reserved?: (koinos.rpc.Ireserved_rpc|null);

                /** transaction_store_request get_transactions_by_id. */
                public get_transactions_by_id?: (koinos.rpc.transaction_store.Iget_transactions_by_id_request|null);

                /** transaction_store_request request. */
                public request?: ("reserved"|"get_transactions_by_id");

                /**
                 * Creates a new transaction_store_request instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns transaction_store_request instance
                 */
                public static create(properties?: koinos.rpc.transaction_store.Itransaction_store_request): koinos.rpc.transaction_store.transaction_store_request;

                /**
                 * Encodes the specified transaction_store_request message. Does not implicitly {@link koinos.rpc.transaction_store.transaction_store_request.verify|verify} messages.
                 * @param message transaction_store_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.transaction_store.Itransaction_store_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified transaction_store_request message, length delimited. Does not implicitly {@link koinos.rpc.transaction_store.transaction_store_request.verify|verify} messages.
                 * @param message transaction_store_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.transaction_store.Itransaction_store_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a transaction_store_request message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns transaction_store_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.transaction_store.transaction_store_request;

                /**
                 * Decodes a transaction_store_request message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns transaction_store_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.transaction_store.transaction_store_request;

                /**
                 * Verifies a transaction_store_request message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a transaction_store_request message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns transaction_store_request
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.transaction_store.transaction_store_request;

                /**
                 * Creates a plain object from a transaction_store_request message. Also converts values to other types if specified.
                 * @param message transaction_store_request
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.transaction_store.transaction_store_request, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this transaction_store_request to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a transaction_store_response. */
            interface Itransaction_store_response {

                /** transaction_store_response reserved */
                reserved?: (koinos.rpc.Ireserved_rpc|null);

                /** transaction_store_response error */
                error?: (koinos.rpc.Ierror_status|null);

                /** transaction_store_response get_transactions_by_id */
                get_transactions_by_id?: (koinos.rpc.transaction_store.Iget_transactions_by_id_response|null);
            }

            /** Represents a transaction_store_response. */
            class transaction_store_response implements Itransaction_store_response {

                /**
                 * Constructs a new transaction_store_response.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.transaction_store.Itransaction_store_response);

                /** transaction_store_response reserved. */
                public reserved?: (koinos.rpc.Ireserved_rpc|null);

                /** transaction_store_response error. */
                public error?: (koinos.rpc.Ierror_status|null);

                /** transaction_store_response get_transactions_by_id. */
                public get_transactions_by_id?: (koinos.rpc.transaction_store.Iget_transactions_by_id_response|null);

                /** transaction_store_response response. */
                public response?: ("reserved"|"error"|"get_transactions_by_id");

                /**
                 * Creates a new transaction_store_response instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns transaction_store_response instance
                 */
                public static create(properties?: koinos.rpc.transaction_store.Itransaction_store_response): koinos.rpc.transaction_store.transaction_store_response;

                /**
                 * Encodes the specified transaction_store_response message. Does not implicitly {@link koinos.rpc.transaction_store.transaction_store_response.verify|verify} messages.
                 * @param message transaction_store_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.transaction_store.Itransaction_store_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified transaction_store_response message, length delimited. Does not implicitly {@link koinos.rpc.transaction_store.transaction_store_response.verify|verify} messages.
                 * @param message transaction_store_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.transaction_store.Itransaction_store_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a transaction_store_response message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns transaction_store_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.transaction_store.transaction_store_response;

                /**
                 * Decodes a transaction_store_response message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns transaction_store_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.transaction_store.transaction_store_response;

                /**
                 * Verifies a transaction_store_response message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a transaction_store_response message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns transaction_store_response
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.transaction_store.transaction_store_response;

                /**
                 * Creates a plain object from a transaction_store_response message. Also converts values to other types if specified.
                 * @param message transaction_store_response
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.transaction_store.transaction_store_response, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this transaction_store_response to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Namespace contract_meta_store. */
        namespace contract_meta_store {

            /** Properties of a get_contract_meta_request. */
            interface Iget_contract_meta_request {

                /** get_contract_meta_request contract_id */
                contract_id?: (Uint8Array|null);
            }

            /** Represents a get_contract_meta_request. */
            class get_contract_meta_request implements Iget_contract_meta_request {

                /**
                 * Constructs a new get_contract_meta_request.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.contract_meta_store.Iget_contract_meta_request);

                /** get_contract_meta_request contract_id. */
                public contract_id: Uint8Array;

                /**
                 * Creates a new get_contract_meta_request instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_contract_meta_request instance
                 */
                public static create(properties?: koinos.rpc.contract_meta_store.Iget_contract_meta_request): koinos.rpc.contract_meta_store.get_contract_meta_request;

                /**
                 * Encodes the specified get_contract_meta_request message. Does not implicitly {@link koinos.rpc.contract_meta_store.get_contract_meta_request.verify|verify} messages.
                 * @param message get_contract_meta_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.contract_meta_store.Iget_contract_meta_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_contract_meta_request message, length delimited. Does not implicitly {@link koinos.rpc.contract_meta_store.get_contract_meta_request.verify|verify} messages.
                 * @param message get_contract_meta_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.contract_meta_store.Iget_contract_meta_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_contract_meta_request message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_contract_meta_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.contract_meta_store.get_contract_meta_request;

                /**
                 * Decodes a get_contract_meta_request message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_contract_meta_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.contract_meta_store.get_contract_meta_request;

                /**
                 * Verifies a get_contract_meta_request message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_contract_meta_request message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_contract_meta_request
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.contract_meta_store.get_contract_meta_request;

                /**
                 * Creates a plain object from a get_contract_meta_request message. Also converts values to other types if specified.
                 * @param message get_contract_meta_request
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.contract_meta_store.get_contract_meta_request, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_contract_meta_request to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_contract_meta_response. */
            interface Iget_contract_meta_response {

                /** get_contract_meta_response meta */
                meta?: (koinos.contract_meta_store.Icontract_meta_item|null);
            }

            /** Represents a get_contract_meta_response. */
            class get_contract_meta_response implements Iget_contract_meta_response {

                /**
                 * Constructs a new get_contract_meta_response.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.contract_meta_store.Iget_contract_meta_response);

                /** get_contract_meta_response meta. */
                public meta?: (koinos.contract_meta_store.Icontract_meta_item|null);

                /**
                 * Creates a new get_contract_meta_response instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_contract_meta_response instance
                 */
                public static create(properties?: koinos.rpc.contract_meta_store.Iget_contract_meta_response): koinos.rpc.contract_meta_store.get_contract_meta_response;

                /**
                 * Encodes the specified get_contract_meta_response message. Does not implicitly {@link koinos.rpc.contract_meta_store.get_contract_meta_response.verify|verify} messages.
                 * @param message get_contract_meta_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.contract_meta_store.Iget_contract_meta_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_contract_meta_response message, length delimited. Does not implicitly {@link koinos.rpc.contract_meta_store.get_contract_meta_response.verify|verify} messages.
                 * @param message get_contract_meta_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.contract_meta_store.Iget_contract_meta_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_contract_meta_response message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_contract_meta_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.contract_meta_store.get_contract_meta_response;

                /**
                 * Decodes a get_contract_meta_response message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_contract_meta_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.contract_meta_store.get_contract_meta_response;

                /**
                 * Verifies a get_contract_meta_response message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_contract_meta_response message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_contract_meta_response
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.contract_meta_store.get_contract_meta_response;

                /**
                 * Creates a plain object from a get_contract_meta_response message. Also converts values to other types if specified.
                 * @param message get_contract_meta_response
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.contract_meta_store.get_contract_meta_response, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_contract_meta_response to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a contract_meta_store_request. */
            interface Icontract_meta_store_request {

                /** contract_meta_store_request reserved */
                reserved?: (koinos.rpc.Ireserved_rpc|null);

                /** contract_meta_store_request get_contract_meta */
                get_contract_meta?: (koinos.rpc.contract_meta_store.Iget_contract_meta_request|null);
            }

            /** Represents a contract_meta_store_request. */
            class contract_meta_store_request implements Icontract_meta_store_request {

                /**
                 * Constructs a new contract_meta_store_request.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.contract_meta_store.Icontract_meta_store_request);

                /** contract_meta_store_request reserved. */
                public reserved?: (koinos.rpc.Ireserved_rpc|null);

                /** contract_meta_store_request get_contract_meta. */
                public get_contract_meta?: (koinos.rpc.contract_meta_store.Iget_contract_meta_request|null);

                /** contract_meta_store_request request. */
                public request?: ("reserved"|"get_contract_meta");

                /**
                 * Creates a new contract_meta_store_request instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns contract_meta_store_request instance
                 */
                public static create(properties?: koinos.rpc.contract_meta_store.Icontract_meta_store_request): koinos.rpc.contract_meta_store.contract_meta_store_request;

                /**
                 * Encodes the specified contract_meta_store_request message. Does not implicitly {@link koinos.rpc.contract_meta_store.contract_meta_store_request.verify|verify} messages.
                 * @param message contract_meta_store_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.contract_meta_store.Icontract_meta_store_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified contract_meta_store_request message, length delimited. Does not implicitly {@link koinos.rpc.contract_meta_store.contract_meta_store_request.verify|verify} messages.
                 * @param message contract_meta_store_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.contract_meta_store.Icontract_meta_store_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a contract_meta_store_request message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns contract_meta_store_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.contract_meta_store.contract_meta_store_request;

                /**
                 * Decodes a contract_meta_store_request message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns contract_meta_store_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.contract_meta_store.contract_meta_store_request;

                /**
                 * Verifies a contract_meta_store_request message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a contract_meta_store_request message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns contract_meta_store_request
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.contract_meta_store.contract_meta_store_request;

                /**
                 * Creates a plain object from a contract_meta_store_request message. Also converts values to other types if specified.
                 * @param message contract_meta_store_request
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.contract_meta_store.contract_meta_store_request, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this contract_meta_store_request to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a contract_meta_store_response. */
            interface Icontract_meta_store_response {

                /** contract_meta_store_response reserved */
                reserved?: (koinos.rpc.Ireserved_rpc|null);

                /** contract_meta_store_response error */
                error?: (koinos.rpc.Ierror_status|null);

                /** contract_meta_store_response get_contract_meta */
                get_contract_meta?: (koinos.rpc.contract_meta_store.Iget_contract_meta_response|null);
            }

            /** Represents a contract_meta_store_response. */
            class contract_meta_store_response implements Icontract_meta_store_response {

                /**
                 * Constructs a new contract_meta_store_response.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.contract_meta_store.Icontract_meta_store_response);

                /** contract_meta_store_response reserved. */
                public reserved?: (koinos.rpc.Ireserved_rpc|null);

                /** contract_meta_store_response error. */
                public error?: (koinos.rpc.Ierror_status|null);

                /** contract_meta_store_response get_contract_meta. */
                public get_contract_meta?: (koinos.rpc.contract_meta_store.Iget_contract_meta_response|null);

                /** contract_meta_store_response response. */
                public response?: ("reserved"|"error"|"get_contract_meta");

                /**
                 * Creates a new contract_meta_store_response instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns contract_meta_store_response instance
                 */
                public static create(properties?: koinos.rpc.contract_meta_store.Icontract_meta_store_response): koinos.rpc.contract_meta_store.contract_meta_store_response;

                /**
                 * Encodes the specified contract_meta_store_response message. Does not implicitly {@link koinos.rpc.contract_meta_store.contract_meta_store_response.verify|verify} messages.
                 * @param message contract_meta_store_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.contract_meta_store.Icontract_meta_store_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified contract_meta_store_response message, length delimited. Does not implicitly {@link koinos.rpc.contract_meta_store.contract_meta_store_response.verify|verify} messages.
                 * @param message contract_meta_store_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.contract_meta_store.Icontract_meta_store_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a contract_meta_store_response message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns contract_meta_store_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.contract_meta_store.contract_meta_store_response;

                /**
                 * Decodes a contract_meta_store_response message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns contract_meta_store_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.contract_meta_store.contract_meta_store_response;

                /**
                 * Verifies a contract_meta_store_response message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a contract_meta_store_response message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns contract_meta_store_response
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.contract_meta_store.contract_meta_store_response;

                /**
                 * Creates a plain object from a contract_meta_store_response message. Also converts values to other types if specified.
                 * @param message contract_meta_store_response
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.contract_meta_store.contract_meta_store_response, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this contract_meta_store_response to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Namespace p2p. */
        namespace p2p {

            /** Properties of a get_gossip_status_request. */
            interface Iget_gossip_status_request {
            }

            /** Represents a get_gossip_status_request. */
            class get_gossip_status_request implements Iget_gossip_status_request {

                /**
                 * Constructs a new get_gossip_status_request.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.p2p.Iget_gossip_status_request);

                /**
                 * Creates a new get_gossip_status_request instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_gossip_status_request instance
                 */
                public static create(properties?: koinos.rpc.p2p.Iget_gossip_status_request): koinos.rpc.p2p.get_gossip_status_request;

                /**
                 * Encodes the specified get_gossip_status_request message. Does not implicitly {@link koinos.rpc.p2p.get_gossip_status_request.verify|verify} messages.
                 * @param message get_gossip_status_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.p2p.Iget_gossip_status_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_gossip_status_request message, length delimited. Does not implicitly {@link koinos.rpc.p2p.get_gossip_status_request.verify|verify} messages.
                 * @param message get_gossip_status_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.p2p.Iget_gossip_status_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_gossip_status_request message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_gossip_status_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.p2p.get_gossip_status_request;

                /**
                 * Decodes a get_gossip_status_request message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_gossip_status_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.p2p.get_gossip_status_request;

                /**
                 * Verifies a get_gossip_status_request message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_gossip_status_request message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_gossip_status_request
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.p2p.get_gossip_status_request;

                /**
                 * Creates a plain object from a get_gossip_status_request message. Also converts values to other types if specified.
                 * @param message get_gossip_status_request
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.p2p.get_gossip_status_request, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_gossip_status_request to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_gossip_status_response. */
            interface Iget_gossip_status_response {

                /** get_gossip_status_response enabled */
                enabled?: (boolean|null);
            }

            /** Represents a get_gossip_status_response. */
            class get_gossip_status_response implements Iget_gossip_status_response {

                /**
                 * Constructs a new get_gossip_status_response.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.p2p.Iget_gossip_status_response);

                /** get_gossip_status_response enabled. */
                public enabled: boolean;

                /**
                 * Creates a new get_gossip_status_response instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_gossip_status_response instance
                 */
                public static create(properties?: koinos.rpc.p2p.Iget_gossip_status_response): koinos.rpc.p2p.get_gossip_status_response;

                /**
                 * Encodes the specified get_gossip_status_response message. Does not implicitly {@link koinos.rpc.p2p.get_gossip_status_response.verify|verify} messages.
                 * @param message get_gossip_status_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.p2p.Iget_gossip_status_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_gossip_status_response message, length delimited. Does not implicitly {@link koinos.rpc.p2p.get_gossip_status_response.verify|verify} messages.
                 * @param message get_gossip_status_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.p2p.Iget_gossip_status_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_gossip_status_response message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_gossip_status_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.p2p.get_gossip_status_response;

                /**
                 * Decodes a get_gossip_status_response message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_gossip_status_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.p2p.get_gossip_status_response;

                /**
                 * Verifies a get_gossip_status_response message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_gossip_status_response message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_gossip_status_response
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.p2p.get_gossip_status_response;

                /**
                 * Creates a plain object from a get_gossip_status_response message. Also converts values to other types if specified.
                 * @param message get_gossip_status_response
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.p2p.get_gossip_status_response, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_gossip_status_response to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a p2p_request. */
            interface Ip2p_request {

                /** p2p_request reserved */
                reserved?: (koinos.rpc.Ireserved_rpc|null);

                /** p2p_request get_gossip_status */
                get_gossip_status?: (koinos.rpc.p2p.Iget_gossip_status_request|null);
            }

            /** Represents a p2p_request. */
            class p2p_request implements Ip2p_request {

                /**
                 * Constructs a new p2p_request.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.p2p.Ip2p_request);

                /** p2p_request reserved. */
                public reserved?: (koinos.rpc.Ireserved_rpc|null);

                /** p2p_request get_gossip_status. */
                public get_gossip_status?: (koinos.rpc.p2p.Iget_gossip_status_request|null);

                /** p2p_request request. */
                public request?: ("reserved"|"get_gossip_status");

                /**
                 * Creates a new p2p_request instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns p2p_request instance
                 */
                public static create(properties?: koinos.rpc.p2p.Ip2p_request): koinos.rpc.p2p.p2p_request;

                /**
                 * Encodes the specified p2p_request message. Does not implicitly {@link koinos.rpc.p2p.p2p_request.verify|verify} messages.
                 * @param message p2p_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.p2p.Ip2p_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified p2p_request message, length delimited. Does not implicitly {@link koinos.rpc.p2p.p2p_request.verify|verify} messages.
                 * @param message p2p_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.p2p.Ip2p_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a p2p_request message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns p2p_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.p2p.p2p_request;

                /**
                 * Decodes a p2p_request message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns p2p_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.p2p.p2p_request;

                /**
                 * Verifies a p2p_request message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a p2p_request message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns p2p_request
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.p2p.p2p_request;

                /**
                 * Creates a plain object from a p2p_request message. Also converts values to other types if specified.
                 * @param message p2p_request
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.p2p.p2p_request, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this p2p_request to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a p2p_response. */
            interface Ip2p_response {

                /** p2p_response reserved */
                reserved?: (koinos.rpc.Ireserved_rpc|null);

                /** p2p_response error */
                error?: (koinos.rpc.Ierror_status|null);

                /** p2p_response get_gossip_status */
                get_gossip_status?: (koinos.rpc.p2p.Iget_gossip_status_response|null);
            }

            /** Represents a p2p_response. */
            class p2p_response implements Ip2p_response {

                /**
                 * Constructs a new p2p_response.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.p2p.Ip2p_response);

                /** p2p_response reserved. */
                public reserved?: (koinos.rpc.Ireserved_rpc|null);

                /** p2p_response error. */
                public error?: (koinos.rpc.Ierror_status|null);

                /** p2p_response get_gossip_status. */
                public get_gossip_status?: (koinos.rpc.p2p.Iget_gossip_status_response|null);

                /** p2p_response response. */
                public response?: ("reserved"|"error"|"get_gossip_status");

                /**
                 * Creates a new p2p_response instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns p2p_response instance
                 */
                public static create(properties?: koinos.rpc.p2p.Ip2p_response): koinos.rpc.p2p.p2p_response;

                /**
                 * Encodes the specified p2p_response message. Does not implicitly {@link koinos.rpc.p2p.p2p_response.verify|verify} messages.
                 * @param message p2p_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.p2p.Ip2p_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified p2p_response message, length delimited. Does not implicitly {@link koinos.rpc.p2p.p2p_response.verify|verify} messages.
                 * @param message p2p_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.p2p.Ip2p_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a p2p_response message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns p2p_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.p2p.p2p_response;

                /**
                 * Decodes a p2p_response message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns p2p_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.p2p.p2p_response;

                /**
                 * Verifies a p2p_response message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a p2p_response message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns p2p_response
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.p2p.p2p_response;

                /**
                 * Creates a plain object from a p2p_response message. Also converts values to other types if specified.
                 * @param message p2p_response
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.p2p.p2p_response, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this p2p_response to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Namespace account_history. */
        namespace account_history {

            /** Properties of an account_history_entry. */
            interface Iaccount_history_entry {

                /** account_history_entry seq_num */
                seq_num?: (number|Long|null);

                /** account_history_entry trx */
                trx?: (koinos.account_history.Itransaction_record|null);

                /** account_history_entry block */
                block?: (koinos.account_history.Iblock_record|null);
            }

            /** Represents an account_history_entry. */
            class account_history_entry implements Iaccount_history_entry {

                /**
                 * Constructs a new account_history_entry.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.account_history.Iaccount_history_entry);

                /** account_history_entry seq_num. */
                public seq_num: (number|Long);

                /** account_history_entry trx. */
                public trx?: (koinos.account_history.Itransaction_record|null);

                /** account_history_entry block. */
                public block?: (koinos.account_history.Iblock_record|null);

                /** account_history_entry record. */
                public record?: ("trx"|"block");

                /**
                 * Creates a new account_history_entry instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns account_history_entry instance
                 */
                public static create(properties?: koinos.rpc.account_history.Iaccount_history_entry): koinos.rpc.account_history.account_history_entry;

                /**
                 * Encodes the specified account_history_entry message. Does not implicitly {@link koinos.rpc.account_history.account_history_entry.verify|verify} messages.
                 * @param message account_history_entry message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.account_history.Iaccount_history_entry, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified account_history_entry message, length delimited. Does not implicitly {@link koinos.rpc.account_history.account_history_entry.verify|verify} messages.
                 * @param message account_history_entry message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.account_history.Iaccount_history_entry, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an account_history_entry message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns account_history_entry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.account_history.account_history_entry;

                /**
                 * Decodes an account_history_entry message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns account_history_entry
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.account_history.account_history_entry;

                /**
                 * Verifies an account_history_entry message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an account_history_entry message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns account_history_entry
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.account_history.account_history_entry;

                /**
                 * Creates a plain object from an account_history_entry message. Also converts values to other types if specified.
                 * @param message account_history_entry
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.account_history.account_history_entry, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this account_history_entry to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_account_history_request. */
            interface Iget_account_history_request {

                /** get_account_history_request address */
                address?: (Uint8Array|null);

                /** get_account_history_request seq_num */
                seq_num?: (number|Long|null);

                /** get_account_history_request limit */
                limit?: (number|Long|null);

                /** get_account_history_request ascending */
                ascending?: (boolean|null);

                /** get_account_history_request irreversible */
                irreversible?: (boolean|null);
            }

            /** Represents a get_account_history_request. */
            class get_account_history_request implements Iget_account_history_request {

                /**
                 * Constructs a new get_account_history_request.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.account_history.Iget_account_history_request);

                /** get_account_history_request address. */
                public address: Uint8Array;

                /** get_account_history_request seq_num. */
                public seq_num?: (number|Long|null);

                /** get_account_history_request limit. */
                public limit: (number|Long);

                /** get_account_history_request ascending. */
                public ascending: boolean;

                /** get_account_history_request irreversible. */
                public irreversible: boolean;

                /** get_account_history_request _seq_num. */
                public _seq_num?: "seq_num";

                /**
                 * Creates a new get_account_history_request instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_account_history_request instance
                 */
                public static create(properties?: koinos.rpc.account_history.Iget_account_history_request): koinos.rpc.account_history.get_account_history_request;

                /**
                 * Encodes the specified get_account_history_request message. Does not implicitly {@link koinos.rpc.account_history.get_account_history_request.verify|verify} messages.
                 * @param message get_account_history_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.account_history.Iget_account_history_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_account_history_request message, length delimited. Does not implicitly {@link koinos.rpc.account_history.get_account_history_request.verify|verify} messages.
                 * @param message get_account_history_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.account_history.Iget_account_history_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_account_history_request message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_account_history_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.account_history.get_account_history_request;

                /**
                 * Decodes a get_account_history_request message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_account_history_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.account_history.get_account_history_request;

                /**
                 * Verifies a get_account_history_request message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_account_history_request message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_account_history_request
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.account_history.get_account_history_request;

                /**
                 * Creates a plain object from a get_account_history_request message. Also converts values to other types if specified.
                 * @param message get_account_history_request
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.account_history.get_account_history_request, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_account_history_request to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_account_history_response. */
            interface Iget_account_history_response {

                /** get_account_history_response values */
                values?: (koinos.rpc.account_history.Iaccount_history_entry[]|null);
            }

            /** Represents a get_account_history_response. */
            class get_account_history_response implements Iget_account_history_response {

                /**
                 * Constructs a new get_account_history_response.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.account_history.Iget_account_history_response);

                /** get_account_history_response values. */
                public values: koinos.rpc.account_history.Iaccount_history_entry[];

                /**
                 * Creates a new get_account_history_response instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_account_history_response instance
                 */
                public static create(properties?: koinos.rpc.account_history.Iget_account_history_response): koinos.rpc.account_history.get_account_history_response;

                /**
                 * Encodes the specified get_account_history_response message. Does not implicitly {@link koinos.rpc.account_history.get_account_history_response.verify|verify} messages.
                 * @param message get_account_history_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.account_history.Iget_account_history_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_account_history_response message, length delimited. Does not implicitly {@link koinos.rpc.account_history.get_account_history_response.verify|verify} messages.
                 * @param message get_account_history_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.account_history.Iget_account_history_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_account_history_response message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_account_history_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.account_history.get_account_history_response;

                /**
                 * Decodes a get_account_history_response message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_account_history_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.account_history.get_account_history_response;

                /**
                 * Verifies a get_account_history_response message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_account_history_response message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_account_history_response
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.account_history.get_account_history_response;

                /**
                 * Creates a plain object from a get_account_history_response message. Also converts values to other types if specified.
                 * @param message get_account_history_response
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.account_history.get_account_history_response, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_account_history_response to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an account_history_request. */
            interface Iaccount_history_request {

                /** account_history_request reserved */
                reserved?: (koinos.rpc.Ireserved_rpc|null);

                /** account_history_request get_account_history */
                get_account_history?: (koinos.rpc.account_history.Iget_account_history_request|null);
            }

            /** Represents an account_history_request. */
            class account_history_request implements Iaccount_history_request {

                /**
                 * Constructs a new account_history_request.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.account_history.Iaccount_history_request);

                /** account_history_request reserved. */
                public reserved?: (koinos.rpc.Ireserved_rpc|null);

                /** account_history_request get_account_history. */
                public get_account_history?: (koinos.rpc.account_history.Iget_account_history_request|null);

                /** account_history_request request. */
                public request?: ("reserved"|"get_account_history");

                /**
                 * Creates a new account_history_request instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns account_history_request instance
                 */
                public static create(properties?: koinos.rpc.account_history.Iaccount_history_request): koinos.rpc.account_history.account_history_request;

                /**
                 * Encodes the specified account_history_request message. Does not implicitly {@link koinos.rpc.account_history.account_history_request.verify|verify} messages.
                 * @param message account_history_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.account_history.Iaccount_history_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified account_history_request message, length delimited. Does not implicitly {@link koinos.rpc.account_history.account_history_request.verify|verify} messages.
                 * @param message account_history_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.account_history.Iaccount_history_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an account_history_request message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns account_history_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.account_history.account_history_request;

                /**
                 * Decodes an account_history_request message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns account_history_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.account_history.account_history_request;

                /**
                 * Verifies an account_history_request message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an account_history_request message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns account_history_request
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.account_history.account_history_request;

                /**
                 * Creates a plain object from an account_history_request message. Also converts values to other types if specified.
                 * @param message account_history_request
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.account_history.account_history_request, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this account_history_request to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an account_history_response. */
            interface Iaccount_history_response {

                /** account_history_response reserved */
                reserved?: (koinos.rpc.Ireserved_rpc|null);

                /** account_history_response error */
                error?: (koinos.rpc.Ierror_status|null);

                /** account_history_response get_account_history */
                get_account_history?: (koinos.rpc.account_history.Iget_account_history_response|null);
            }

            /** Represents an account_history_response. */
            class account_history_response implements Iaccount_history_response {

                /**
                 * Constructs a new account_history_response.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.account_history.Iaccount_history_response);

                /** account_history_response reserved. */
                public reserved?: (koinos.rpc.Ireserved_rpc|null);

                /** account_history_response error. */
                public error?: (koinos.rpc.Ierror_status|null);

                /** account_history_response get_account_history. */
                public get_account_history?: (koinos.rpc.account_history.Iget_account_history_response|null);

                /** account_history_response response. */
                public response?: ("reserved"|"error"|"get_account_history");

                /**
                 * Creates a new account_history_response instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns account_history_response instance
                 */
                public static create(properties?: koinos.rpc.account_history.Iaccount_history_response): koinos.rpc.account_history.account_history_response;

                /**
                 * Encodes the specified account_history_response message. Does not implicitly {@link koinos.rpc.account_history.account_history_response.verify|verify} messages.
                 * @param message account_history_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.account_history.Iaccount_history_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified account_history_response message, length delimited. Does not implicitly {@link koinos.rpc.account_history.account_history_response.verify|verify} messages.
                 * @param message account_history_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.account_history.Iaccount_history_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an account_history_response message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns account_history_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.account_history.account_history_response;

                /**
                 * Decodes an account_history_response message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns account_history_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.account_history.account_history_response;

                /**
                 * Verifies an account_history_response message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an account_history_response message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns account_history_response
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.account_history.account_history_response;

                /**
                 * Creates a plain object from an account_history_response message. Also converts values to other types if specified.
                 * @param message account_history_response
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.account_history.account_history_response, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this account_history_response to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Namespace block_store. */
        namespace block_store {

            /** Properties of a get_blocks_by_id_request. */
            interface Iget_blocks_by_id_request {

                /** get_blocks_by_id_request block_ids */
                block_ids?: (Uint8Array[]|null);

                /** get_blocks_by_id_request return_block */
                return_block?: (boolean|null);

                /** get_blocks_by_id_request return_receipt */
                return_receipt?: (boolean|null);
            }

            /** Represents a get_blocks_by_id_request. */
            class get_blocks_by_id_request implements Iget_blocks_by_id_request {

                /**
                 * Constructs a new get_blocks_by_id_request.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.block_store.Iget_blocks_by_id_request);

                /** get_blocks_by_id_request block_ids. */
                public block_ids: Uint8Array[];

                /** get_blocks_by_id_request return_block. */
                public return_block: boolean;

                /** get_blocks_by_id_request return_receipt. */
                public return_receipt: boolean;

                /**
                 * Creates a new get_blocks_by_id_request instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_blocks_by_id_request instance
                 */
                public static create(properties?: koinos.rpc.block_store.Iget_blocks_by_id_request): koinos.rpc.block_store.get_blocks_by_id_request;

                /**
                 * Encodes the specified get_blocks_by_id_request message. Does not implicitly {@link koinos.rpc.block_store.get_blocks_by_id_request.verify|verify} messages.
                 * @param message get_blocks_by_id_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.block_store.Iget_blocks_by_id_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_blocks_by_id_request message, length delimited. Does not implicitly {@link koinos.rpc.block_store.get_blocks_by_id_request.verify|verify} messages.
                 * @param message get_blocks_by_id_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.block_store.Iget_blocks_by_id_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_blocks_by_id_request message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_blocks_by_id_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.block_store.get_blocks_by_id_request;

                /**
                 * Decodes a get_blocks_by_id_request message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_blocks_by_id_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.block_store.get_blocks_by_id_request;

                /**
                 * Verifies a get_blocks_by_id_request message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_blocks_by_id_request message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_blocks_by_id_request
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.block_store.get_blocks_by_id_request;

                /**
                 * Creates a plain object from a get_blocks_by_id_request message. Also converts values to other types if specified.
                 * @param message get_blocks_by_id_request
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.block_store.get_blocks_by_id_request, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_blocks_by_id_request to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_blocks_by_id_response. */
            interface Iget_blocks_by_id_response {

                /** get_blocks_by_id_response block_items */
                block_items?: (koinos.block_store.Iblock_item[]|null);
            }

            /** Represents a get_blocks_by_id_response. */
            class get_blocks_by_id_response implements Iget_blocks_by_id_response {

                /**
                 * Constructs a new get_blocks_by_id_response.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.block_store.Iget_blocks_by_id_response);

                /** get_blocks_by_id_response block_items. */
                public block_items: koinos.block_store.Iblock_item[];

                /**
                 * Creates a new get_blocks_by_id_response instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_blocks_by_id_response instance
                 */
                public static create(properties?: koinos.rpc.block_store.Iget_blocks_by_id_response): koinos.rpc.block_store.get_blocks_by_id_response;

                /**
                 * Encodes the specified get_blocks_by_id_response message. Does not implicitly {@link koinos.rpc.block_store.get_blocks_by_id_response.verify|verify} messages.
                 * @param message get_blocks_by_id_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.block_store.Iget_blocks_by_id_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_blocks_by_id_response message, length delimited. Does not implicitly {@link koinos.rpc.block_store.get_blocks_by_id_response.verify|verify} messages.
                 * @param message get_blocks_by_id_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.block_store.Iget_blocks_by_id_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_blocks_by_id_response message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_blocks_by_id_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.block_store.get_blocks_by_id_response;

                /**
                 * Decodes a get_blocks_by_id_response message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_blocks_by_id_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.block_store.get_blocks_by_id_response;

                /**
                 * Verifies a get_blocks_by_id_response message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_blocks_by_id_response message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_blocks_by_id_response
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.block_store.get_blocks_by_id_response;

                /**
                 * Creates a plain object from a get_blocks_by_id_response message. Also converts values to other types if specified.
                 * @param message get_blocks_by_id_response
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.block_store.get_blocks_by_id_response, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_blocks_by_id_response to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_blocks_by_height_request. */
            interface Iget_blocks_by_height_request {

                /** get_blocks_by_height_request head_block_id */
                head_block_id?: (Uint8Array|null);

                /** get_blocks_by_height_request ancestor_start_height */
                ancestor_start_height?: (number|Long|null);

                /** get_blocks_by_height_request num_blocks */
                num_blocks?: (number|null);

                /** get_blocks_by_height_request return_block */
                return_block?: (boolean|null);

                /** get_blocks_by_height_request return_receipt */
                return_receipt?: (boolean|null);
            }

            /** Represents a get_blocks_by_height_request. */
            class get_blocks_by_height_request implements Iget_blocks_by_height_request {

                /**
                 * Constructs a new get_blocks_by_height_request.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.block_store.Iget_blocks_by_height_request);

                /** get_blocks_by_height_request head_block_id. */
                public head_block_id: Uint8Array;

                /** get_blocks_by_height_request ancestor_start_height. */
                public ancestor_start_height: (number|Long);

                /** get_blocks_by_height_request num_blocks. */
                public num_blocks: number;

                /** get_blocks_by_height_request return_block. */
                public return_block: boolean;

                /** get_blocks_by_height_request return_receipt. */
                public return_receipt: boolean;

                /**
                 * Creates a new get_blocks_by_height_request instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_blocks_by_height_request instance
                 */
                public static create(properties?: koinos.rpc.block_store.Iget_blocks_by_height_request): koinos.rpc.block_store.get_blocks_by_height_request;

                /**
                 * Encodes the specified get_blocks_by_height_request message. Does not implicitly {@link koinos.rpc.block_store.get_blocks_by_height_request.verify|verify} messages.
                 * @param message get_blocks_by_height_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.block_store.Iget_blocks_by_height_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_blocks_by_height_request message, length delimited. Does not implicitly {@link koinos.rpc.block_store.get_blocks_by_height_request.verify|verify} messages.
                 * @param message get_blocks_by_height_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.block_store.Iget_blocks_by_height_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_blocks_by_height_request message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_blocks_by_height_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.block_store.get_blocks_by_height_request;

                /**
                 * Decodes a get_blocks_by_height_request message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_blocks_by_height_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.block_store.get_blocks_by_height_request;

                /**
                 * Verifies a get_blocks_by_height_request message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_blocks_by_height_request message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_blocks_by_height_request
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.block_store.get_blocks_by_height_request;

                /**
                 * Creates a plain object from a get_blocks_by_height_request message. Also converts values to other types if specified.
                 * @param message get_blocks_by_height_request
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.block_store.get_blocks_by_height_request, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_blocks_by_height_request to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_blocks_by_height_response. */
            interface Iget_blocks_by_height_response {

                /** get_blocks_by_height_response block_items */
                block_items?: (koinos.block_store.Iblock_item[]|null);
            }

            /** Represents a get_blocks_by_height_response. */
            class get_blocks_by_height_response implements Iget_blocks_by_height_response {

                /**
                 * Constructs a new get_blocks_by_height_response.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.block_store.Iget_blocks_by_height_response);

                /** get_blocks_by_height_response block_items. */
                public block_items: koinos.block_store.Iblock_item[];

                /**
                 * Creates a new get_blocks_by_height_response instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_blocks_by_height_response instance
                 */
                public static create(properties?: koinos.rpc.block_store.Iget_blocks_by_height_response): koinos.rpc.block_store.get_blocks_by_height_response;

                /**
                 * Encodes the specified get_blocks_by_height_response message. Does not implicitly {@link koinos.rpc.block_store.get_blocks_by_height_response.verify|verify} messages.
                 * @param message get_blocks_by_height_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.block_store.Iget_blocks_by_height_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_blocks_by_height_response message, length delimited. Does not implicitly {@link koinos.rpc.block_store.get_blocks_by_height_response.verify|verify} messages.
                 * @param message get_blocks_by_height_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.block_store.Iget_blocks_by_height_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_blocks_by_height_response message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_blocks_by_height_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.block_store.get_blocks_by_height_response;

                /**
                 * Decodes a get_blocks_by_height_response message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_blocks_by_height_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.block_store.get_blocks_by_height_response;

                /**
                 * Verifies a get_blocks_by_height_response message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_blocks_by_height_response message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_blocks_by_height_response
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.block_store.get_blocks_by_height_response;

                /**
                 * Creates a plain object from a get_blocks_by_height_response message. Also converts values to other types if specified.
                 * @param message get_blocks_by_height_response
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.block_store.get_blocks_by_height_response, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_blocks_by_height_response to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an add_block_request. */
            interface Iadd_block_request {

                /** add_block_request block_to_add */
                block_to_add?: (koinos.protocol.Iblock|null);

                /** add_block_request receipt_to_add */
                receipt_to_add?: (koinos.protocol.Iblock_receipt|null);
            }

            /** Represents an add_block_request. */
            class add_block_request implements Iadd_block_request {

                /**
                 * Constructs a new add_block_request.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.block_store.Iadd_block_request);

                /** add_block_request block_to_add. */
                public block_to_add?: (koinos.protocol.Iblock|null);

                /** add_block_request receipt_to_add. */
                public receipt_to_add?: (koinos.protocol.Iblock_receipt|null);

                /**
                 * Creates a new add_block_request instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns add_block_request instance
                 */
                public static create(properties?: koinos.rpc.block_store.Iadd_block_request): koinos.rpc.block_store.add_block_request;

                /**
                 * Encodes the specified add_block_request message. Does not implicitly {@link koinos.rpc.block_store.add_block_request.verify|verify} messages.
                 * @param message add_block_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.block_store.Iadd_block_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified add_block_request message, length delimited. Does not implicitly {@link koinos.rpc.block_store.add_block_request.verify|verify} messages.
                 * @param message add_block_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.block_store.Iadd_block_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an add_block_request message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns add_block_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.block_store.add_block_request;

                /**
                 * Decodes an add_block_request message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns add_block_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.block_store.add_block_request;

                /**
                 * Verifies an add_block_request message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an add_block_request message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns add_block_request
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.block_store.add_block_request;

                /**
                 * Creates a plain object from an add_block_request message. Also converts values to other types if specified.
                 * @param message add_block_request
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.block_store.add_block_request, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this add_block_request to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of an add_block_response. */
            interface Iadd_block_response {
            }

            /** Represents an add_block_response. */
            class add_block_response implements Iadd_block_response {

                /**
                 * Constructs a new add_block_response.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.block_store.Iadd_block_response);

                /**
                 * Creates a new add_block_response instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns add_block_response instance
                 */
                public static create(properties?: koinos.rpc.block_store.Iadd_block_response): koinos.rpc.block_store.add_block_response;

                /**
                 * Encodes the specified add_block_response message. Does not implicitly {@link koinos.rpc.block_store.add_block_response.verify|verify} messages.
                 * @param message add_block_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.block_store.Iadd_block_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified add_block_response message, length delimited. Does not implicitly {@link koinos.rpc.block_store.add_block_response.verify|verify} messages.
                 * @param message add_block_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.block_store.Iadd_block_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an add_block_response message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns add_block_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.block_store.add_block_response;

                /**
                 * Decodes an add_block_response message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns add_block_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.block_store.add_block_response;

                /**
                 * Verifies an add_block_response message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an add_block_response message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns add_block_response
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.block_store.add_block_response;

                /**
                 * Creates a plain object from an add_block_response message. Also converts values to other types if specified.
                 * @param message add_block_response
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.block_store.add_block_response, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this add_block_response to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_highest_block_request. */
            interface Iget_highest_block_request {
            }

            /** Represents a get_highest_block_request. */
            class get_highest_block_request implements Iget_highest_block_request {

                /**
                 * Constructs a new get_highest_block_request.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.block_store.Iget_highest_block_request);

                /**
                 * Creates a new get_highest_block_request instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_highest_block_request instance
                 */
                public static create(properties?: koinos.rpc.block_store.Iget_highest_block_request): koinos.rpc.block_store.get_highest_block_request;

                /**
                 * Encodes the specified get_highest_block_request message. Does not implicitly {@link koinos.rpc.block_store.get_highest_block_request.verify|verify} messages.
                 * @param message get_highest_block_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.block_store.Iget_highest_block_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_highest_block_request message, length delimited. Does not implicitly {@link koinos.rpc.block_store.get_highest_block_request.verify|verify} messages.
                 * @param message get_highest_block_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.block_store.Iget_highest_block_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_highest_block_request message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_highest_block_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.block_store.get_highest_block_request;

                /**
                 * Decodes a get_highest_block_request message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_highest_block_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.block_store.get_highest_block_request;

                /**
                 * Verifies a get_highest_block_request message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_highest_block_request message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_highest_block_request
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.block_store.get_highest_block_request;

                /**
                 * Creates a plain object from a get_highest_block_request message. Also converts values to other types if specified.
                 * @param message get_highest_block_request
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.block_store.get_highest_block_request, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_highest_block_request to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_highest_block_response. */
            interface Iget_highest_block_response {

                /** get_highest_block_response topology */
                topology?: (koinos.Iblock_topology|null);
            }

            /** Represents a get_highest_block_response. */
            class get_highest_block_response implements Iget_highest_block_response {

                /**
                 * Constructs a new get_highest_block_response.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.block_store.Iget_highest_block_response);

                /** get_highest_block_response topology. */
                public topology?: (koinos.Iblock_topology|null);

                /**
                 * Creates a new get_highest_block_response instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_highest_block_response instance
                 */
                public static create(properties?: koinos.rpc.block_store.Iget_highest_block_response): koinos.rpc.block_store.get_highest_block_response;

                /**
                 * Encodes the specified get_highest_block_response message. Does not implicitly {@link koinos.rpc.block_store.get_highest_block_response.verify|verify} messages.
                 * @param message get_highest_block_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.block_store.Iget_highest_block_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_highest_block_response message, length delimited. Does not implicitly {@link koinos.rpc.block_store.get_highest_block_response.verify|verify} messages.
                 * @param message get_highest_block_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.block_store.Iget_highest_block_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_highest_block_response message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_highest_block_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.block_store.get_highest_block_response;

                /**
                 * Decodes a get_highest_block_response message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_highest_block_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.block_store.get_highest_block_response;

                /**
                 * Verifies a get_highest_block_response message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_highest_block_response message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_highest_block_response
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.block_store.get_highest_block_response;

                /**
                 * Creates a plain object from a get_highest_block_response message. Also converts values to other types if specified.
                 * @param message get_highest_block_response
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.block_store.get_highest_block_response, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_highest_block_response to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a block_store_request. */
            interface Iblock_store_request {

                /** block_store_request reserved */
                reserved?: (koinos.rpc.Ireserved_rpc|null);

                /** block_store_request get_blocks_by_id */
                get_blocks_by_id?: (koinos.rpc.block_store.Iget_blocks_by_id_request|null);

                /** block_store_request get_blocks_by_height */
                get_blocks_by_height?: (koinos.rpc.block_store.Iget_blocks_by_height_request|null);

                /** block_store_request add_block */
                add_block?: (koinos.rpc.block_store.Iadd_block_request|null);

                /** block_store_request get_highest_block */
                get_highest_block?: (koinos.rpc.block_store.Iget_highest_block_request|null);
            }

            /** Represents a block_store_request. */
            class block_store_request implements Iblock_store_request {

                /**
                 * Constructs a new block_store_request.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.block_store.Iblock_store_request);

                /** block_store_request reserved. */
                public reserved?: (koinos.rpc.Ireserved_rpc|null);

                /** block_store_request get_blocks_by_id. */
                public get_blocks_by_id?: (koinos.rpc.block_store.Iget_blocks_by_id_request|null);

                /** block_store_request get_blocks_by_height. */
                public get_blocks_by_height?: (koinos.rpc.block_store.Iget_blocks_by_height_request|null);

                /** block_store_request add_block. */
                public add_block?: (koinos.rpc.block_store.Iadd_block_request|null);

                /** block_store_request get_highest_block. */
                public get_highest_block?: (koinos.rpc.block_store.Iget_highest_block_request|null);

                /** block_store_request request. */
                public request?: ("reserved"|"get_blocks_by_id"|"get_blocks_by_height"|"add_block"|"get_highest_block");

                /**
                 * Creates a new block_store_request instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns block_store_request instance
                 */
                public static create(properties?: koinos.rpc.block_store.Iblock_store_request): koinos.rpc.block_store.block_store_request;

                /**
                 * Encodes the specified block_store_request message. Does not implicitly {@link koinos.rpc.block_store.block_store_request.verify|verify} messages.
                 * @param message block_store_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.block_store.Iblock_store_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified block_store_request message, length delimited. Does not implicitly {@link koinos.rpc.block_store.block_store_request.verify|verify} messages.
                 * @param message block_store_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.block_store.Iblock_store_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a block_store_request message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns block_store_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.block_store.block_store_request;

                /**
                 * Decodes a block_store_request message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns block_store_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.block_store.block_store_request;

                /**
                 * Verifies a block_store_request message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a block_store_request message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns block_store_request
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.block_store.block_store_request;

                /**
                 * Creates a plain object from a block_store_request message. Also converts values to other types if specified.
                 * @param message block_store_request
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.block_store.block_store_request, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this block_store_request to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a block_store_response. */
            interface Iblock_store_response {

                /** block_store_response reserved */
                reserved?: (koinos.rpc.Ireserved_rpc|null);

                /** block_store_response error */
                error?: (koinos.rpc.Ierror_status|null);

                /** block_store_response get_blocks_by_id */
                get_blocks_by_id?: (koinos.rpc.block_store.Iget_blocks_by_id_response|null);

                /** block_store_response get_blocks_by_height */
                get_blocks_by_height?: (koinos.rpc.block_store.Iget_blocks_by_height_response|null);

                /** block_store_response add_block */
                add_block?: (koinos.rpc.block_store.Iadd_block_response|null);

                /** block_store_response get_highest_block */
                get_highest_block?: (koinos.rpc.block_store.Iget_highest_block_response|null);
            }

            /** Represents a block_store_response. */
            class block_store_response implements Iblock_store_response {

                /**
                 * Constructs a new block_store_response.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.block_store.Iblock_store_response);

                /** block_store_response reserved. */
                public reserved?: (koinos.rpc.Ireserved_rpc|null);

                /** block_store_response error. */
                public error?: (koinos.rpc.Ierror_status|null);

                /** block_store_response get_blocks_by_id. */
                public get_blocks_by_id?: (koinos.rpc.block_store.Iget_blocks_by_id_response|null);

                /** block_store_response get_blocks_by_height. */
                public get_blocks_by_height?: (koinos.rpc.block_store.Iget_blocks_by_height_response|null);

                /** block_store_response add_block. */
                public add_block?: (koinos.rpc.block_store.Iadd_block_response|null);

                /** block_store_response get_highest_block. */
                public get_highest_block?: (koinos.rpc.block_store.Iget_highest_block_response|null);

                /** block_store_response response. */
                public response?: ("reserved"|"error"|"get_blocks_by_id"|"get_blocks_by_height"|"add_block"|"get_highest_block");

                /**
                 * Creates a new block_store_response instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns block_store_response instance
                 */
                public static create(properties?: koinos.rpc.block_store.Iblock_store_response): koinos.rpc.block_store.block_store_response;

                /**
                 * Encodes the specified block_store_response message. Does not implicitly {@link koinos.rpc.block_store.block_store_response.verify|verify} messages.
                 * @param message block_store_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.block_store.Iblock_store_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified block_store_response message, length delimited. Does not implicitly {@link koinos.rpc.block_store.block_store_response.verify|verify} messages.
                 * @param message block_store_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.block_store.Iblock_store_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a block_store_response message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns block_store_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.block_store.block_store_response;

                /**
                 * Decodes a block_store_response message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns block_store_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.block_store.block_store_response;

                /**
                 * Verifies a block_store_response message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a block_store_response message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns block_store_response
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.block_store.block_store_response;

                /**
                 * Creates a plain object from a block_store_response message. Also converts values to other types if specified.
                 * @param message block_store_response
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.block_store.block_store_response, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this block_store_response to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Namespace mempool. */
        namespace mempool {

            /** Properties of a pending_transaction. */
            interface Ipending_transaction {

                /** pending_transaction transaction */
                transaction?: (koinos.protocol.Itransaction|null);

                /** pending_transaction disk_storage_used */
                disk_storage_used?: (number|Long|null);

                /** pending_transaction network_bandwidth_used */
                network_bandwidth_used?: (number|Long|null);

                /** pending_transaction compute_bandwidth_used */
                compute_bandwidth_used?: (number|Long|null);
            }

            /** Represents a pending_transaction. */
            class pending_transaction implements Ipending_transaction {

                /**
                 * Constructs a new pending_transaction.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.mempool.Ipending_transaction);

                /** pending_transaction transaction. */
                public transaction?: (koinos.protocol.Itransaction|null);

                /** pending_transaction disk_storage_used. */
                public disk_storage_used: (number|Long);

                /** pending_transaction network_bandwidth_used. */
                public network_bandwidth_used: (number|Long);

                /** pending_transaction compute_bandwidth_used. */
                public compute_bandwidth_used: (number|Long);

                /**
                 * Creates a new pending_transaction instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns pending_transaction instance
                 */
                public static create(properties?: koinos.rpc.mempool.Ipending_transaction): koinos.rpc.mempool.pending_transaction;

                /**
                 * Encodes the specified pending_transaction message. Does not implicitly {@link koinos.rpc.mempool.pending_transaction.verify|verify} messages.
                 * @param message pending_transaction message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.mempool.Ipending_transaction, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified pending_transaction message, length delimited. Does not implicitly {@link koinos.rpc.mempool.pending_transaction.verify|verify} messages.
                 * @param message pending_transaction message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.mempool.Ipending_transaction, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a pending_transaction message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns pending_transaction
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.mempool.pending_transaction;

                /**
                 * Decodes a pending_transaction message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns pending_transaction
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.mempool.pending_transaction;

                /**
                 * Verifies a pending_transaction message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a pending_transaction message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns pending_transaction
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.mempool.pending_transaction;

                /**
                 * Creates a plain object from a pending_transaction message. Also converts values to other types if specified.
                 * @param message pending_transaction
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.mempool.pending_transaction, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this pending_transaction to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a check_pending_account_resources_request. */
            interface Icheck_pending_account_resources_request {

                /** check_pending_account_resources_request payer */
                payer?: (Uint8Array|null);

                /** check_pending_account_resources_request max_payer_rc */
                max_payer_rc?: (number|Long|null);

                /** check_pending_account_resources_request rc_limit */
                rc_limit?: (number|Long|null);

                /** check_pending_account_resources_request block_id */
                block_id?: (Uint8Array|null);
            }

            /** Represents a check_pending_account_resources_request. */
            class check_pending_account_resources_request implements Icheck_pending_account_resources_request {

                /**
                 * Constructs a new check_pending_account_resources_request.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.mempool.Icheck_pending_account_resources_request);

                /** check_pending_account_resources_request payer. */
                public payer: Uint8Array;

                /** check_pending_account_resources_request max_payer_rc. */
                public max_payer_rc: (number|Long);

                /** check_pending_account_resources_request rc_limit. */
                public rc_limit: (number|Long);

                /** check_pending_account_resources_request block_id. */
                public block_id?: (Uint8Array|null);

                /** check_pending_account_resources_request _block_id. */
                public _block_id?: "block_id";

                /**
                 * Creates a new check_pending_account_resources_request instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns check_pending_account_resources_request instance
                 */
                public static create(properties?: koinos.rpc.mempool.Icheck_pending_account_resources_request): koinos.rpc.mempool.check_pending_account_resources_request;

                /**
                 * Encodes the specified check_pending_account_resources_request message. Does not implicitly {@link koinos.rpc.mempool.check_pending_account_resources_request.verify|verify} messages.
                 * @param message check_pending_account_resources_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.mempool.Icheck_pending_account_resources_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified check_pending_account_resources_request message, length delimited. Does not implicitly {@link koinos.rpc.mempool.check_pending_account_resources_request.verify|verify} messages.
                 * @param message check_pending_account_resources_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.mempool.Icheck_pending_account_resources_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a check_pending_account_resources_request message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns check_pending_account_resources_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.mempool.check_pending_account_resources_request;

                /**
                 * Decodes a check_pending_account_resources_request message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns check_pending_account_resources_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.mempool.check_pending_account_resources_request;

                /**
                 * Verifies a check_pending_account_resources_request message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a check_pending_account_resources_request message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns check_pending_account_resources_request
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.mempool.check_pending_account_resources_request;

                /**
                 * Creates a plain object from a check_pending_account_resources_request message. Also converts values to other types if specified.
                 * @param message check_pending_account_resources_request
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.mempool.check_pending_account_resources_request, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this check_pending_account_resources_request to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a check_pending_account_resources_response. */
            interface Icheck_pending_account_resources_response {

                /** check_pending_account_resources_response success */
                success?: (boolean|null);
            }

            /** Represents a check_pending_account_resources_response. */
            class check_pending_account_resources_response implements Icheck_pending_account_resources_response {

                /**
                 * Constructs a new check_pending_account_resources_response.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.mempool.Icheck_pending_account_resources_response);

                /** check_pending_account_resources_response success. */
                public success: boolean;

                /**
                 * Creates a new check_pending_account_resources_response instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns check_pending_account_resources_response instance
                 */
                public static create(properties?: koinos.rpc.mempool.Icheck_pending_account_resources_response): koinos.rpc.mempool.check_pending_account_resources_response;

                /**
                 * Encodes the specified check_pending_account_resources_response message. Does not implicitly {@link koinos.rpc.mempool.check_pending_account_resources_response.verify|verify} messages.
                 * @param message check_pending_account_resources_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.mempool.Icheck_pending_account_resources_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified check_pending_account_resources_response message, length delimited. Does not implicitly {@link koinos.rpc.mempool.check_pending_account_resources_response.verify|verify} messages.
                 * @param message check_pending_account_resources_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.mempool.Icheck_pending_account_resources_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a check_pending_account_resources_response message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns check_pending_account_resources_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.mempool.check_pending_account_resources_response;

                /**
                 * Decodes a check_pending_account_resources_response message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns check_pending_account_resources_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.mempool.check_pending_account_resources_response;

                /**
                 * Verifies a check_pending_account_resources_response message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a check_pending_account_resources_response message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns check_pending_account_resources_response
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.mempool.check_pending_account_resources_response;

                /**
                 * Creates a plain object from a check_pending_account_resources_response message. Also converts values to other types if specified.
                 * @param message check_pending_account_resources_response
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.mempool.check_pending_account_resources_response, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this check_pending_account_resources_response to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_pending_transactions_request. */
            interface Iget_pending_transactions_request {

                /** get_pending_transactions_request limit */
                limit?: (number|Long|null);

                /** get_pending_transactions_request block_id */
                block_id?: (Uint8Array|null);
            }

            /** Represents a get_pending_transactions_request. */
            class get_pending_transactions_request implements Iget_pending_transactions_request {

                /**
                 * Constructs a new get_pending_transactions_request.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.mempool.Iget_pending_transactions_request);

                /** get_pending_transactions_request limit. */
                public limit: (number|Long);

                /** get_pending_transactions_request block_id. */
                public block_id?: (Uint8Array|null);

                /** get_pending_transactions_request _block_id. */
                public _block_id?: "block_id";

                /**
                 * Creates a new get_pending_transactions_request instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_pending_transactions_request instance
                 */
                public static create(properties?: koinos.rpc.mempool.Iget_pending_transactions_request): koinos.rpc.mempool.get_pending_transactions_request;

                /**
                 * Encodes the specified get_pending_transactions_request message. Does not implicitly {@link koinos.rpc.mempool.get_pending_transactions_request.verify|verify} messages.
                 * @param message get_pending_transactions_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.mempool.Iget_pending_transactions_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_pending_transactions_request message, length delimited. Does not implicitly {@link koinos.rpc.mempool.get_pending_transactions_request.verify|verify} messages.
                 * @param message get_pending_transactions_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.mempool.Iget_pending_transactions_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_pending_transactions_request message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_pending_transactions_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.mempool.get_pending_transactions_request;

                /**
                 * Decodes a get_pending_transactions_request message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_pending_transactions_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.mempool.get_pending_transactions_request;

                /**
                 * Verifies a get_pending_transactions_request message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_pending_transactions_request message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_pending_transactions_request
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.mempool.get_pending_transactions_request;

                /**
                 * Creates a plain object from a get_pending_transactions_request message. Also converts values to other types if specified.
                 * @param message get_pending_transactions_request
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.mempool.get_pending_transactions_request, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_pending_transactions_request to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_pending_transactions_response. */
            interface Iget_pending_transactions_response {

                /** get_pending_transactions_response pending_transactions */
                pending_transactions?: (koinos.rpc.mempool.Ipending_transaction[]|null);
            }

            /** Represents a get_pending_transactions_response. */
            class get_pending_transactions_response implements Iget_pending_transactions_response {

                /**
                 * Constructs a new get_pending_transactions_response.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.mempool.Iget_pending_transactions_response);

                /** get_pending_transactions_response pending_transactions. */
                public pending_transactions: koinos.rpc.mempool.Ipending_transaction[];

                /**
                 * Creates a new get_pending_transactions_response instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_pending_transactions_response instance
                 */
                public static create(properties?: koinos.rpc.mempool.Iget_pending_transactions_response): koinos.rpc.mempool.get_pending_transactions_response;

                /**
                 * Encodes the specified get_pending_transactions_response message. Does not implicitly {@link koinos.rpc.mempool.get_pending_transactions_response.verify|verify} messages.
                 * @param message get_pending_transactions_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.mempool.Iget_pending_transactions_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_pending_transactions_response message, length delimited. Does not implicitly {@link koinos.rpc.mempool.get_pending_transactions_response.verify|verify} messages.
                 * @param message get_pending_transactions_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.mempool.Iget_pending_transactions_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_pending_transactions_response message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_pending_transactions_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.mempool.get_pending_transactions_response;

                /**
                 * Decodes a get_pending_transactions_response message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_pending_transactions_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.mempool.get_pending_transactions_response;

                /**
                 * Verifies a get_pending_transactions_response message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_pending_transactions_response message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_pending_transactions_response
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.mempool.get_pending_transactions_response;

                /**
                 * Creates a plain object from a get_pending_transactions_response message. Also converts values to other types if specified.
                 * @param message get_pending_transactions_response
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.mempool.get_pending_transactions_response, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_pending_transactions_response to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a check_account_nonce_request. */
            interface Icheck_account_nonce_request {

                /** check_account_nonce_request payee */
                payee?: (Uint8Array|null);

                /** check_account_nonce_request nonce */
                nonce?: (Uint8Array|null);

                /** check_account_nonce_request block_id */
                block_id?: (Uint8Array|null);
            }

            /** Represents a check_account_nonce_request. */
            class check_account_nonce_request implements Icheck_account_nonce_request {

                /**
                 * Constructs a new check_account_nonce_request.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.mempool.Icheck_account_nonce_request);

                /** check_account_nonce_request payee. */
                public payee: Uint8Array;

                /** check_account_nonce_request nonce. */
                public nonce: Uint8Array;

                /** check_account_nonce_request block_id. */
                public block_id?: (Uint8Array|null);

                /** check_account_nonce_request _block_id. */
                public _block_id?: "block_id";

                /**
                 * Creates a new check_account_nonce_request instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns check_account_nonce_request instance
                 */
                public static create(properties?: koinos.rpc.mempool.Icheck_account_nonce_request): koinos.rpc.mempool.check_account_nonce_request;

                /**
                 * Encodes the specified check_account_nonce_request message. Does not implicitly {@link koinos.rpc.mempool.check_account_nonce_request.verify|verify} messages.
                 * @param message check_account_nonce_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.mempool.Icheck_account_nonce_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified check_account_nonce_request message, length delimited. Does not implicitly {@link koinos.rpc.mempool.check_account_nonce_request.verify|verify} messages.
                 * @param message check_account_nonce_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.mempool.Icheck_account_nonce_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a check_account_nonce_request message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns check_account_nonce_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.mempool.check_account_nonce_request;

                /**
                 * Decodes a check_account_nonce_request message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns check_account_nonce_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.mempool.check_account_nonce_request;

                /**
                 * Verifies a check_account_nonce_request message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a check_account_nonce_request message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns check_account_nonce_request
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.mempool.check_account_nonce_request;

                /**
                 * Creates a plain object from a check_account_nonce_request message. Also converts values to other types if specified.
                 * @param message check_account_nonce_request
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.mempool.check_account_nonce_request, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this check_account_nonce_request to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a check_account_nonce_response. */
            interface Icheck_account_nonce_response {

                /** check_account_nonce_response success */
                success?: (boolean|null);
            }

            /** Represents a check_account_nonce_response. */
            class check_account_nonce_response implements Icheck_account_nonce_response {

                /**
                 * Constructs a new check_account_nonce_response.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.mempool.Icheck_account_nonce_response);

                /** check_account_nonce_response success. */
                public success: boolean;

                /**
                 * Creates a new check_account_nonce_response instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns check_account_nonce_response instance
                 */
                public static create(properties?: koinos.rpc.mempool.Icheck_account_nonce_response): koinos.rpc.mempool.check_account_nonce_response;

                /**
                 * Encodes the specified check_account_nonce_response message. Does not implicitly {@link koinos.rpc.mempool.check_account_nonce_response.verify|verify} messages.
                 * @param message check_account_nonce_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.mempool.Icheck_account_nonce_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified check_account_nonce_response message, length delimited. Does not implicitly {@link koinos.rpc.mempool.check_account_nonce_response.verify|verify} messages.
                 * @param message check_account_nonce_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.mempool.Icheck_account_nonce_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a check_account_nonce_response message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns check_account_nonce_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.mempool.check_account_nonce_response;

                /**
                 * Decodes a check_account_nonce_response message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns check_account_nonce_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.mempool.check_account_nonce_response;

                /**
                 * Verifies a check_account_nonce_response message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a check_account_nonce_response message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns check_account_nonce_response
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.mempool.check_account_nonce_response;

                /**
                 * Creates a plain object from a check_account_nonce_response message. Also converts values to other types if specified.
                 * @param message check_account_nonce_response
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.mempool.check_account_nonce_response, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this check_account_nonce_response to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_reserved_account_rc_request. */
            interface Iget_reserved_account_rc_request {

                /** get_reserved_account_rc_request account */
                account?: (Uint8Array|null);
            }

            /** Represents a get_reserved_account_rc_request. */
            class get_reserved_account_rc_request implements Iget_reserved_account_rc_request {

                /**
                 * Constructs a new get_reserved_account_rc_request.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.mempool.Iget_reserved_account_rc_request);

                /** get_reserved_account_rc_request account. */
                public account: Uint8Array;

                /**
                 * Creates a new get_reserved_account_rc_request instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_reserved_account_rc_request instance
                 */
                public static create(properties?: koinos.rpc.mempool.Iget_reserved_account_rc_request): koinos.rpc.mempool.get_reserved_account_rc_request;

                /**
                 * Encodes the specified get_reserved_account_rc_request message. Does not implicitly {@link koinos.rpc.mempool.get_reserved_account_rc_request.verify|verify} messages.
                 * @param message get_reserved_account_rc_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.mempool.Iget_reserved_account_rc_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_reserved_account_rc_request message, length delimited. Does not implicitly {@link koinos.rpc.mempool.get_reserved_account_rc_request.verify|verify} messages.
                 * @param message get_reserved_account_rc_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.mempool.Iget_reserved_account_rc_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_reserved_account_rc_request message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_reserved_account_rc_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.mempool.get_reserved_account_rc_request;

                /**
                 * Decodes a get_reserved_account_rc_request message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_reserved_account_rc_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.mempool.get_reserved_account_rc_request;

                /**
                 * Verifies a get_reserved_account_rc_request message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_reserved_account_rc_request message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_reserved_account_rc_request
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.mempool.get_reserved_account_rc_request;

                /**
                 * Creates a plain object from a get_reserved_account_rc_request message. Also converts values to other types if specified.
                 * @param message get_reserved_account_rc_request
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.mempool.get_reserved_account_rc_request, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_reserved_account_rc_request to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_reserved_account_rc_response. */
            interface Iget_reserved_account_rc_response {

                /** get_reserved_account_rc_response rc */
                rc?: (number|Long|null);
            }

            /** Represents a get_reserved_account_rc_response. */
            class get_reserved_account_rc_response implements Iget_reserved_account_rc_response {

                /**
                 * Constructs a new get_reserved_account_rc_response.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.mempool.Iget_reserved_account_rc_response);

                /** get_reserved_account_rc_response rc. */
                public rc: (number|Long);

                /**
                 * Creates a new get_reserved_account_rc_response instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_reserved_account_rc_response instance
                 */
                public static create(properties?: koinos.rpc.mempool.Iget_reserved_account_rc_response): koinos.rpc.mempool.get_reserved_account_rc_response;

                /**
                 * Encodes the specified get_reserved_account_rc_response message. Does not implicitly {@link koinos.rpc.mempool.get_reserved_account_rc_response.verify|verify} messages.
                 * @param message get_reserved_account_rc_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.mempool.Iget_reserved_account_rc_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_reserved_account_rc_response message, length delimited. Does not implicitly {@link koinos.rpc.mempool.get_reserved_account_rc_response.verify|verify} messages.
                 * @param message get_reserved_account_rc_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.mempool.Iget_reserved_account_rc_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_reserved_account_rc_response message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_reserved_account_rc_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.mempool.get_reserved_account_rc_response;

                /**
                 * Decodes a get_reserved_account_rc_response message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_reserved_account_rc_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.mempool.get_reserved_account_rc_response;

                /**
                 * Verifies a get_reserved_account_rc_response message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_reserved_account_rc_response message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_reserved_account_rc_response
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.mempool.get_reserved_account_rc_response;

                /**
                 * Creates a plain object from a get_reserved_account_rc_response message. Also converts values to other types if specified.
                 * @param message get_reserved_account_rc_response
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.mempool.get_reserved_account_rc_response, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_reserved_account_rc_response to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_pending_nonce_request. */
            interface Iget_pending_nonce_request {

                /** get_pending_nonce_request payee */
                payee?: (Uint8Array|null);

                /** get_pending_nonce_request block_id */
                block_id?: (Uint8Array|null);
            }

            /** Represents a get_pending_nonce_request. */
            class get_pending_nonce_request implements Iget_pending_nonce_request {

                /**
                 * Constructs a new get_pending_nonce_request.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.mempool.Iget_pending_nonce_request);

                /** get_pending_nonce_request payee. */
                public payee: Uint8Array;

                /** get_pending_nonce_request block_id. */
                public block_id?: (Uint8Array|null);

                /** get_pending_nonce_request _block_id. */
                public _block_id?: "block_id";

                /**
                 * Creates a new get_pending_nonce_request instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_pending_nonce_request instance
                 */
                public static create(properties?: koinos.rpc.mempool.Iget_pending_nonce_request): koinos.rpc.mempool.get_pending_nonce_request;

                /**
                 * Encodes the specified get_pending_nonce_request message. Does not implicitly {@link koinos.rpc.mempool.get_pending_nonce_request.verify|verify} messages.
                 * @param message get_pending_nonce_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.mempool.Iget_pending_nonce_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_pending_nonce_request message, length delimited. Does not implicitly {@link koinos.rpc.mempool.get_pending_nonce_request.verify|verify} messages.
                 * @param message get_pending_nonce_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.mempool.Iget_pending_nonce_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_pending_nonce_request message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_pending_nonce_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.mempool.get_pending_nonce_request;

                /**
                 * Decodes a get_pending_nonce_request message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_pending_nonce_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.mempool.get_pending_nonce_request;

                /**
                 * Verifies a get_pending_nonce_request message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_pending_nonce_request message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_pending_nonce_request
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.mempool.get_pending_nonce_request;

                /**
                 * Creates a plain object from a get_pending_nonce_request message. Also converts values to other types if specified.
                 * @param message get_pending_nonce_request
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.mempool.get_pending_nonce_request, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_pending_nonce_request to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_pending_nonce_response. */
            interface Iget_pending_nonce_response {

                /** get_pending_nonce_response nonce */
                nonce?: (Uint8Array|null);
            }

            /** Represents a get_pending_nonce_response. */
            class get_pending_nonce_response implements Iget_pending_nonce_response {

                /**
                 * Constructs a new get_pending_nonce_response.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.mempool.Iget_pending_nonce_response);

                /** get_pending_nonce_response nonce. */
                public nonce: Uint8Array;

                /**
                 * Creates a new get_pending_nonce_response instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_pending_nonce_response instance
                 */
                public static create(properties?: koinos.rpc.mempool.Iget_pending_nonce_response): koinos.rpc.mempool.get_pending_nonce_response;

                /**
                 * Encodes the specified get_pending_nonce_response message. Does not implicitly {@link koinos.rpc.mempool.get_pending_nonce_response.verify|verify} messages.
                 * @param message get_pending_nonce_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.mempool.Iget_pending_nonce_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_pending_nonce_response message, length delimited. Does not implicitly {@link koinos.rpc.mempool.get_pending_nonce_response.verify|verify} messages.
                 * @param message get_pending_nonce_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.mempool.Iget_pending_nonce_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_pending_nonce_response message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_pending_nonce_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.mempool.get_pending_nonce_response;

                /**
                 * Decodes a get_pending_nonce_response message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_pending_nonce_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.mempool.get_pending_nonce_response;

                /**
                 * Verifies a get_pending_nonce_response message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_pending_nonce_response message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_pending_nonce_response
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.mempool.get_pending_nonce_response;

                /**
                 * Creates a plain object from a get_pending_nonce_response message. Also converts values to other types if specified.
                 * @param message get_pending_nonce_response
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.mempool.get_pending_nonce_response, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_pending_nonce_response to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_pending_transaction_count_request. */
            interface Iget_pending_transaction_count_request {

                /** get_pending_transaction_count_request payee */
                payee?: (Uint8Array|null);

                /** get_pending_transaction_count_request block_id */
                block_id?: (Uint8Array|null);
            }

            /** Represents a get_pending_transaction_count_request. */
            class get_pending_transaction_count_request implements Iget_pending_transaction_count_request {

                /**
                 * Constructs a new get_pending_transaction_count_request.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.mempool.Iget_pending_transaction_count_request);

                /** get_pending_transaction_count_request payee. */
                public payee: Uint8Array;

                /** get_pending_transaction_count_request block_id. */
                public block_id?: (Uint8Array|null);

                /** get_pending_transaction_count_request _block_id. */
                public _block_id?: "block_id";

                /**
                 * Creates a new get_pending_transaction_count_request instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_pending_transaction_count_request instance
                 */
                public static create(properties?: koinos.rpc.mempool.Iget_pending_transaction_count_request): koinos.rpc.mempool.get_pending_transaction_count_request;

                /**
                 * Encodes the specified get_pending_transaction_count_request message. Does not implicitly {@link koinos.rpc.mempool.get_pending_transaction_count_request.verify|verify} messages.
                 * @param message get_pending_transaction_count_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.mempool.Iget_pending_transaction_count_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_pending_transaction_count_request message, length delimited. Does not implicitly {@link koinos.rpc.mempool.get_pending_transaction_count_request.verify|verify} messages.
                 * @param message get_pending_transaction_count_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.mempool.Iget_pending_transaction_count_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_pending_transaction_count_request message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_pending_transaction_count_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.mempool.get_pending_transaction_count_request;

                /**
                 * Decodes a get_pending_transaction_count_request message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_pending_transaction_count_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.mempool.get_pending_transaction_count_request;

                /**
                 * Verifies a get_pending_transaction_count_request message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_pending_transaction_count_request message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_pending_transaction_count_request
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.mempool.get_pending_transaction_count_request;

                /**
                 * Creates a plain object from a get_pending_transaction_count_request message. Also converts values to other types if specified.
                 * @param message get_pending_transaction_count_request
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.mempool.get_pending_transaction_count_request, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_pending_transaction_count_request to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a get_pending_transaction_count_response. */
            interface Iget_pending_transaction_count_response {

                /** get_pending_transaction_count_response count */
                count?: (number|Long|null);
            }

            /** Represents a get_pending_transaction_count_response. */
            class get_pending_transaction_count_response implements Iget_pending_transaction_count_response {

                /**
                 * Constructs a new get_pending_transaction_count_response.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.mempool.Iget_pending_transaction_count_response);

                /** get_pending_transaction_count_response count. */
                public count: (number|Long);

                /**
                 * Creates a new get_pending_transaction_count_response instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns get_pending_transaction_count_response instance
                 */
                public static create(properties?: koinos.rpc.mempool.Iget_pending_transaction_count_response): koinos.rpc.mempool.get_pending_transaction_count_response;

                /**
                 * Encodes the specified get_pending_transaction_count_response message. Does not implicitly {@link koinos.rpc.mempool.get_pending_transaction_count_response.verify|verify} messages.
                 * @param message get_pending_transaction_count_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.mempool.Iget_pending_transaction_count_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified get_pending_transaction_count_response message, length delimited. Does not implicitly {@link koinos.rpc.mempool.get_pending_transaction_count_response.verify|verify} messages.
                 * @param message get_pending_transaction_count_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.mempool.Iget_pending_transaction_count_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a get_pending_transaction_count_response message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns get_pending_transaction_count_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.mempool.get_pending_transaction_count_response;

                /**
                 * Decodes a get_pending_transaction_count_response message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns get_pending_transaction_count_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.mempool.get_pending_transaction_count_response;

                /**
                 * Verifies a get_pending_transaction_count_response message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a get_pending_transaction_count_response message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns get_pending_transaction_count_response
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.mempool.get_pending_transaction_count_response;

                /**
                 * Creates a plain object from a get_pending_transaction_count_response message. Also converts values to other types if specified.
                 * @param message get_pending_transaction_count_response
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.mempool.get_pending_transaction_count_response, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this get_pending_transaction_count_response to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a mempool_request. */
            interface Imempool_request {

                /** mempool_request reserved */
                reserved?: (koinos.rpc.Ireserved_rpc|null);

                /** mempool_request check_pending_account_resources */
                check_pending_account_resources?: (koinos.rpc.mempool.Icheck_pending_account_resources_request|null);

                /** mempool_request get_pending_transactions */
                get_pending_transactions?: (koinos.rpc.mempool.Iget_pending_transactions_request|null);

                /** mempool_request check_account_nonce */
                check_account_nonce?: (koinos.rpc.mempool.Icheck_account_nonce_request|null);

                /** mempool_request get_reserved_account_rc */
                get_reserved_account_rc?: (koinos.rpc.mempool.Iget_reserved_account_rc_request|null);

                /** mempool_request get_pending_nonce */
                get_pending_nonce?: (koinos.rpc.mempool.Iget_pending_nonce_request|null);

                /** mempool_request get_pending_transaction_count */
                get_pending_transaction_count?: (koinos.rpc.mempool.Iget_pending_transaction_count_request|null);
            }

            /** Represents a mempool_request. */
            class mempool_request implements Imempool_request {

                /**
                 * Constructs a new mempool_request.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.mempool.Imempool_request);

                /** mempool_request reserved. */
                public reserved?: (koinos.rpc.Ireserved_rpc|null);

                /** mempool_request check_pending_account_resources. */
                public check_pending_account_resources?: (koinos.rpc.mempool.Icheck_pending_account_resources_request|null);

                /** mempool_request get_pending_transactions. */
                public get_pending_transactions?: (koinos.rpc.mempool.Iget_pending_transactions_request|null);

                /** mempool_request check_account_nonce. */
                public check_account_nonce?: (koinos.rpc.mempool.Icheck_account_nonce_request|null);

                /** mempool_request get_reserved_account_rc. */
                public get_reserved_account_rc?: (koinos.rpc.mempool.Iget_reserved_account_rc_request|null);

                /** mempool_request get_pending_nonce. */
                public get_pending_nonce?: (koinos.rpc.mempool.Iget_pending_nonce_request|null);

                /** mempool_request get_pending_transaction_count. */
                public get_pending_transaction_count?: (koinos.rpc.mempool.Iget_pending_transaction_count_request|null);

                /** mempool_request request. */
                public request?: ("reserved"|"check_pending_account_resources"|"get_pending_transactions"|"check_account_nonce"|"get_reserved_account_rc"|"get_pending_nonce"|"get_pending_transaction_count");

                /**
                 * Creates a new mempool_request instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns mempool_request instance
                 */
                public static create(properties?: koinos.rpc.mempool.Imempool_request): koinos.rpc.mempool.mempool_request;

                /**
                 * Encodes the specified mempool_request message. Does not implicitly {@link koinos.rpc.mempool.mempool_request.verify|verify} messages.
                 * @param message mempool_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.mempool.Imempool_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified mempool_request message, length delimited. Does not implicitly {@link koinos.rpc.mempool.mempool_request.verify|verify} messages.
                 * @param message mempool_request message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.mempool.Imempool_request, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a mempool_request message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns mempool_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.mempool.mempool_request;

                /**
                 * Decodes a mempool_request message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns mempool_request
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.mempool.mempool_request;

                /**
                 * Verifies a mempool_request message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a mempool_request message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns mempool_request
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.mempool.mempool_request;

                /**
                 * Creates a plain object from a mempool_request message. Also converts values to other types if specified.
                 * @param message mempool_request
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.mempool.mempool_request, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this mempool_request to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a mempool_response. */
            interface Imempool_response {

                /** mempool_response reserved */
                reserved?: (koinos.rpc.Ireserved_rpc|null);

                /** mempool_response error */
                error?: (koinos.rpc.Ierror_status|null);

                /** mempool_response check_pending_account_resources */
                check_pending_account_resources?: (koinos.rpc.mempool.Icheck_pending_account_resources_response|null);

                /** mempool_response get_pending_transactions */
                get_pending_transactions?: (koinos.rpc.mempool.Iget_pending_transactions_response|null);

                /** mempool_response check_account_nonce */
                check_account_nonce?: (koinos.rpc.mempool.Icheck_account_nonce_response|null);

                /** mempool_response get_reserved_account_rc */
                get_reserved_account_rc?: (koinos.rpc.mempool.Iget_reserved_account_rc_response|null);

                /** mempool_response get_pending_nonce */
                get_pending_nonce?: (koinos.rpc.mempool.Iget_pending_nonce_response|null);

                /** mempool_response get_pending_transaction_count */
                get_pending_transaction_count?: (koinos.rpc.mempool.Iget_pending_transaction_count_response|null);
            }

            /** Represents a mempool_response. */
            class mempool_response implements Imempool_response {

                /**
                 * Constructs a new mempool_response.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: koinos.rpc.mempool.Imempool_response);

                /** mempool_response reserved. */
                public reserved?: (koinos.rpc.Ireserved_rpc|null);

                /** mempool_response error. */
                public error?: (koinos.rpc.Ierror_status|null);

                /** mempool_response check_pending_account_resources. */
                public check_pending_account_resources?: (koinos.rpc.mempool.Icheck_pending_account_resources_response|null);

                /** mempool_response get_pending_transactions. */
                public get_pending_transactions?: (koinos.rpc.mempool.Iget_pending_transactions_response|null);

                /** mempool_response check_account_nonce. */
                public check_account_nonce?: (koinos.rpc.mempool.Icheck_account_nonce_response|null);

                /** mempool_response get_reserved_account_rc. */
                public get_reserved_account_rc?: (koinos.rpc.mempool.Iget_reserved_account_rc_response|null);

                /** mempool_response get_pending_nonce. */
                public get_pending_nonce?: (koinos.rpc.mempool.Iget_pending_nonce_response|null);

                /** mempool_response get_pending_transaction_count. */
                public get_pending_transaction_count?: (koinos.rpc.mempool.Iget_pending_transaction_count_response|null);

                /** mempool_response response. */
                public response?: ("reserved"|"error"|"check_pending_account_resources"|"get_pending_transactions"|"check_account_nonce"|"get_reserved_account_rc"|"get_pending_nonce"|"get_pending_transaction_count");

                /**
                 * Creates a new mempool_response instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns mempool_response instance
                 */
                public static create(properties?: koinos.rpc.mempool.Imempool_response): koinos.rpc.mempool.mempool_response;

                /**
                 * Encodes the specified mempool_response message. Does not implicitly {@link koinos.rpc.mempool.mempool_response.verify|verify} messages.
                 * @param message mempool_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: koinos.rpc.mempool.Imempool_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified mempool_response message, length delimited. Does not implicitly {@link koinos.rpc.mempool.mempool_response.verify|verify} messages.
                 * @param message mempool_response message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: koinos.rpc.mempool.Imempool_response, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a mempool_response message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns mempool_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.mempool.mempool_response;

                /**
                 * Decodes a mempool_response message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns mempool_response
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.mempool.mempool_response;

                /**
                 * Verifies a mempool_response message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a mempool_response message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns mempool_response
                 */
                public static fromObject(object: { [k: string]: any }): koinos.rpc.mempool.mempool_response;

                /**
                 * Creates a plain object from a mempool_response message. Also converts values to other types if specified.
                 * @param message mempool_response
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: koinos.rpc.mempool.mempool_response, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this mempool_response to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a reserved_rpc. */
        interface Ireserved_rpc {
        }

        /** Represents a reserved_rpc. */
        class reserved_rpc implements Ireserved_rpc {

            /**
             * Constructs a new reserved_rpc.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.rpc.Ireserved_rpc);

            /**
             * Creates a new reserved_rpc instance using the specified properties.
             * @param [properties] Properties to set
             * @returns reserved_rpc instance
             */
            public static create(properties?: koinos.rpc.Ireserved_rpc): koinos.rpc.reserved_rpc;

            /**
             * Encodes the specified reserved_rpc message. Does not implicitly {@link koinos.rpc.reserved_rpc.verify|verify} messages.
             * @param message reserved_rpc message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.rpc.Ireserved_rpc, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified reserved_rpc message, length delimited. Does not implicitly {@link koinos.rpc.reserved_rpc.verify|verify} messages.
             * @param message reserved_rpc message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.rpc.Ireserved_rpc, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a reserved_rpc message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns reserved_rpc
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.reserved_rpc;

            /**
             * Decodes a reserved_rpc message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns reserved_rpc
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.reserved_rpc;

            /**
             * Verifies a reserved_rpc message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a reserved_rpc message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns reserved_rpc
             */
            public static fromObject(object: { [k: string]: any }): koinos.rpc.reserved_rpc;

            /**
             * Creates a plain object from a reserved_rpc message. Also converts values to other types if specified.
             * @param message reserved_rpc
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.rpc.reserved_rpc, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this reserved_rpc to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an error_status. */
        interface Ierror_status {

            /** error_status message */
            message?: (string|null);

            /** error_status data */
            data?: (string|null);

            /** error_status details */
            details?: (google.protobuf.IAny[]|null);
        }

        /** Represents an error_status. */
        class error_status implements Ierror_status {

            /**
             * Constructs a new error_status.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.rpc.Ierror_status);

            /** error_status message. */
            public message: string;

            /** error_status data. */
            public data: string;

            /** error_status details. */
            public details: google.protobuf.IAny[];

            /**
             * Creates a new error_status instance using the specified properties.
             * @param [properties] Properties to set
             * @returns error_status instance
             */
            public static create(properties?: koinos.rpc.Ierror_status): koinos.rpc.error_status;

            /**
             * Encodes the specified error_status message. Does not implicitly {@link koinos.rpc.error_status.verify|verify} messages.
             * @param message error_status message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.rpc.Ierror_status, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified error_status message, length delimited. Does not implicitly {@link koinos.rpc.error_status.verify|verify} messages.
             * @param message error_status message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.rpc.Ierror_status, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an error_status message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns error_status
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.rpc.error_status;

            /**
             * Decodes an error_status message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns error_status
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.rpc.error_status;

            /**
             * Verifies an error_status message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an error_status message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns error_status
             */
            public static fromObject(object: { [k: string]: any }): koinos.rpc.error_status;

            /**
             * Creates a plain object from an error_status message. Also converts values to other types if specified.
             * @param message error_status
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.rpc.error_status, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this error_status to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Namespace services. */
    namespace services {

        /** Represents a koinos */
        class koinos extends $protobuf.rpc.Service {

            /**
             * Constructs a new koinos service.
             * @param rpcImpl RPC implementation
             * @param [requestDelimited=false] Whether requests are length-delimited
             * @param [responseDelimited=false] Whether responses are length-delimited
             */
            constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

            /**
             * Creates new koinos service using the specified rpc implementation.
             * @param rpcImpl RPC implementation
             * @param [requestDelimited=false] Whether requests are length-delimited
             * @param [responseDelimited=false] Whether responses are length-delimited
             * @returns RPC service. Useful where requests and/or responses are streamed.
             */
            public static create(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean): koinos;

            /**
             * Calls get_account_history.
             * @param request get_account_history_request message or plain object
             * @param callback Node-style callback called with the error, if any, and get_account_history_response
             */
            public get_account_history(request: koinos.rpc.account_history.Iget_account_history_request, callback: koinos.services.koinos.get_account_historyCallback): void;

            /**
             * Calls get_account_history.
             * @param request get_account_history_request message or plain object
             * @returns Promise
             */
            public get_account_history(request: koinos.rpc.account_history.Iget_account_history_request): Promise<koinos.rpc.account_history.get_account_history_response>;

            /**
             * Calls get_blocks_by_id.
             * @param request get_blocks_by_id_request message or plain object
             * @param callback Node-style callback called with the error, if any, and get_blocks_by_id_response
             */
            public get_blocks_by_id(request: koinos.rpc.block_store.Iget_blocks_by_id_request, callback: koinos.services.koinos.get_blocks_by_idCallback): void;

            /**
             * Calls get_blocks_by_id.
             * @param request get_blocks_by_id_request message or plain object
             * @returns Promise
             */
            public get_blocks_by_id(request: koinos.rpc.block_store.Iget_blocks_by_id_request): Promise<koinos.rpc.block_store.get_blocks_by_id_response>;

            /**
             * Calls get_blocks_by_height.
             * @param request get_blocks_by_height_request message or plain object
             * @param callback Node-style callback called with the error, if any, and get_blocks_by_height_response
             */
            public get_blocks_by_height(request: koinos.rpc.block_store.Iget_blocks_by_height_request, callback: koinos.services.koinos.get_blocks_by_heightCallback): void;

            /**
             * Calls get_blocks_by_height.
             * @param request get_blocks_by_height_request message or plain object
             * @returns Promise
             */
            public get_blocks_by_height(request: koinos.rpc.block_store.Iget_blocks_by_height_request): Promise<koinos.rpc.block_store.get_blocks_by_height_response>;

            /**
             * Calls get_highest_block.
             * @param request get_highest_block_request message or plain object
             * @param callback Node-style callback called with the error, if any, and get_highest_block_response
             */
            public get_highest_block(request: koinos.rpc.block_store.Iget_highest_block_request, callback: koinos.services.koinos.get_highest_blockCallback): void;

            /**
             * Calls get_highest_block.
             * @param request get_highest_block_request message or plain object
             * @returns Promise
             */
            public get_highest_block(request: koinos.rpc.block_store.Iget_highest_block_request): Promise<koinos.rpc.block_store.get_highest_block_response>;

            /**
             * Calls submit_block.
             * @param request submit_block_request message or plain object
             * @param callback Node-style callback called with the error, if any, and submit_block_response
             */
            public submit_block(request: koinos.rpc.chain.Isubmit_block_request, callback: koinos.services.koinos.submit_blockCallback): void;

            /**
             * Calls submit_block.
             * @param request submit_block_request message or plain object
             * @returns Promise
             */
            public submit_block(request: koinos.rpc.chain.Isubmit_block_request): Promise<koinos.rpc.chain.submit_block_response>;

            /**
             * Calls submit_transaction.
             * @param request submit_transaction_request message or plain object
             * @param callback Node-style callback called with the error, if any, and submit_transaction_response
             */
            public submit_transaction(request: koinos.rpc.chain.Isubmit_transaction_request, callback: koinos.services.koinos.submit_transactionCallback): void;

            /**
             * Calls submit_transaction.
             * @param request submit_transaction_request message or plain object
             * @returns Promise
             */
            public submit_transaction(request: koinos.rpc.chain.Isubmit_transaction_request): Promise<koinos.rpc.chain.submit_transaction_response>;

            /**
             * Calls get_head_info.
             * @param request get_head_info_request message or plain object
             * @param callback Node-style callback called with the error, if any, and get_head_info_response
             */
            public get_head_info(request: koinos.rpc.chain.Iget_head_info_request, callback: koinos.services.koinos.get_head_infoCallback): void;

            /**
             * Calls get_head_info.
             * @param request get_head_info_request message or plain object
             * @returns Promise
             */
            public get_head_info(request: koinos.rpc.chain.Iget_head_info_request): Promise<koinos.rpc.chain.get_head_info_response>;

            /**
             * Calls get_chain_id.
             * @param request get_chain_id_request message or plain object
             * @param callback Node-style callback called with the error, if any, and get_chain_id_response
             */
            public get_chain_id(request: koinos.rpc.chain.Iget_chain_id_request, callback: koinos.services.koinos.get_chain_idCallback): void;

            /**
             * Calls get_chain_id.
             * @param request get_chain_id_request message or plain object
             * @returns Promise
             */
            public get_chain_id(request: koinos.rpc.chain.Iget_chain_id_request): Promise<koinos.rpc.chain.get_chain_id_response>;

            /**
             * Calls get_fork_heads.
             * @param request get_fork_heads_request message or plain object
             * @param callback Node-style callback called with the error, if any, and get_fork_heads_response
             */
            public get_fork_heads(request: koinos.rpc.chain.Iget_fork_heads_request, callback: koinos.services.koinos.get_fork_headsCallback): void;

            /**
             * Calls get_fork_heads.
             * @param request get_fork_heads_request message or plain object
             * @returns Promise
             */
            public get_fork_heads(request: koinos.rpc.chain.Iget_fork_heads_request): Promise<koinos.rpc.chain.get_fork_heads_response>;

            /**
             * Calls read_contract.
             * @param request read_contract_request message or plain object
             * @param callback Node-style callback called with the error, if any, and read_contract_response
             */
            public read_contract(request: koinos.rpc.chain.Iread_contract_request, callback: koinos.services.koinos.read_contractCallback): void;

            /**
             * Calls read_contract.
             * @param request read_contract_request message or plain object
             * @returns Promise
             */
            public read_contract(request: koinos.rpc.chain.Iread_contract_request): Promise<koinos.rpc.chain.read_contract_response>;

            /**
             * Calls get_account_nonce.
             * @param request get_account_nonce_request message or plain object
             * @param callback Node-style callback called with the error, if any, and get_account_nonce_response
             */
            public get_account_nonce(request: koinos.rpc.chain.Iget_account_nonce_request, callback: koinos.services.koinos.get_account_nonceCallback): void;

            /**
             * Calls get_account_nonce.
             * @param request get_account_nonce_request message or plain object
             * @returns Promise
             */
            public get_account_nonce(request: koinos.rpc.chain.Iget_account_nonce_request): Promise<koinos.rpc.chain.get_account_nonce_response>;

            /**
             * Calls get_account_rc.
             * @param request get_account_rc_request message or plain object
             * @param callback Node-style callback called with the error, if any, and get_account_rc_response
             */
            public get_account_rc(request: koinos.rpc.chain.Iget_account_rc_request, callback: koinos.services.koinos.get_account_rcCallback): void;

            /**
             * Calls get_account_rc.
             * @param request get_account_rc_request message or plain object
             * @returns Promise
             */
            public get_account_rc(request: koinos.rpc.chain.Iget_account_rc_request): Promise<koinos.rpc.chain.get_account_rc_response>;

            /**
             * Calls get_resource_limits.
             * @param request get_resource_limits_request message or plain object
             * @param callback Node-style callback called with the error, if any, and get_resource_limits_response
             */
            public get_resource_limits(request: koinos.rpc.chain.Iget_resource_limits_request, callback: koinos.services.koinos.get_resource_limitsCallback): void;

            /**
             * Calls get_resource_limits.
             * @param request get_resource_limits_request message or plain object
             * @returns Promise
             */
            public get_resource_limits(request: koinos.rpc.chain.Iget_resource_limits_request): Promise<koinos.rpc.chain.get_resource_limits_response>;

            /**
             * Calls invoke_system_call.
             * @param request invoke_system_call_request message or plain object
             * @param callback Node-style callback called with the error, if any, and invoke_system_call_response
             */
            public invoke_system_call(request: koinos.rpc.chain.Iinvoke_system_call_request, callback: koinos.services.koinos.invoke_system_callCallback): void;

            /**
             * Calls invoke_system_call.
             * @param request invoke_system_call_request message or plain object
             * @returns Promise
             */
            public invoke_system_call(request: koinos.rpc.chain.Iinvoke_system_call_request): Promise<koinos.rpc.chain.invoke_system_call_response>;

            /**
             * Calls get_contract_meta.
             * @param request get_contract_meta_request message or plain object
             * @param callback Node-style callback called with the error, if any, and get_contract_meta_response
             */
            public get_contract_meta(request: koinos.rpc.contract_meta_store.Iget_contract_meta_request, callback: koinos.services.koinos.get_contract_metaCallback): void;

            /**
             * Calls get_contract_meta.
             * @param request get_contract_meta_request message or plain object
             * @returns Promise
             */
            public get_contract_meta(request: koinos.rpc.contract_meta_store.Iget_contract_meta_request): Promise<koinos.rpc.contract_meta_store.get_contract_meta_response>;

            /**
             * Calls get_pending_transactions.
             * @param request get_pending_transactions_request message or plain object
             * @param callback Node-style callback called with the error, if any, and get_pending_transactions_response
             */
            public get_pending_transactions(request: koinos.rpc.mempool.Iget_pending_transactions_request, callback: koinos.services.koinos.get_pending_transactionsCallback): void;

            /**
             * Calls get_pending_transactions.
             * @param request get_pending_transactions_request message or plain object
             * @returns Promise
             */
            public get_pending_transactions(request: koinos.rpc.mempool.Iget_pending_transactions_request): Promise<koinos.rpc.mempool.get_pending_transactions_response>;

            /**
             * Calls check_pending_account_resources.
             * @param request check_pending_account_resources_request message or plain object
             * @param callback Node-style callback called with the error, if any, and check_pending_account_resources_response
             */
            public check_pending_account_resources(request: koinos.rpc.mempool.Icheck_pending_account_resources_request, callback: koinos.services.koinos.check_pending_account_resourcesCallback): void;

            /**
             * Calls check_pending_account_resources.
             * @param request check_pending_account_resources_request message or plain object
             * @returns Promise
             */
            public check_pending_account_resources(request: koinos.rpc.mempool.Icheck_pending_account_resources_request): Promise<koinos.rpc.mempool.check_pending_account_resources_response>;

            /**
             * Calls get_gossip_status.
             * @param request get_gossip_status_request message or plain object
             * @param callback Node-style callback called with the error, if any, and get_gossip_status_response
             */
            public get_gossip_status(request: koinos.rpc.p2p.Iget_gossip_status_request, callback: koinos.services.koinos.get_gossip_statusCallback): void;

            /**
             * Calls get_gossip_status.
             * @param request get_gossip_status_request message or plain object
             * @returns Promise
             */
            public get_gossip_status(request: koinos.rpc.p2p.Iget_gossip_status_request): Promise<koinos.rpc.p2p.get_gossip_status_response>;

            /**
             * Calls get_transactions_by_id.
             * @param request get_transactions_by_id_request message or plain object
             * @param callback Node-style callback called with the error, if any, and get_transactions_by_id_response
             */
            public get_transactions_by_id(request: koinos.rpc.transaction_store.Iget_transactions_by_id_request, callback: koinos.services.koinos.get_transactions_by_idCallback): void;

            /**
             * Calls get_transactions_by_id.
             * @param request get_transactions_by_id_request message or plain object
             * @returns Promise
             */
            public get_transactions_by_id(request: koinos.rpc.transaction_store.Iget_transactions_by_id_request): Promise<koinos.rpc.transaction_store.get_transactions_by_id_response>;
        }

        namespace koinos {

            /**
             * Callback as used by {@link koinos.services.koinos#get_account_history}.
             * @param error Error, if any
             * @param [response] get_account_history_response
             */
            type get_account_historyCallback = (error: (Error|null), response?: koinos.rpc.account_history.get_account_history_response) => void;

            /**
             * Callback as used by {@link koinos.services.koinos#get_blocks_by_id}.
             * @param error Error, if any
             * @param [response] get_blocks_by_id_response
             */
            type get_blocks_by_idCallback = (error: (Error|null), response?: koinos.rpc.block_store.get_blocks_by_id_response) => void;

            /**
             * Callback as used by {@link koinos.services.koinos#get_blocks_by_height}.
             * @param error Error, if any
             * @param [response] get_blocks_by_height_response
             */
            type get_blocks_by_heightCallback = (error: (Error|null), response?: koinos.rpc.block_store.get_blocks_by_height_response) => void;

            /**
             * Callback as used by {@link koinos.services.koinos#get_highest_block}.
             * @param error Error, if any
             * @param [response] get_highest_block_response
             */
            type get_highest_blockCallback = (error: (Error|null), response?: koinos.rpc.block_store.get_highest_block_response) => void;

            /**
             * Callback as used by {@link koinos.services.koinos#submit_block}.
             * @param error Error, if any
             * @param [response] submit_block_response
             */
            type submit_blockCallback = (error: (Error|null), response?: koinos.rpc.chain.submit_block_response) => void;

            /**
             * Callback as used by {@link koinos.services.koinos#submit_transaction}.
             * @param error Error, if any
             * @param [response] submit_transaction_response
             */
            type submit_transactionCallback = (error: (Error|null), response?: koinos.rpc.chain.submit_transaction_response) => void;

            /**
             * Callback as used by {@link koinos.services.koinos#get_head_info}.
             * @param error Error, if any
             * @param [response] get_head_info_response
             */
            type get_head_infoCallback = (error: (Error|null), response?: koinos.rpc.chain.get_head_info_response) => void;

            /**
             * Callback as used by {@link koinos.services.koinos#get_chain_id}.
             * @param error Error, if any
             * @param [response] get_chain_id_response
             */
            type get_chain_idCallback = (error: (Error|null), response?: koinos.rpc.chain.get_chain_id_response) => void;

            /**
             * Callback as used by {@link koinos.services.koinos#get_fork_heads}.
             * @param error Error, if any
             * @param [response] get_fork_heads_response
             */
            type get_fork_headsCallback = (error: (Error|null), response?: koinos.rpc.chain.get_fork_heads_response) => void;

            /**
             * Callback as used by {@link koinos.services.koinos#read_contract}.
             * @param error Error, if any
             * @param [response] read_contract_response
             */
            type read_contractCallback = (error: (Error|null), response?: koinos.rpc.chain.read_contract_response) => void;

            /**
             * Callback as used by {@link koinos.services.koinos#get_account_nonce}.
             * @param error Error, if any
             * @param [response] get_account_nonce_response
             */
            type get_account_nonceCallback = (error: (Error|null), response?: koinos.rpc.chain.get_account_nonce_response) => void;

            /**
             * Callback as used by {@link koinos.services.koinos#get_account_rc}.
             * @param error Error, if any
             * @param [response] get_account_rc_response
             */
            type get_account_rcCallback = (error: (Error|null), response?: koinos.rpc.chain.get_account_rc_response) => void;

            /**
             * Callback as used by {@link koinos.services.koinos#get_resource_limits}.
             * @param error Error, if any
             * @param [response] get_resource_limits_response
             */
            type get_resource_limitsCallback = (error: (Error|null), response?: koinos.rpc.chain.get_resource_limits_response) => void;

            /**
             * Callback as used by {@link koinos.services.koinos#invoke_system_call}.
             * @param error Error, if any
             * @param [response] invoke_system_call_response
             */
            type invoke_system_callCallback = (error: (Error|null), response?: koinos.rpc.chain.invoke_system_call_response) => void;

            /**
             * Callback as used by {@link koinos.services.koinos#get_contract_meta}.
             * @param error Error, if any
             * @param [response] get_contract_meta_response
             */
            type get_contract_metaCallback = (error: (Error|null), response?: koinos.rpc.contract_meta_store.get_contract_meta_response) => void;

            /**
             * Callback as used by {@link koinos.services.koinos#get_pending_transactions}.
             * @param error Error, if any
             * @param [response] get_pending_transactions_response
             */
            type get_pending_transactionsCallback = (error: (Error|null), response?: koinos.rpc.mempool.get_pending_transactions_response) => void;

            /**
             * Callback as used by {@link koinos.services.koinos#check_pending_account_resources}.
             * @param error Error, if any
             * @param [response] check_pending_account_resources_response
             */
            type check_pending_account_resourcesCallback = (error: (Error|null), response?: koinos.rpc.mempool.check_pending_account_resources_response) => void;

            /**
             * Callback as used by {@link koinos.services.koinos#get_gossip_status}.
             * @param error Error, if any
             * @param [response] get_gossip_status_response
             */
            type get_gossip_statusCallback = (error: (Error|null), response?: koinos.rpc.p2p.get_gossip_status_response) => void;

            /**
             * Callback as used by {@link koinos.services.koinos#get_transactions_by_id}.
             * @param error Error, if any
             * @param [response] get_transactions_by_id_response
             */
            type get_transactions_by_idCallback = (error: (Error|null), response?: koinos.rpc.transaction_store.get_transactions_by_id_response) => void;
        }
    }

    /** Namespace account_history. */
    namespace account_history {

        /** Properties of an account_metadata. */
        interface Iaccount_metadata {

            /** account_metadata seq_num */
            seq_num?: (number|Long|null);
        }

        /** Represents an account_metadata. */
        class account_metadata implements Iaccount_metadata {

            /**
             * Constructs a new account_metadata.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.account_history.Iaccount_metadata);

            /** account_metadata seq_num. */
            public seq_num: (number|Long);

            /**
             * Creates a new account_metadata instance using the specified properties.
             * @param [properties] Properties to set
             * @returns account_metadata instance
             */
            public static create(properties?: koinos.account_history.Iaccount_metadata): koinos.account_history.account_metadata;

            /**
             * Encodes the specified account_metadata message. Does not implicitly {@link koinos.account_history.account_metadata.verify|verify} messages.
             * @param message account_metadata message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.account_history.Iaccount_metadata, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified account_metadata message, length delimited. Does not implicitly {@link koinos.account_history.account_metadata.verify|verify} messages.
             * @param message account_metadata message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.account_history.Iaccount_metadata, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an account_metadata message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns account_metadata
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.account_history.account_metadata;

            /**
             * Decodes an account_metadata message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns account_metadata
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.account_history.account_metadata;

            /**
             * Verifies an account_metadata message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an account_metadata message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns account_metadata
             */
            public static fromObject(object: { [k: string]: any }): koinos.account_history.account_metadata;

            /**
             * Creates a plain object from an account_metadata message. Also converts values to other types if specified.
             * @param message account_metadata
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.account_history.account_metadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this account_metadata to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a history_index. */
        interface Ihistory_index {

            /** history_index address */
            address?: (Uint8Array|null);

            /** history_index seq_num */
            seq_num?: (number|Long|null);
        }

        /** Represents a history_index. */
        class history_index implements Ihistory_index {

            /**
             * Constructs a new history_index.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.account_history.Ihistory_index);

            /** history_index address. */
            public address: Uint8Array;

            /** history_index seq_num. */
            public seq_num: (number|Long);

            /**
             * Creates a new history_index instance using the specified properties.
             * @param [properties] Properties to set
             * @returns history_index instance
             */
            public static create(properties?: koinos.account_history.Ihistory_index): koinos.account_history.history_index;

            /**
             * Encodes the specified history_index message. Does not implicitly {@link koinos.account_history.history_index.verify|verify} messages.
             * @param message history_index message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.account_history.Ihistory_index, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified history_index message, length delimited. Does not implicitly {@link koinos.account_history.history_index.verify|verify} messages.
             * @param message history_index message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.account_history.Ihistory_index, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a history_index message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns history_index
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.account_history.history_index;

            /**
             * Decodes a history_index message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns history_index
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.account_history.history_index;

            /**
             * Verifies a history_index message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a history_index message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns history_index
             */
            public static fromObject(object: { [k: string]: any }): koinos.account_history.history_index;

            /**
             * Creates a plain object from a history_index message. Also converts values to other types if specified.
             * @param message history_index
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.account_history.history_index, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this history_index to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a transaction_record. */
        interface Itransaction_record {

            /** transaction_record transaction */
            transaction?: (koinos.protocol.Itransaction|null);

            /** transaction_record receipt */
            receipt?: (koinos.protocol.Itransaction_receipt|null);
        }

        /** Represents a transaction_record. */
        class transaction_record implements Itransaction_record {

            /**
             * Constructs a new transaction_record.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.account_history.Itransaction_record);

            /** transaction_record transaction. */
            public transaction?: (koinos.protocol.Itransaction|null);

            /** transaction_record receipt. */
            public receipt?: (koinos.protocol.Itransaction_receipt|null);

            /**
             * Creates a new transaction_record instance using the specified properties.
             * @param [properties] Properties to set
             * @returns transaction_record instance
             */
            public static create(properties?: koinos.account_history.Itransaction_record): koinos.account_history.transaction_record;

            /**
             * Encodes the specified transaction_record message. Does not implicitly {@link koinos.account_history.transaction_record.verify|verify} messages.
             * @param message transaction_record message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.account_history.Itransaction_record, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified transaction_record message, length delimited. Does not implicitly {@link koinos.account_history.transaction_record.verify|verify} messages.
             * @param message transaction_record message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.account_history.Itransaction_record, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a transaction_record message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns transaction_record
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.account_history.transaction_record;

            /**
             * Decodes a transaction_record message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns transaction_record
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.account_history.transaction_record;

            /**
             * Verifies a transaction_record message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a transaction_record message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns transaction_record
             */
            public static fromObject(object: { [k: string]: any }): koinos.account_history.transaction_record;

            /**
             * Creates a plain object from a transaction_record message. Also converts values to other types if specified.
             * @param message transaction_record
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.account_history.transaction_record, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this transaction_record to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a block_record. */
        interface Iblock_record {

            /** block_record header */
            header?: (koinos.protocol.Iblock_header|null);

            /** block_record receipt */
            receipt?: (koinos.protocol.Iblock_receipt|null);
        }

        /** Represents a block_record. */
        class block_record implements Iblock_record {

            /**
             * Constructs a new block_record.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.account_history.Iblock_record);

            /** block_record header. */
            public header?: (koinos.protocol.Iblock_header|null);

            /** block_record receipt. */
            public receipt?: (koinos.protocol.Iblock_receipt|null);

            /**
             * Creates a new block_record instance using the specified properties.
             * @param [properties] Properties to set
             * @returns block_record instance
             */
            public static create(properties?: koinos.account_history.Iblock_record): koinos.account_history.block_record;

            /**
             * Encodes the specified block_record message. Does not implicitly {@link koinos.account_history.block_record.verify|verify} messages.
             * @param message block_record message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.account_history.Iblock_record, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified block_record message, length delimited. Does not implicitly {@link koinos.account_history.block_record.verify|verify} messages.
             * @param message block_record message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.account_history.Iblock_record, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a block_record message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns block_record
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.account_history.block_record;

            /**
             * Decodes a block_record message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns block_record
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.account_history.block_record;

            /**
             * Verifies a block_record message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a block_record message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns block_record
             */
            public static fromObject(object: { [k: string]: any }): koinos.account_history.block_record;

            /**
             * Creates a plain object from a block_record message. Also converts values to other types if specified.
             * @param message block_record
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.account_history.block_record, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this block_record to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a history_record. */
        interface Ihistory_record {

            /** history_record trx */
            trx?: (koinos.account_history.Itransaction_record|null);

            /** history_record block */
            block?: (koinos.account_history.Iblock_record|null);
        }

        /** Represents a history_record. */
        class history_record implements Ihistory_record {

            /**
             * Constructs a new history_record.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.account_history.Ihistory_record);

            /** history_record trx. */
            public trx?: (koinos.account_history.Itransaction_record|null);

            /** history_record block. */
            public block?: (koinos.account_history.Iblock_record|null);

            /** history_record record. */
            public record?: ("trx"|"block");

            /**
             * Creates a new history_record instance using the specified properties.
             * @param [properties] Properties to set
             * @returns history_record instance
             */
            public static create(properties?: koinos.account_history.Ihistory_record): koinos.account_history.history_record;

            /**
             * Encodes the specified history_record message. Does not implicitly {@link koinos.account_history.history_record.verify|verify} messages.
             * @param message history_record message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.account_history.Ihistory_record, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified history_record message, length delimited. Does not implicitly {@link koinos.account_history.history_record.verify|verify} messages.
             * @param message history_record message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.account_history.Ihistory_record, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a history_record message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns history_record
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.account_history.history_record;

            /**
             * Decodes a history_record message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns history_record
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.account_history.history_record;

            /**
             * Verifies a history_record message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a history_record message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns history_record
             */
            public static fromObject(object: { [k: string]: any }): koinos.account_history.history_record;

            /**
             * Creates a plain object from a history_record message. Also converts values to other types if specified.
             * @param message history_record
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.account_history.history_record, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this history_record to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Namespace block_store. */
    namespace block_store {

        /** Properties of a block_item. */
        interface Iblock_item {

            /** block_item block_id */
            block_id?: (Uint8Array|null);

            /** block_item block_height */
            block_height?: (number|Long|null);

            /** block_item block */
            block?: (koinos.protocol.Iblock|null);

            /** block_item receipt */
            receipt?: (koinos.protocol.Iblock_receipt|null);
        }

        /** Represents a block_item. */
        class block_item implements Iblock_item {

            /**
             * Constructs a new block_item.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.block_store.Iblock_item);

            /** block_item block_id. */
            public block_id: Uint8Array;

            /** block_item block_height. */
            public block_height: (number|Long);

            /** block_item block. */
            public block?: (koinos.protocol.Iblock|null);

            /** block_item receipt. */
            public receipt?: (koinos.protocol.Iblock_receipt|null);

            /**
             * Creates a new block_item instance using the specified properties.
             * @param [properties] Properties to set
             * @returns block_item instance
             */
            public static create(properties?: koinos.block_store.Iblock_item): koinos.block_store.block_item;

            /**
             * Encodes the specified block_item message. Does not implicitly {@link koinos.block_store.block_item.verify|verify} messages.
             * @param message block_item message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.block_store.Iblock_item, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified block_item message, length delimited. Does not implicitly {@link koinos.block_store.block_item.verify|verify} messages.
             * @param message block_item message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.block_store.Iblock_item, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a block_item message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns block_item
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.block_store.block_item;

            /**
             * Decodes a block_item message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns block_item
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.block_store.block_item;

            /**
             * Verifies a block_item message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a block_item message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns block_item
             */
            public static fromObject(object: { [k: string]: any }): koinos.block_store.block_item;

            /**
             * Creates a plain object from a block_item message. Also converts values to other types if specified.
             * @param message block_item
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.block_store.block_item, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this block_item to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a block_record. */
        interface Iblock_record {

            /** block_record block_id */
            block_id?: (Uint8Array|null);

            /** block_record block_height */
            block_height?: (number|Long|null);

            /** block_record block */
            block?: (koinos.protocol.Iblock|null);

            /** block_record receipt */
            receipt?: (koinos.protocol.Iblock_receipt|null);

            /** block_record previous_block_ids */
            previous_block_ids?: (Uint8Array[]|null);
        }

        /** Represents a block_record. */
        class block_record implements Iblock_record {

            /**
             * Constructs a new block_record.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.block_store.Iblock_record);

            /** block_record block_id. */
            public block_id: Uint8Array;

            /** block_record block_height. */
            public block_height: (number|Long);

            /** block_record block. */
            public block?: (koinos.protocol.Iblock|null);

            /** block_record receipt. */
            public receipt?: (koinos.protocol.Iblock_receipt|null);

            /** block_record previous_block_ids. */
            public previous_block_ids: Uint8Array[];

            /**
             * Creates a new block_record instance using the specified properties.
             * @param [properties] Properties to set
             * @returns block_record instance
             */
            public static create(properties?: koinos.block_store.Iblock_record): koinos.block_store.block_record;

            /**
             * Encodes the specified block_record message. Does not implicitly {@link koinos.block_store.block_record.verify|verify} messages.
             * @param message block_record message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.block_store.Iblock_record, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified block_record message, length delimited. Does not implicitly {@link koinos.block_store.block_record.verify|verify} messages.
             * @param message block_record message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.block_store.Iblock_record, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a block_record message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns block_record
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.block_store.block_record;

            /**
             * Decodes a block_record message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns block_record
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.block_store.block_record;

            /**
             * Verifies a block_record message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a block_record message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns block_record
             */
            public static fromObject(object: { [k: string]: any }): koinos.block_store.block_record;

            /**
             * Creates a plain object from a block_record message. Also converts values to other types if specified.
             * @param message block_record
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.block_store.block_record, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this block_record to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Namespace mempool. */
    namespace mempool {

        /** Properties of a mempool_metadata. */
        interface Imempool_metadata {

            /** mempool_metadata seq_num */
            seq_num?: (number|Long|null);
        }

        /** Represents a mempool_metadata. */
        class mempool_metadata implements Imempool_metadata {

            /**
             * Constructs a new mempool_metadata.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.mempool.Imempool_metadata);

            /** mempool_metadata seq_num. */
            public seq_num: (number|Long);

            /**
             * Creates a new mempool_metadata instance using the specified properties.
             * @param [properties] Properties to set
             * @returns mempool_metadata instance
             */
            public static create(properties?: koinos.mempool.Imempool_metadata): koinos.mempool.mempool_metadata;

            /**
             * Encodes the specified mempool_metadata message. Does not implicitly {@link koinos.mempool.mempool_metadata.verify|verify} messages.
             * @param message mempool_metadata message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.mempool.Imempool_metadata, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified mempool_metadata message, length delimited. Does not implicitly {@link koinos.mempool.mempool_metadata.verify|verify} messages.
             * @param message mempool_metadata message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.mempool.Imempool_metadata, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a mempool_metadata message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns mempool_metadata
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.mempool.mempool_metadata;

            /**
             * Decodes a mempool_metadata message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns mempool_metadata
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.mempool.mempool_metadata;

            /**
             * Verifies a mempool_metadata message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a mempool_metadata message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns mempool_metadata
             */
            public static fromObject(object: { [k: string]: any }): koinos.mempool.mempool_metadata;

            /**
             * Creates a plain object from a mempool_metadata message. Also converts values to other types if specified.
             * @param message mempool_metadata
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.mempool.mempool_metadata, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this mempool_metadata to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an address_resource_record. */
        interface Iaddress_resource_record {

            /** address_resource_record max_rc */
            max_rc?: (number|Long|null);

            /** address_resource_record current_rc */
            current_rc?: (number|Long|null);
        }

        /** Represents an address_resource_record. */
        class address_resource_record implements Iaddress_resource_record {

            /**
             * Constructs a new address_resource_record.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.mempool.Iaddress_resource_record);

            /** address_resource_record max_rc. */
            public max_rc: (number|Long);

            /** address_resource_record current_rc. */
            public current_rc: (number|Long);

            /**
             * Creates a new address_resource_record instance using the specified properties.
             * @param [properties] Properties to set
             * @returns address_resource_record instance
             */
            public static create(properties?: koinos.mempool.Iaddress_resource_record): koinos.mempool.address_resource_record;

            /**
             * Encodes the specified address_resource_record message. Does not implicitly {@link koinos.mempool.address_resource_record.verify|verify} messages.
             * @param message address_resource_record message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.mempool.Iaddress_resource_record, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified address_resource_record message, length delimited. Does not implicitly {@link koinos.mempool.address_resource_record.verify|verify} messages.
             * @param message address_resource_record message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.mempool.Iaddress_resource_record, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an address_resource_record message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns address_resource_record
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.mempool.address_resource_record;

            /**
             * Decodes an address_resource_record message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns address_resource_record
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.mempool.address_resource_record;

            /**
             * Verifies an address_resource_record message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an address_resource_record message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns address_resource_record
             */
            public static fromObject(object: { [k: string]: any }): koinos.mempool.address_resource_record;

            /**
             * Creates a plain object from an address_resource_record message. Also converts values to other types if specified.
             * @param message address_resource_record
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.mempool.address_resource_record, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this address_resource_record to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a pending_transaction_record. */
        interface Ipending_transaction_record {

            /** pending_transaction_record transaction */
            transaction?: (koinos.protocol.Itransaction|null);

            /** pending_transaction_record timestamp */
            timestamp?: (number|Long|null);

            /** pending_transaction_record disk_storage_used */
            disk_storage_used?: (number|Long|null);

            /** pending_transaction_record network_bandwidth_used */
            network_bandwidth_used?: (number|Long|null);

            /** pending_transaction_record compute_bandwidth_used */
            compute_bandwidth_used?: (number|Long|null);
        }

        /** Represents a pending_transaction_record. */
        class pending_transaction_record implements Ipending_transaction_record {

            /**
             * Constructs a new pending_transaction_record.
             * @param [properties] Properties to set
             */
            constructor(properties?: koinos.mempool.Ipending_transaction_record);

            /** pending_transaction_record transaction. */
            public transaction?: (koinos.protocol.Itransaction|null);

            /** pending_transaction_record timestamp. */
            public timestamp: (number|Long);

            /** pending_transaction_record disk_storage_used. */
            public disk_storage_used: (number|Long);

            /** pending_transaction_record network_bandwidth_used. */
            public network_bandwidth_used: (number|Long);

            /** pending_transaction_record compute_bandwidth_used. */
            public compute_bandwidth_used: (number|Long);

            /**
             * Creates a new pending_transaction_record instance using the specified properties.
             * @param [properties] Properties to set
             * @returns pending_transaction_record instance
             */
            public static create(properties?: koinos.mempool.Ipending_transaction_record): koinos.mempool.pending_transaction_record;

            /**
             * Encodes the specified pending_transaction_record message. Does not implicitly {@link koinos.mempool.pending_transaction_record.verify|verify} messages.
             * @param message pending_transaction_record message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: koinos.mempool.Ipending_transaction_record, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified pending_transaction_record message, length delimited. Does not implicitly {@link koinos.mempool.pending_transaction_record.verify|verify} messages.
             * @param message pending_transaction_record message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: koinos.mempool.Ipending_transaction_record, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a pending_transaction_record message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns pending_transaction_record
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): koinos.mempool.pending_transaction_record;

            /**
             * Decodes a pending_transaction_record message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns pending_transaction_record
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): koinos.mempool.pending_transaction_record;

            /**
             * Verifies a pending_transaction_record message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a pending_transaction_record message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns pending_transaction_record
             */
            public static fromObject(object: { [k: string]: any }): koinos.mempool.pending_transaction_record;

            /**
             * Creates a plain object from a pending_transaction_record message. Also converts values to other types if specified.
             * @param message pending_transaction_record
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: koinos.mempool.pending_transaction_record, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this pending_transaction_record to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }
}

/** Namespace google. */
export namespace google {

    /** Namespace protobuf. */
    namespace protobuf {

        /** Properties of an Any. */
        interface IAny {

            /** Any type_url */
            type_url?: (string|null);

            /** Any value */
            value?: (Uint8Array|null);
        }

        /** Represents an Any. */
        class Any implements IAny {

            /**
             * Constructs a new Any.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IAny);

            /** Any type_url. */
            public type_url: string;

            /** Any value. */
            public value: Uint8Array;

            /**
             * Creates a new Any instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Any instance
             */
            public static create(properties?: google.protobuf.IAny): google.protobuf.Any;

            /**
             * Encodes the specified Any message. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
             * @param message Any message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IAny, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Any message, length delimited. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
             * @param message Any message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IAny, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Any message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Any
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.Any;

            /**
             * Decodes an Any message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Any
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.Any;

            /**
             * Verifies an Any message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Any message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Any
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.Any;

            /**
             * Creates a plain object from an Any message. Also converts values to other types if specified.
             * @param message Any
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.Any, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Any to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a FileDescriptorSet. */
        interface IFileDescriptorSet {

            /** FileDescriptorSet file */
            file?: (google.protobuf.IFileDescriptorProto[]|null);
        }

        /** Represents a FileDescriptorSet. */
        class FileDescriptorSet implements IFileDescriptorSet {

            /**
             * Constructs a new FileDescriptorSet.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IFileDescriptorSet);

            /** FileDescriptorSet file. */
            public file: google.protobuf.IFileDescriptorProto[];

            /**
             * Creates a new FileDescriptorSet instance using the specified properties.
             * @param [properties] Properties to set
             * @returns FileDescriptorSet instance
             */
            public static create(properties?: google.protobuf.IFileDescriptorSet): google.protobuf.FileDescriptorSet;

            /**
             * Encodes the specified FileDescriptorSet message. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
             * @param message FileDescriptorSet message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IFileDescriptorSet, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified FileDescriptorSet message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
             * @param message FileDescriptorSet message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IFileDescriptorSet, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a FileDescriptorSet message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FileDescriptorSet
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.FileDescriptorSet;

            /**
             * Decodes a FileDescriptorSet message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns FileDescriptorSet
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.FileDescriptorSet;

            /**
             * Verifies a FileDescriptorSet message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns FileDescriptorSet
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.FileDescriptorSet;

            /**
             * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.
             * @param message FileDescriptorSet
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.FileDescriptorSet, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this FileDescriptorSet to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a FileDescriptorProto. */
        interface IFileDescriptorProto {

            /** FileDescriptorProto name */
            name?: (string|null);

            /** FileDescriptorProto package */
            "package"?: (string|null);

            /** FileDescriptorProto dependency */
            dependency?: (string[]|null);

            /** FileDescriptorProto public_dependency */
            public_dependency?: (number[]|null);

            /** FileDescriptorProto weak_dependency */
            weak_dependency?: (number[]|null);

            /** FileDescriptorProto message_type */
            message_type?: (google.protobuf.IDescriptorProto[]|null);

            /** FileDescriptorProto enum_type */
            enum_type?: (google.protobuf.IEnumDescriptorProto[]|null);

            /** FileDescriptorProto service */
            service?: (google.protobuf.IServiceDescriptorProto[]|null);

            /** FileDescriptorProto extension */
            extension?: (google.protobuf.IFieldDescriptorProto[]|null);

            /** FileDescriptorProto options */
            options?: (google.protobuf.IFileOptions|null);

            /** FileDescriptorProto source_code_info */
            source_code_info?: (google.protobuf.ISourceCodeInfo|null);

            /** FileDescriptorProto syntax */
            syntax?: (string|null);
        }

        /** Represents a FileDescriptorProto. */
        class FileDescriptorProto implements IFileDescriptorProto {

            /**
             * Constructs a new FileDescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IFileDescriptorProto);

            /** FileDescriptorProto name. */
            public name: string;

            /** FileDescriptorProto package. */
            public package: string;

            /** FileDescriptorProto dependency. */
            public dependency: string[];

            /** FileDescriptorProto public_dependency. */
            public public_dependency: number[];

            /** FileDescriptorProto weak_dependency. */
            public weak_dependency: number[];

            /** FileDescriptorProto message_type. */
            public message_type: google.protobuf.IDescriptorProto[];

            /** FileDescriptorProto enum_type. */
            public enum_type: google.protobuf.IEnumDescriptorProto[];

            /** FileDescriptorProto service. */
            public service: google.protobuf.IServiceDescriptorProto[];

            /** FileDescriptorProto extension. */
            public extension: google.protobuf.IFieldDescriptorProto[];

            /** FileDescriptorProto options. */
            public options?: (google.protobuf.IFileOptions|null);

            /** FileDescriptorProto source_code_info. */
            public source_code_info?: (google.protobuf.ISourceCodeInfo|null);

            /** FileDescriptorProto syntax. */
            public syntax: string;

            /**
             * Creates a new FileDescriptorProto instance using the specified properties.
             * @param [properties] Properties to set
             * @returns FileDescriptorProto instance
             */
            public static create(properties?: google.protobuf.IFileDescriptorProto): google.protobuf.FileDescriptorProto;

            /**
             * Encodes the specified FileDescriptorProto message. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
             * @param message FileDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IFileDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified FileDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
             * @param message FileDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IFileDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a FileDescriptorProto message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FileDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.FileDescriptorProto;

            /**
             * Decodes a FileDescriptorProto message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns FileDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.FileDescriptorProto;

            /**
             * Verifies a FileDescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns FileDescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.FileDescriptorProto;

            /**
             * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.
             * @param message FileDescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.FileDescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this FileDescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a DescriptorProto. */
        interface IDescriptorProto {

            /** DescriptorProto name */
            name?: (string|null);

            /** DescriptorProto field */
            field?: (google.protobuf.IFieldDescriptorProto[]|null);

            /** DescriptorProto extension */
            extension?: (google.protobuf.IFieldDescriptorProto[]|null);

            /** DescriptorProto nested_type */
            nested_type?: (google.protobuf.IDescriptorProto[]|null);

            /** DescriptorProto enum_type */
            enum_type?: (google.protobuf.IEnumDescriptorProto[]|null);

            /** DescriptorProto extension_range */
            extension_range?: (google.protobuf.DescriptorProto.IExtensionRange[]|null);

            /** DescriptorProto oneof_decl */
            oneof_decl?: (google.protobuf.IOneofDescriptorProto[]|null);

            /** DescriptorProto options */
            options?: (google.protobuf.IMessageOptions|null);

            /** DescriptorProto reserved_range */
            reserved_range?: (google.protobuf.DescriptorProto.IReservedRange[]|null);

            /** DescriptorProto reserved_name */
            reserved_name?: (string[]|null);
        }

        /** Represents a DescriptorProto. */
        class DescriptorProto implements IDescriptorProto {

            /**
             * Constructs a new DescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IDescriptorProto);

            /** DescriptorProto name. */
            public name: string;

            /** DescriptorProto field. */
            public field: google.protobuf.IFieldDescriptorProto[];

            /** DescriptorProto extension. */
            public extension: google.protobuf.IFieldDescriptorProto[];

            /** DescriptorProto nested_type. */
            public nested_type: google.protobuf.IDescriptorProto[];

            /** DescriptorProto enum_type. */
            public enum_type: google.protobuf.IEnumDescriptorProto[];

            /** DescriptorProto extension_range. */
            public extension_range: google.protobuf.DescriptorProto.IExtensionRange[];

            /** DescriptorProto oneof_decl. */
            public oneof_decl: google.protobuf.IOneofDescriptorProto[];

            /** DescriptorProto options. */
            public options?: (google.protobuf.IMessageOptions|null);

            /** DescriptorProto reserved_range. */
            public reserved_range: google.protobuf.DescriptorProto.IReservedRange[];

            /** DescriptorProto reserved_name. */
            public reserved_name: string[];

            /**
             * Creates a new DescriptorProto instance using the specified properties.
             * @param [properties] Properties to set
             * @returns DescriptorProto instance
             */
            public static create(properties?: google.protobuf.IDescriptorProto): google.protobuf.DescriptorProto;

            /**
             * Encodes the specified DescriptorProto message. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
             * @param message DescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified DescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
             * @param message DescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a DescriptorProto message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.DescriptorProto;

            /**
             * Decodes a DescriptorProto message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.DescriptorProto;

            /**
             * Verifies a DescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.DescriptorProto;

            /**
             * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.
             * @param message DescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.DescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace DescriptorProto {

            /** Properties of an ExtensionRange. */
            interface IExtensionRange {

                /** ExtensionRange start */
                start?: (number|null);

                /** ExtensionRange end */
                end?: (number|null);
            }

            /** Represents an ExtensionRange. */
            class ExtensionRange implements IExtensionRange {

                /**
                 * Constructs a new ExtensionRange.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: google.protobuf.DescriptorProto.IExtensionRange);

                /** ExtensionRange start. */
                public start: number;

                /** ExtensionRange end. */
                public end: number;

                /**
                 * Creates a new ExtensionRange instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ExtensionRange instance
                 */
                public static create(properties?: google.protobuf.DescriptorProto.IExtensionRange): google.protobuf.DescriptorProto.ExtensionRange;

                /**
                 * Encodes the specified ExtensionRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                 * @param message ExtensionRange message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: google.protobuf.DescriptorProto.IExtensionRange, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ExtensionRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                 * @param message ExtensionRange message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: google.protobuf.DescriptorProto.IExtensionRange, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an ExtensionRange message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ExtensionRange
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.DescriptorProto.ExtensionRange;

                /**
                 * Decodes an ExtensionRange message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ExtensionRange
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.DescriptorProto.ExtensionRange;

                /**
                 * Verifies an ExtensionRange message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ExtensionRange
                 */
                public static fromObject(object: { [k: string]: any }): google.protobuf.DescriptorProto.ExtensionRange;

                /**
                 * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.
                 * @param message ExtensionRange
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: google.protobuf.DescriptorProto.ExtensionRange, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ExtensionRange to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }

            /** Properties of a ReservedRange. */
            interface IReservedRange {

                /** ReservedRange start */
                start?: (number|null);

                /** ReservedRange end */
                end?: (number|null);
            }

            /** Represents a ReservedRange. */
            class ReservedRange implements IReservedRange {

                /**
                 * Constructs a new ReservedRange.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: google.protobuf.DescriptorProto.IReservedRange);

                /** ReservedRange start. */
                public start: number;

                /** ReservedRange end. */
                public end: number;

                /**
                 * Creates a new ReservedRange instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns ReservedRange instance
                 */
                public static create(properties?: google.protobuf.DescriptorProto.IReservedRange): google.protobuf.DescriptorProto.ReservedRange;

                /**
                 * Encodes the specified ReservedRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                 * @param message ReservedRange message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: google.protobuf.DescriptorProto.IReservedRange, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified ReservedRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                 * @param message ReservedRange message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: google.protobuf.DescriptorProto.IReservedRange, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a ReservedRange message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns ReservedRange
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.DescriptorProto.ReservedRange;

                /**
                 * Decodes a ReservedRange message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns ReservedRange
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.DescriptorProto.ReservedRange;

                /**
                 * Verifies a ReservedRange message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a ReservedRange message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns ReservedRange
                 */
                public static fromObject(object: { [k: string]: any }): google.protobuf.DescriptorProto.ReservedRange;

                /**
                 * Creates a plain object from a ReservedRange message. Also converts values to other types if specified.
                 * @param message ReservedRange
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: google.protobuf.DescriptorProto.ReservedRange, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this ReservedRange to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a FieldDescriptorProto. */
        interface IFieldDescriptorProto {

            /** FieldDescriptorProto name */
            name?: (string|null);

            /** FieldDescriptorProto number */
            number?: (number|null);

            /** FieldDescriptorProto label */
            label?: (google.protobuf.FieldDescriptorProto.Label|null);

            /** FieldDescriptorProto type */
            type?: (google.protobuf.FieldDescriptorProto.Type|null);

            /** FieldDescriptorProto type_name */
            type_name?: (string|null);

            /** FieldDescriptorProto extendee */
            extendee?: (string|null);

            /** FieldDescriptorProto default_value */
            default_value?: (string|null);

            /** FieldDescriptorProto oneof_index */
            oneof_index?: (number|null);

            /** FieldDescriptorProto json_name */
            json_name?: (string|null);

            /** FieldDescriptorProto options */
            options?: (google.protobuf.IFieldOptions|null);
        }

        /** Represents a FieldDescriptorProto. */
        class FieldDescriptorProto implements IFieldDescriptorProto {

            /**
             * Constructs a new FieldDescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IFieldDescriptorProto);

            /** FieldDescriptorProto name. */
            public name: string;

            /** FieldDescriptorProto number. */
            public number: number;

            /** FieldDescriptorProto label. */
            public label: google.protobuf.FieldDescriptorProto.Label;

            /** FieldDescriptorProto type. */
            public type: google.protobuf.FieldDescriptorProto.Type;

            /** FieldDescriptorProto type_name. */
            public type_name: string;

            /** FieldDescriptorProto extendee. */
            public extendee: string;

            /** FieldDescriptorProto default_value. */
            public default_value: string;

            /** FieldDescriptorProto oneof_index. */
            public oneof_index: number;

            /** FieldDescriptorProto json_name. */
            public json_name: string;

            /** FieldDescriptorProto options. */
            public options?: (google.protobuf.IFieldOptions|null);

            /**
             * Creates a new FieldDescriptorProto instance using the specified properties.
             * @param [properties] Properties to set
             * @returns FieldDescriptorProto instance
             */
            public static create(properties?: google.protobuf.IFieldDescriptorProto): google.protobuf.FieldDescriptorProto;

            /**
             * Encodes the specified FieldDescriptorProto message. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
             * @param message FieldDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IFieldDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified FieldDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
             * @param message FieldDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IFieldDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a FieldDescriptorProto message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FieldDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.FieldDescriptorProto;

            /**
             * Decodes a FieldDescriptorProto message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns FieldDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.FieldDescriptorProto;

            /**
             * Verifies a FieldDescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns FieldDescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.FieldDescriptorProto;

            /**
             * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.
             * @param message FieldDescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.FieldDescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this FieldDescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace FieldDescriptorProto {

            /** Type enum. */
            enum Type {
                TYPE_DOUBLE = 1,
                TYPE_FLOAT = 2,
                TYPE_INT64 = 3,
                TYPE_UINT64 = 4,
                TYPE_INT32 = 5,
                TYPE_FIXED64 = 6,
                TYPE_FIXED32 = 7,
                TYPE_BOOL = 8,
                TYPE_STRING = 9,
                TYPE_GROUP = 10,
                TYPE_MESSAGE = 11,
                TYPE_BYTES = 12,
                TYPE_UINT32 = 13,
                TYPE_ENUM = 14,
                TYPE_SFIXED32 = 15,
                TYPE_SFIXED64 = 16,
                TYPE_SINT32 = 17,
                TYPE_SINT64 = 18
            }

            /** Label enum. */
            enum Label {
                LABEL_OPTIONAL = 1,
                LABEL_REQUIRED = 2,
                LABEL_REPEATED = 3
            }
        }

        /** Properties of an OneofDescriptorProto. */
        interface IOneofDescriptorProto {

            /** OneofDescriptorProto name */
            name?: (string|null);

            /** OneofDescriptorProto options */
            options?: (google.protobuf.IOneofOptions|null);
        }

        /** Represents an OneofDescriptorProto. */
        class OneofDescriptorProto implements IOneofDescriptorProto {

            /**
             * Constructs a new OneofDescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IOneofDescriptorProto);

            /** OneofDescriptorProto name. */
            public name: string;

            /** OneofDescriptorProto options. */
            public options?: (google.protobuf.IOneofOptions|null);

            /**
             * Creates a new OneofDescriptorProto instance using the specified properties.
             * @param [properties] Properties to set
             * @returns OneofDescriptorProto instance
             */
            public static create(properties?: google.protobuf.IOneofDescriptorProto): google.protobuf.OneofDescriptorProto;

            /**
             * Encodes the specified OneofDescriptorProto message. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
             * @param message OneofDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IOneofDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified OneofDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
             * @param message OneofDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IOneofDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an OneofDescriptorProto message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns OneofDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.OneofDescriptorProto;

            /**
             * Decodes an OneofDescriptorProto message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns OneofDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.OneofDescriptorProto;

            /**
             * Verifies an OneofDescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an OneofDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns OneofDescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.OneofDescriptorProto;

            /**
             * Creates a plain object from an OneofDescriptorProto message. Also converts values to other types if specified.
             * @param message OneofDescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.OneofDescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this OneofDescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an EnumDescriptorProto. */
        interface IEnumDescriptorProto {

            /** EnumDescriptorProto name */
            name?: (string|null);

            /** EnumDescriptorProto value */
            value?: (google.protobuf.IEnumValueDescriptorProto[]|null);

            /** EnumDescriptorProto options */
            options?: (google.protobuf.IEnumOptions|null);
        }

        /** Represents an EnumDescriptorProto. */
        class EnumDescriptorProto implements IEnumDescriptorProto {

            /**
             * Constructs a new EnumDescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IEnumDescriptorProto);

            /** EnumDescriptorProto name. */
            public name: string;

            /** EnumDescriptorProto value. */
            public value: google.protobuf.IEnumValueDescriptorProto[];

            /** EnumDescriptorProto options. */
            public options?: (google.protobuf.IEnumOptions|null);

            /**
             * Creates a new EnumDescriptorProto instance using the specified properties.
             * @param [properties] Properties to set
             * @returns EnumDescriptorProto instance
             */
            public static create(properties?: google.protobuf.IEnumDescriptorProto): google.protobuf.EnumDescriptorProto;

            /**
             * Encodes the specified EnumDescriptorProto message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
             * @param message EnumDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IEnumDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified EnumDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
             * @param message EnumDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IEnumDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EnumDescriptorProto message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EnumDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.EnumDescriptorProto;

            /**
             * Decodes an EnumDescriptorProto message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns EnumDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.EnumDescriptorProto;

            /**
             * Verifies an EnumDescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns EnumDescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.EnumDescriptorProto;

            /**
             * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.
             * @param message EnumDescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.EnumDescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this EnumDescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an EnumValueDescriptorProto. */
        interface IEnumValueDescriptorProto {

            /** EnumValueDescriptorProto name */
            name?: (string|null);

            /** EnumValueDescriptorProto number */
            number?: (number|null);

            /** EnumValueDescriptorProto options */
            options?: (google.protobuf.IEnumValueOptions|null);
        }

        /** Represents an EnumValueDescriptorProto. */
        class EnumValueDescriptorProto implements IEnumValueDescriptorProto {

            /**
             * Constructs a new EnumValueDescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IEnumValueDescriptorProto);

            /** EnumValueDescriptorProto name. */
            public name: string;

            /** EnumValueDescriptorProto number. */
            public number: number;

            /** EnumValueDescriptorProto options. */
            public options?: (google.protobuf.IEnumValueOptions|null);

            /**
             * Creates a new EnumValueDescriptorProto instance using the specified properties.
             * @param [properties] Properties to set
             * @returns EnumValueDescriptorProto instance
             */
            public static create(properties?: google.protobuf.IEnumValueDescriptorProto): google.protobuf.EnumValueDescriptorProto;

            /**
             * Encodes the specified EnumValueDescriptorProto message. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
             * @param message EnumValueDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IEnumValueDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified EnumValueDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
             * @param message EnumValueDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IEnumValueDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EnumValueDescriptorProto message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EnumValueDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.EnumValueDescriptorProto;

            /**
             * Decodes an EnumValueDescriptorProto message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns EnumValueDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.EnumValueDescriptorProto;

            /**
             * Verifies an EnumValueDescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns EnumValueDescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.EnumValueDescriptorProto;

            /**
             * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.
             * @param message EnumValueDescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.EnumValueDescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this EnumValueDescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ServiceDescriptorProto. */
        interface IServiceDescriptorProto {

            /** ServiceDescriptorProto name */
            name?: (string|null);

            /** ServiceDescriptorProto method */
            method?: (google.protobuf.IMethodDescriptorProto[]|null);

            /** ServiceDescriptorProto options */
            options?: (google.protobuf.IServiceOptions|null);
        }

        /** Represents a ServiceDescriptorProto. */
        class ServiceDescriptorProto implements IServiceDescriptorProto {

            /**
             * Constructs a new ServiceDescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IServiceDescriptorProto);

            /** ServiceDescriptorProto name. */
            public name: string;

            /** ServiceDescriptorProto method. */
            public method: google.protobuf.IMethodDescriptorProto[];

            /** ServiceDescriptorProto options. */
            public options?: (google.protobuf.IServiceOptions|null);

            /**
             * Creates a new ServiceDescriptorProto instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ServiceDescriptorProto instance
             */
            public static create(properties?: google.protobuf.IServiceDescriptorProto): google.protobuf.ServiceDescriptorProto;

            /**
             * Encodes the specified ServiceDescriptorProto message. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
             * @param message ServiceDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IServiceDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ServiceDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
             * @param message ServiceDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IServiceDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ServiceDescriptorProto message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ServiceDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.ServiceDescriptorProto;

            /**
             * Decodes a ServiceDescriptorProto message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ServiceDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.ServiceDescriptorProto;

            /**
             * Verifies a ServiceDescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ServiceDescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.ServiceDescriptorProto;

            /**
             * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.
             * @param message ServiceDescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.ServiceDescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ServiceDescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MethodDescriptorProto. */
        interface IMethodDescriptorProto {

            /** MethodDescriptorProto name */
            name?: (string|null);

            /** MethodDescriptorProto input_type */
            input_type?: (string|null);

            /** MethodDescriptorProto output_type */
            output_type?: (string|null);

            /** MethodDescriptorProto options */
            options?: (google.protobuf.IMethodOptions|null);

            /** MethodDescriptorProto client_streaming */
            client_streaming?: (boolean|null);

            /** MethodDescriptorProto server_streaming */
            server_streaming?: (boolean|null);
        }

        /** Represents a MethodDescriptorProto. */
        class MethodDescriptorProto implements IMethodDescriptorProto {

            /**
             * Constructs a new MethodDescriptorProto.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IMethodDescriptorProto);

            /** MethodDescriptorProto name. */
            public name: string;

            /** MethodDescriptorProto input_type. */
            public input_type: string;

            /** MethodDescriptorProto output_type. */
            public output_type: string;

            /** MethodDescriptorProto options. */
            public options?: (google.protobuf.IMethodOptions|null);

            /** MethodDescriptorProto client_streaming. */
            public client_streaming: boolean;

            /** MethodDescriptorProto server_streaming. */
            public server_streaming: boolean;

            /**
             * Creates a new MethodDescriptorProto instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MethodDescriptorProto instance
             */
            public static create(properties?: google.protobuf.IMethodDescriptorProto): google.protobuf.MethodDescriptorProto;

            /**
             * Encodes the specified MethodDescriptorProto message. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
             * @param message MethodDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IMethodDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MethodDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
             * @param message MethodDescriptorProto message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IMethodDescriptorProto, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MethodDescriptorProto message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MethodDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.MethodDescriptorProto;

            /**
             * Decodes a MethodDescriptorProto message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MethodDescriptorProto
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.MethodDescriptorProto;

            /**
             * Verifies a MethodDescriptorProto message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MethodDescriptorProto
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.MethodDescriptorProto;

            /**
             * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.
             * @param message MethodDescriptorProto
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.MethodDescriptorProto, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MethodDescriptorProto to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a FileOptions. */
        interface IFileOptions {

            /** FileOptions java_package */
            java_package?: (string|null);

            /** FileOptions java_outer_classname */
            java_outer_classname?: (string|null);

            /** FileOptions java_multiple_files */
            java_multiple_files?: (boolean|null);

            /** FileOptions java_generate_equals_and_hash */
            java_generate_equals_and_hash?: (boolean|null);

            /** FileOptions java_string_check_utf8 */
            java_string_check_utf8?: (boolean|null);

            /** FileOptions optimize_for */
            optimize_for?: (google.protobuf.FileOptions.OptimizeMode|null);

            /** FileOptions go_package */
            go_package?: (string|null);

            /** FileOptions cc_generic_services */
            cc_generic_services?: (boolean|null);

            /** FileOptions java_generic_services */
            java_generic_services?: (boolean|null);

            /** FileOptions py_generic_services */
            py_generic_services?: (boolean|null);

            /** FileOptions deprecated */
            deprecated?: (boolean|null);

            /** FileOptions cc_enable_arenas */
            cc_enable_arenas?: (boolean|null);

            /** FileOptions objc_class_prefix */
            objc_class_prefix?: (string|null);

            /** FileOptions csharp_namespace */
            csharp_namespace?: (string|null);

            /** FileOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);

            /** FileOptions .google.api.resource_definition */
            ".google.api.resource_definition"?: (google.api.IResourceDescriptor[]|null);
        }

        /** Represents a FileOptions. */
        class FileOptions implements IFileOptions {

            /**
             * Constructs a new FileOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IFileOptions);

            /** FileOptions java_package. */
            public java_package: string;

            /** FileOptions java_outer_classname. */
            public java_outer_classname: string;

            /** FileOptions java_multiple_files. */
            public java_multiple_files: boolean;

            /** FileOptions java_generate_equals_and_hash. */
            public java_generate_equals_and_hash: boolean;

            /** FileOptions java_string_check_utf8. */
            public java_string_check_utf8: boolean;

            /** FileOptions optimize_for. */
            public optimize_for: google.protobuf.FileOptions.OptimizeMode;

            /** FileOptions go_package. */
            public go_package: string;

            /** FileOptions cc_generic_services. */
            public cc_generic_services: boolean;

            /** FileOptions java_generic_services. */
            public java_generic_services: boolean;

            /** FileOptions py_generic_services. */
            public py_generic_services: boolean;

            /** FileOptions deprecated. */
            public deprecated: boolean;

            /** FileOptions cc_enable_arenas. */
            public cc_enable_arenas: boolean;

            /** FileOptions objc_class_prefix. */
            public objc_class_prefix: string;

            /** FileOptions csharp_namespace. */
            public csharp_namespace: string;

            /** FileOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Creates a new FileOptions instance using the specified properties.
             * @param [properties] Properties to set
             * @returns FileOptions instance
             */
            public static create(properties?: google.protobuf.IFileOptions): google.protobuf.FileOptions;

            /**
             * Encodes the specified FileOptions message. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
             * @param message FileOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IFileOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified FileOptions message, length delimited. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
             * @param message FileOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IFileOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a FileOptions message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FileOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.FileOptions;

            /**
             * Decodes a FileOptions message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns FileOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.FileOptions;

            /**
             * Verifies a FileOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns FileOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.FileOptions;

            /**
             * Creates a plain object from a FileOptions message. Also converts values to other types if specified.
             * @param message FileOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.FileOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this FileOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace FileOptions {

            /** OptimizeMode enum. */
            enum OptimizeMode {
                SPEED = 1,
                CODE_SIZE = 2,
                LITE_RUNTIME = 3
            }
        }

        /** Properties of a MessageOptions. */
        interface IMessageOptions {

            /** MessageOptions message_set_wire_format */
            message_set_wire_format?: (boolean|null);

            /** MessageOptions no_standard_descriptor_accessor */
            no_standard_descriptor_accessor?: (boolean|null);

            /** MessageOptions deprecated */
            deprecated?: (boolean|null);

            /** MessageOptions map_entry */
            map_entry?: (boolean|null);

            /** MessageOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);

            /** MessageOptions .google.api.resource */
            ".google.api.resource"?: (google.api.IResourceDescriptor|null);
        }

        /** Represents a MessageOptions. */
        class MessageOptions implements IMessageOptions {

            /**
             * Constructs a new MessageOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IMessageOptions);

            /** MessageOptions message_set_wire_format. */
            public message_set_wire_format: boolean;

            /** MessageOptions no_standard_descriptor_accessor. */
            public no_standard_descriptor_accessor: boolean;

            /** MessageOptions deprecated. */
            public deprecated: boolean;

            /** MessageOptions map_entry. */
            public map_entry: boolean;

            /** MessageOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Creates a new MessageOptions instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MessageOptions instance
             */
            public static create(properties?: google.protobuf.IMessageOptions): google.protobuf.MessageOptions;

            /**
             * Encodes the specified MessageOptions message. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
             * @param message MessageOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IMessageOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MessageOptions message, length delimited. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
             * @param message MessageOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IMessageOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MessageOptions message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MessageOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.MessageOptions;

            /**
             * Decodes a MessageOptions message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MessageOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.MessageOptions;

            /**
             * Verifies a MessageOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MessageOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.MessageOptions;

            /**
             * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.
             * @param message MessageOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.MessageOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MessageOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a FieldOptions. */
        interface IFieldOptions {

            /** FieldOptions ctype */
            ctype?: (google.protobuf.FieldOptions.CType|null);

            /** FieldOptions packed */
            packed?: (boolean|null);

            /** FieldOptions jstype */
            jstype?: (google.protobuf.FieldOptions.JSType|null);

            /** FieldOptions lazy */
            lazy?: (boolean|null);

            /** FieldOptions deprecated */
            deprecated?: (boolean|null);

            /** FieldOptions weak */
            weak?: (boolean|null);

            /** FieldOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);

            /** FieldOptions .koinos.btype */
            ".koinos.btype"?: (koinos.bytes_type|null);

            /** FieldOptions .google.api.field_behavior */
            ".google.api.field_behavior"?: (google.api.FieldBehavior[]|null);

            /** FieldOptions .google.api.resource_reference */
            ".google.api.resource_reference"?: (google.api.IResourceReference|null);
        }

        /** Represents a FieldOptions. */
        class FieldOptions implements IFieldOptions {

            /**
             * Constructs a new FieldOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IFieldOptions);

            /** FieldOptions ctype. */
            public ctype: google.protobuf.FieldOptions.CType;

            /** FieldOptions packed. */
            public packed: boolean;

            /** FieldOptions jstype. */
            public jstype: google.protobuf.FieldOptions.JSType;

            /** FieldOptions lazy. */
            public lazy: boolean;

            /** FieldOptions deprecated. */
            public deprecated: boolean;

            /** FieldOptions weak. */
            public weak: boolean;

            /** FieldOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Creates a new FieldOptions instance using the specified properties.
             * @param [properties] Properties to set
             * @returns FieldOptions instance
             */
            public static create(properties?: google.protobuf.IFieldOptions): google.protobuf.FieldOptions;

            /**
             * Encodes the specified FieldOptions message. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
             * @param message FieldOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IFieldOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified FieldOptions message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
             * @param message FieldOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IFieldOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a FieldOptions message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns FieldOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.FieldOptions;

            /**
             * Decodes a FieldOptions message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns FieldOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.FieldOptions;

            /**
             * Verifies a FieldOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns FieldOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.FieldOptions;

            /**
             * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.
             * @param message FieldOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.FieldOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this FieldOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace FieldOptions {

            /** CType enum. */
            enum CType {
                STRING = 0,
                CORD = 1,
                STRING_PIECE = 2
            }

            /** JSType enum. */
            enum JSType {
                JS_NORMAL = 0,
                JS_STRING = 1,
                JS_NUMBER = 2
            }
        }

        /** Properties of an OneofOptions. */
        interface IOneofOptions {

            /** OneofOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);
        }

        /** Represents an OneofOptions. */
        class OneofOptions implements IOneofOptions {

            /**
             * Constructs a new OneofOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IOneofOptions);

            /** OneofOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Creates a new OneofOptions instance using the specified properties.
             * @param [properties] Properties to set
             * @returns OneofOptions instance
             */
            public static create(properties?: google.protobuf.IOneofOptions): google.protobuf.OneofOptions;

            /**
             * Encodes the specified OneofOptions message. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
             * @param message OneofOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IOneofOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified OneofOptions message, length delimited. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
             * @param message OneofOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IOneofOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an OneofOptions message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns OneofOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.OneofOptions;

            /**
             * Decodes an OneofOptions message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns OneofOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.OneofOptions;

            /**
             * Verifies an OneofOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an OneofOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns OneofOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.OneofOptions;

            /**
             * Creates a plain object from an OneofOptions message. Also converts values to other types if specified.
             * @param message OneofOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.OneofOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this OneofOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an EnumOptions. */
        interface IEnumOptions {

            /** EnumOptions allow_alias */
            allow_alias?: (boolean|null);

            /** EnumOptions deprecated */
            deprecated?: (boolean|null);

            /** EnumOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);
        }

        /** Represents an EnumOptions. */
        class EnumOptions implements IEnumOptions {

            /**
             * Constructs a new EnumOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IEnumOptions);

            /** EnumOptions allow_alias. */
            public allow_alias: boolean;

            /** EnumOptions deprecated. */
            public deprecated: boolean;

            /** EnumOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Creates a new EnumOptions instance using the specified properties.
             * @param [properties] Properties to set
             * @returns EnumOptions instance
             */
            public static create(properties?: google.protobuf.IEnumOptions): google.protobuf.EnumOptions;

            /**
             * Encodes the specified EnumOptions message. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
             * @param message EnumOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IEnumOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified EnumOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
             * @param message EnumOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IEnumOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EnumOptions message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EnumOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.EnumOptions;

            /**
             * Decodes an EnumOptions message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns EnumOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.EnumOptions;

            /**
             * Verifies an EnumOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns EnumOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.EnumOptions;

            /**
             * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.
             * @param message EnumOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.EnumOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this EnumOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an EnumValueOptions. */
        interface IEnumValueOptions {

            /** EnumValueOptions deprecated */
            deprecated?: (boolean|null);

            /** EnumValueOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);
        }

        /** Represents an EnumValueOptions. */
        class EnumValueOptions implements IEnumValueOptions {

            /**
             * Constructs a new EnumValueOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IEnumValueOptions);

            /** EnumValueOptions deprecated. */
            public deprecated: boolean;

            /** EnumValueOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Creates a new EnumValueOptions instance using the specified properties.
             * @param [properties] Properties to set
             * @returns EnumValueOptions instance
             */
            public static create(properties?: google.protobuf.IEnumValueOptions): google.protobuf.EnumValueOptions;

            /**
             * Encodes the specified EnumValueOptions message. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
             * @param message EnumValueOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IEnumValueOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified EnumValueOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
             * @param message EnumValueOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IEnumValueOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an EnumValueOptions message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns EnumValueOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.EnumValueOptions;

            /**
             * Decodes an EnumValueOptions message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns EnumValueOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.EnumValueOptions;

            /**
             * Verifies an EnumValueOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns EnumValueOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.EnumValueOptions;

            /**
             * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.
             * @param message EnumValueOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.EnumValueOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this EnumValueOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a ServiceOptions. */
        interface IServiceOptions {

            /** ServiceOptions deprecated */
            deprecated?: (boolean|null);

            /** ServiceOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);

            /** ServiceOptions .google.api.default_host */
            ".google.api.default_host"?: (string|null);

            /** ServiceOptions .google.api.oauth_scopes */
            ".google.api.oauth_scopes"?: (string|null);
        }

        /** Represents a ServiceOptions. */
        class ServiceOptions implements IServiceOptions {

            /**
             * Constructs a new ServiceOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IServiceOptions);

            /** ServiceOptions deprecated. */
            public deprecated: boolean;

            /** ServiceOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Creates a new ServiceOptions instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ServiceOptions instance
             */
            public static create(properties?: google.protobuf.IServiceOptions): google.protobuf.ServiceOptions;

            /**
             * Encodes the specified ServiceOptions message. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
             * @param message ServiceOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IServiceOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ServiceOptions message, length delimited. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
             * @param message ServiceOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IServiceOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ServiceOptions message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ServiceOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.ServiceOptions;

            /**
             * Decodes a ServiceOptions message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ServiceOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.ServiceOptions;

            /**
             * Verifies a ServiceOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ServiceOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.ServiceOptions;

            /**
             * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.
             * @param message ServiceOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.ServiceOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ServiceOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a MethodOptions. */
        interface IMethodOptions {

            /** MethodOptions deprecated */
            deprecated?: (boolean|null);

            /** MethodOptions uninterpreted_option */
            uninterpreted_option?: (google.protobuf.IUninterpretedOption[]|null);

            /** MethodOptions .google.api.method_signature */
            ".google.api.method_signature"?: (string[]|null);

            /** MethodOptions .google.api.http */
            ".google.api.http"?: (google.api.IHttpRule|null);
        }

        /** Represents a MethodOptions. */
        class MethodOptions implements IMethodOptions {

            /**
             * Constructs a new MethodOptions.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IMethodOptions);

            /** MethodOptions deprecated. */
            public deprecated: boolean;

            /** MethodOptions uninterpreted_option. */
            public uninterpreted_option: google.protobuf.IUninterpretedOption[];

            /**
             * Creates a new MethodOptions instance using the specified properties.
             * @param [properties] Properties to set
             * @returns MethodOptions instance
             */
            public static create(properties?: google.protobuf.IMethodOptions): google.protobuf.MethodOptions;

            /**
             * Encodes the specified MethodOptions message. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
             * @param message MethodOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IMethodOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified MethodOptions message, length delimited. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
             * @param message MethodOptions message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IMethodOptions, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a MethodOptions message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns MethodOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.MethodOptions;

            /**
             * Decodes a MethodOptions message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns MethodOptions
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.MethodOptions;

            /**
             * Verifies a MethodOptions message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns MethodOptions
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.MethodOptions;

            /**
             * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.
             * @param message MethodOptions
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.MethodOptions, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this MethodOptions to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an UninterpretedOption. */
        interface IUninterpretedOption {

            /** UninterpretedOption name */
            name?: (google.protobuf.UninterpretedOption.INamePart[]|null);

            /** UninterpretedOption identifier_value */
            identifier_value?: (string|null);

            /** UninterpretedOption positive_int_value */
            positive_int_value?: (number|Long|null);

            /** UninterpretedOption negative_int_value */
            negative_int_value?: (number|Long|null);

            /** UninterpretedOption double_value */
            double_value?: (number|null);

            /** UninterpretedOption string_value */
            string_value?: (Uint8Array|null);

            /** UninterpretedOption aggregate_value */
            aggregate_value?: (string|null);
        }

        /** Represents an UninterpretedOption. */
        class UninterpretedOption implements IUninterpretedOption {

            /**
             * Constructs a new UninterpretedOption.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IUninterpretedOption);

            /** UninterpretedOption name. */
            public name: google.protobuf.UninterpretedOption.INamePart[];

            /** UninterpretedOption identifier_value. */
            public identifier_value: string;

            /** UninterpretedOption positive_int_value. */
            public positive_int_value: (number|Long);

            /** UninterpretedOption negative_int_value. */
            public negative_int_value: (number|Long);

            /** UninterpretedOption double_value. */
            public double_value: number;

            /** UninterpretedOption string_value. */
            public string_value: Uint8Array;

            /** UninterpretedOption aggregate_value. */
            public aggregate_value: string;

            /**
             * Creates a new UninterpretedOption instance using the specified properties.
             * @param [properties] Properties to set
             * @returns UninterpretedOption instance
             */
            public static create(properties?: google.protobuf.IUninterpretedOption): google.protobuf.UninterpretedOption;

            /**
             * Encodes the specified UninterpretedOption message. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
             * @param message UninterpretedOption message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IUninterpretedOption, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified UninterpretedOption message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
             * @param message UninterpretedOption message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IUninterpretedOption, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an UninterpretedOption message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns UninterpretedOption
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.UninterpretedOption;

            /**
             * Decodes an UninterpretedOption message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns UninterpretedOption
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.UninterpretedOption;

            /**
             * Verifies an UninterpretedOption message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns UninterpretedOption
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.UninterpretedOption;

            /**
             * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.
             * @param message UninterpretedOption
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.UninterpretedOption, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this UninterpretedOption to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace UninterpretedOption {

            /** Properties of a NamePart. */
            interface INamePart {

                /** NamePart name_part */
                name_part: string;

                /** NamePart is_extension */
                is_extension: boolean;
            }

            /** Represents a NamePart. */
            class NamePart implements INamePart {

                /**
                 * Constructs a new NamePart.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: google.protobuf.UninterpretedOption.INamePart);

                /** NamePart name_part. */
                public name_part: string;

                /** NamePart is_extension. */
                public is_extension: boolean;

                /**
                 * Creates a new NamePart instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns NamePart instance
                 */
                public static create(properties?: google.protobuf.UninterpretedOption.INamePart): google.protobuf.UninterpretedOption.NamePart;

                /**
                 * Encodes the specified NamePart message. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                 * @param message NamePart message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: google.protobuf.UninterpretedOption.INamePart, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified NamePart message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                 * @param message NamePart message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: google.protobuf.UninterpretedOption.INamePart, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a NamePart message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns NamePart
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.UninterpretedOption.NamePart;

                /**
                 * Decodes a NamePart message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns NamePart
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.UninterpretedOption.NamePart;

                /**
                 * Verifies a NamePart message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a NamePart message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns NamePart
                 */
                public static fromObject(object: { [k: string]: any }): google.protobuf.UninterpretedOption.NamePart;

                /**
                 * Creates a plain object from a NamePart message. Also converts values to other types if specified.
                 * @param message NamePart
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: google.protobuf.UninterpretedOption.NamePart, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this NamePart to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a SourceCodeInfo. */
        interface ISourceCodeInfo {

            /** SourceCodeInfo location */
            location?: (google.protobuf.SourceCodeInfo.ILocation[]|null);
        }

        /** Represents a SourceCodeInfo. */
        class SourceCodeInfo implements ISourceCodeInfo {

            /**
             * Constructs a new SourceCodeInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.ISourceCodeInfo);

            /** SourceCodeInfo location. */
            public location: google.protobuf.SourceCodeInfo.ILocation[];

            /**
             * Creates a new SourceCodeInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns SourceCodeInfo instance
             */
            public static create(properties?: google.protobuf.ISourceCodeInfo): google.protobuf.SourceCodeInfo;

            /**
             * Encodes the specified SourceCodeInfo message. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
             * @param message SourceCodeInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.ISourceCodeInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified SourceCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
             * @param message SourceCodeInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.ISourceCodeInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a SourceCodeInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns SourceCodeInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.SourceCodeInfo;

            /**
             * Decodes a SourceCodeInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns SourceCodeInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.SourceCodeInfo;

            /**
             * Verifies a SourceCodeInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns SourceCodeInfo
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.SourceCodeInfo;

            /**
             * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.
             * @param message SourceCodeInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.SourceCodeInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this SourceCodeInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace SourceCodeInfo {

            /** Properties of a Location. */
            interface ILocation {

                /** Location path */
                path?: (number[]|null);

                /** Location span */
                span?: (number[]|null);

                /** Location leading_comments */
                leading_comments?: (string|null);

                /** Location trailing_comments */
                trailing_comments?: (string|null);

                /** Location leading_detached_comments */
                leading_detached_comments?: (string[]|null);
            }

            /** Represents a Location. */
            class Location implements ILocation {

                /**
                 * Constructs a new Location.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: google.protobuf.SourceCodeInfo.ILocation);

                /** Location path. */
                public path: number[];

                /** Location span. */
                public span: number[];

                /** Location leading_comments. */
                public leading_comments: string;

                /** Location trailing_comments. */
                public trailing_comments: string;

                /** Location leading_detached_comments. */
                public leading_detached_comments: string[];

                /**
                 * Creates a new Location instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Location instance
                 */
                public static create(properties?: google.protobuf.SourceCodeInfo.ILocation): google.protobuf.SourceCodeInfo.Location;

                /**
                 * Encodes the specified Location message. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                 * @param message Location message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: google.protobuf.SourceCodeInfo.ILocation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Location message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                 * @param message Location message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: google.protobuf.SourceCodeInfo.ILocation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes a Location message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Location
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.SourceCodeInfo.Location;

                /**
                 * Decodes a Location message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Location
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.SourceCodeInfo.Location;

                /**
                 * Verifies a Location message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates a Location message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Location
                 */
                public static fromObject(object: { [k: string]: any }): google.protobuf.SourceCodeInfo.Location;

                /**
                 * Creates a plain object from a Location message. Also converts values to other types if specified.
                 * @param message Location
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: google.protobuf.SourceCodeInfo.Location, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Location to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }

        /** Properties of a GeneratedCodeInfo. */
        interface IGeneratedCodeInfo {

            /** GeneratedCodeInfo annotation */
            annotation?: (google.protobuf.GeneratedCodeInfo.IAnnotation[]|null);
        }

        /** Represents a GeneratedCodeInfo. */
        class GeneratedCodeInfo implements IGeneratedCodeInfo {

            /**
             * Constructs a new GeneratedCodeInfo.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IGeneratedCodeInfo);

            /** GeneratedCodeInfo annotation. */
            public annotation: google.protobuf.GeneratedCodeInfo.IAnnotation[];

            /**
             * Creates a new GeneratedCodeInfo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns GeneratedCodeInfo instance
             */
            public static create(properties?: google.protobuf.IGeneratedCodeInfo): google.protobuf.GeneratedCodeInfo;

            /**
             * Encodes the specified GeneratedCodeInfo message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
             * @param message GeneratedCodeInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IGeneratedCodeInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified GeneratedCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
             * @param message GeneratedCodeInfo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IGeneratedCodeInfo, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a GeneratedCodeInfo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns GeneratedCodeInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.GeneratedCodeInfo;

            /**
             * Decodes a GeneratedCodeInfo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns GeneratedCodeInfo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.GeneratedCodeInfo;

            /**
             * Verifies a GeneratedCodeInfo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a GeneratedCodeInfo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns GeneratedCodeInfo
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.GeneratedCodeInfo;

            /**
             * Creates a plain object from a GeneratedCodeInfo message. Also converts values to other types if specified.
             * @param message GeneratedCodeInfo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.GeneratedCodeInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this GeneratedCodeInfo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace GeneratedCodeInfo {

            /** Properties of an Annotation. */
            interface IAnnotation {

                /** Annotation path */
                path?: (number[]|null);

                /** Annotation source_file */
                source_file?: (string|null);

                /** Annotation begin */
                begin?: (number|null);

                /** Annotation end */
                end?: (number|null);
            }

            /** Represents an Annotation. */
            class Annotation implements IAnnotation {

                /**
                 * Constructs a new Annotation.
                 * @param [properties] Properties to set
                 */
                constructor(properties?: google.protobuf.GeneratedCodeInfo.IAnnotation);

                /** Annotation path. */
                public path: number[];

                /** Annotation source_file. */
                public source_file: string;

                /** Annotation begin. */
                public begin: number;

                /** Annotation end. */
                public end: number;

                /**
                 * Creates a new Annotation instance using the specified properties.
                 * @param [properties] Properties to set
                 * @returns Annotation instance
                 */
                public static create(properties?: google.protobuf.GeneratedCodeInfo.IAnnotation): google.protobuf.GeneratedCodeInfo.Annotation;

                /**
                 * Encodes the specified Annotation message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                 * @param message Annotation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encode(message: google.protobuf.GeneratedCodeInfo.IAnnotation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Encodes the specified Annotation message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                 * @param message Annotation message or plain object to encode
                 * @param [writer] Writer to encode to
                 * @returns Writer
                 */
                public static encodeDelimited(message: google.protobuf.GeneratedCodeInfo.IAnnotation, writer?: $protobuf.Writer): $protobuf.Writer;

                /**
                 * Decodes an Annotation message from the specified reader or buffer.
                 * @param reader Reader or buffer to decode from
                 * @param [length] Message length if known beforehand
                 * @returns Annotation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.GeneratedCodeInfo.Annotation;

                /**
                 * Decodes an Annotation message from the specified reader or buffer, length delimited.
                 * @param reader Reader or buffer to decode from
                 * @returns Annotation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.GeneratedCodeInfo.Annotation;

                /**
                 * Verifies an Annotation message.
                 * @param message Plain object to verify
                 * @returns `null` if valid, otherwise the reason why it is not
                 */
                public static verify(message: { [k: string]: any }): (string|null);

                /**
                 * Creates an Annotation message from a plain object. Also converts values to their respective internal types.
                 * @param object Plain object
                 * @returns Annotation
                 */
                public static fromObject(object: { [k: string]: any }): google.protobuf.GeneratedCodeInfo.Annotation;

                /**
                 * Creates a plain object from an Annotation message. Also converts values to other types if specified.
                 * @param message Annotation
                 * @param [options] Conversion options
                 * @returns Plain object
                 */
                public static toObject(message: google.protobuf.GeneratedCodeInfo.Annotation, options?: $protobuf.IConversionOptions): { [k: string]: any };

                /**
                 * Converts this Annotation to JSON.
                 * @returns JSON object
                 */
                public toJSON(): { [k: string]: any };
            }
        }
    }

    /** Namespace api. */
    namespace api {

        /** Properties of a HttpBody. */
        interface IHttpBody {

            /** HttpBody content_type */
            content_type?: (string|null);

            /** HttpBody data */
            data?: (Uint8Array|null);

            /** HttpBody extensions */
            extensions?: (google.protobuf.IAny[]|null);
        }

        /** Represents a HttpBody. */
        class HttpBody implements IHttpBody {

            /**
             * Constructs a new HttpBody.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.api.IHttpBody);

            /** HttpBody content_type. */
            public content_type: string;

            /** HttpBody data. */
            public data: Uint8Array;

            /** HttpBody extensions. */
            public extensions: google.protobuf.IAny[];

            /**
             * Creates a new HttpBody instance using the specified properties.
             * @param [properties] Properties to set
             * @returns HttpBody instance
             */
            public static create(properties?: google.api.IHttpBody): google.api.HttpBody;

            /**
             * Encodes the specified HttpBody message. Does not implicitly {@link google.api.HttpBody.verify|verify} messages.
             * @param message HttpBody message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.api.IHttpBody, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified HttpBody message, length delimited. Does not implicitly {@link google.api.HttpBody.verify|verify} messages.
             * @param message HttpBody message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.api.IHttpBody, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a HttpBody message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns HttpBody
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.api.HttpBody;

            /**
             * Decodes a HttpBody message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns HttpBody
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.api.HttpBody;

            /**
             * Verifies a HttpBody message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a HttpBody message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns HttpBody
             */
            public static fromObject(object: { [k: string]: any }): google.api.HttpBody;

            /**
             * Creates a plain object from a HttpBody message. Also converts values to other types if specified.
             * @param message HttpBody
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.api.HttpBody, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this HttpBody to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a Http. */
        interface IHttp {

            /** Http rules */
            rules?: (google.api.IHttpRule[]|null);

            /** Http fully_decode_reserved_expansion */
            fully_decode_reserved_expansion?: (boolean|null);
        }

        /** Represents a Http. */
        class Http implements IHttp {

            /**
             * Constructs a new Http.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.api.IHttp);

            /** Http rules. */
            public rules: google.api.IHttpRule[];

            /** Http fully_decode_reserved_expansion. */
            public fully_decode_reserved_expansion: boolean;

            /**
             * Creates a new Http instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Http instance
             */
            public static create(properties?: google.api.IHttp): google.api.Http;

            /**
             * Encodes the specified Http message. Does not implicitly {@link google.api.Http.verify|verify} messages.
             * @param message Http message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.api.IHttp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Http message, length delimited. Does not implicitly {@link google.api.Http.verify|verify} messages.
             * @param message Http message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.api.IHttp, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Http message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Http
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.api.Http;

            /**
             * Decodes a Http message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Http
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.api.Http;

            /**
             * Verifies a Http message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Http message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Http
             */
            public static fromObject(object: { [k: string]: any }): google.api.Http;

            /**
             * Creates a plain object from a Http message. Also converts values to other types if specified.
             * @param message Http
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.api.Http, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Http to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a HttpRule. */
        interface IHttpRule {

            /** HttpRule selector */
            selector?: (string|null);

            /** HttpRule get */
            get?: (string|null);

            /** HttpRule put */
            put?: (string|null);

            /** HttpRule post */
            post?: (string|null);

            /** HttpRule delete */
            "delete"?: (string|null);

            /** HttpRule patch */
            patch?: (string|null);

            /** HttpRule custom */
            custom?: (google.api.ICustomHttpPattern|null);

            /** HttpRule body */
            body?: (string|null);

            /** HttpRule response_body */
            response_body?: (string|null);

            /** HttpRule additional_bindings */
            additional_bindings?: (google.api.IHttpRule[]|null);
        }

        /** Represents a HttpRule. */
        class HttpRule implements IHttpRule {

            /**
             * Constructs a new HttpRule.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.api.IHttpRule);

            /** HttpRule selector. */
            public selector: string;

            /** HttpRule get. */
            public get?: (string|null);

            /** HttpRule put. */
            public put?: (string|null);

            /** HttpRule post. */
            public post?: (string|null);

            /** HttpRule delete. */
            public delete?: (string|null);

            /** HttpRule patch. */
            public patch?: (string|null);

            /** HttpRule custom. */
            public custom?: (google.api.ICustomHttpPattern|null);

            /** HttpRule body. */
            public body: string;

            /** HttpRule response_body. */
            public response_body: string;

            /** HttpRule additional_bindings. */
            public additional_bindings: google.api.IHttpRule[];

            /** HttpRule pattern. */
            public pattern?: ("get"|"put"|"post"|"delete"|"patch"|"custom");

            /**
             * Creates a new HttpRule instance using the specified properties.
             * @param [properties] Properties to set
             * @returns HttpRule instance
             */
            public static create(properties?: google.api.IHttpRule): google.api.HttpRule;

            /**
             * Encodes the specified HttpRule message. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
             * @param message HttpRule message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.api.IHttpRule, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified HttpRule message, length delimited. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
             * @param message HttpRule message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.api.IHttpRule, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a HttpRule message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns HttpRule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.api.HttpRule;

            /**
             * Decodes a HttpRule message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns HttpRule
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.api.HttpRule;

            /**
             * Verifies a HttpRule message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a HttpRule message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns HttpRule
             */
            public static fromObject(object: { [k: string]: any }): google.api.HttpRule;

            /**
             * Creates a plain object from a HttpRule message. Also converts values to other types if specified.
             * @param message HttpRule
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.api.HttpRule, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this HttpRule to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a CustomHttpPattern. */
        interface ICustomHttpPattern {

            /** CustomHttpPattern kind */
            kind?: (string|null);

            /** CustomHttpPattern path */
            path?: (string|null);
        }

        /** Represents a CustomHttpPattern. */
        class CustomHttpPattern implements ICustomHttpPattern {

            /**
             * Constructs a new CustomHttpPattern.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.api.ICustomHttpPattern);

            /** CustomHttpPattern kind. */
            public kind: string;

            /** CustomHttpPattern path. */
            public path: string;

            /**
             * Creates a new CustomHttpPattern instance using the specified properties.
             * @param [properties] Properties to set
             * @returns CustomHttpPattern instance
             */
            public static create(properties?: google.api.ICustomHttpPattern): google.api.CustomHttpPattern;

            /**
             * Encodes the specified CustomHttpPattern message. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
             * @param message CustomHttpPattern message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.api.ICustomHttpPattern, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified CustomHttpPattern message, length delimited. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
             * @param message CustomHttpPattern message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.api.ICustomHttpPattern, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a CustomHttpPattern message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns CustomHttpPattern
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.api.CustomHttpPattern;

            /**
             * Decodes a CustomHttpPattern message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns CustomHttpPattern
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.api.CustomHttpPattern;

            /**
             * Verifies a CustomHttpPattern message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a CustomHttpPattern message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns CustomHttpPattern
             */
            public static fromObject(object: { [k: string]: any }): google.api.CustomHttpPattern;

            /**
             * Creates a plain object from a CustomHttpPattern message. Also converts values to other types if specified.
             * @param message CustomHttpPattern
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.api.CustomHttpPattern, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this CustomHttpPattern to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** FieldBehavior enum. */
        enum FieldBehavior {
            FIELD_BEHAVIOR_UNSPECIFIED = 0,
            OPTIONAL = 1,
            REQUIRED = 2,
            OUTPUT_ONLY = 3,
            INPUT_ONLY = 4,
            IMMUTABLE = 5
        }

        /** Properties of a ResourceDescriptor. */
        interface IResourceDescriptor {

            /** ResourceDescriptor type */
            type?: (string|null);

            /** ResourceDescriptor pattern */
            pattern?: (string[]|null);

            /** ResourceDescriptor name_field */
            name_field?: (string|null);

            /** ResourceDescriptor history */
            history?: (google.api.ResourceDescriptor.History|null);

            /** ResourceDescriptor plural */
            plural?: (string|null);

            /** ResourceDescriptor singular */
            singular?: (string|null);

            /** ResourceDescriptor style */
            style?: (google.api.ResourceDescriptor.Style[]|null);
        }

        /** Represents a ResourceDescriptor. */
        class ResourceDescriptor implements IResourceDescriptor {

            /**
             * Constructs a new ResourceDescriptor.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.api.IResourceDescriptor);

            /** ResourceDescriptor type. */
            public type: string;

            /** ResourceDescriptor pattern. */
            public pattern: string[];

            /** ResourceDescriptor name_field. */
            public name_field: string;

            /** ResourceDescriptor history. */
            public history: google.api.ResourceDescriptor.History;

            /** ResourceDescriptor plural. */
            public plural: string;

            /** ResourceDescriptor singular. */
            public singular: string;

            /** ResourceDescriptor style. */
            public style: google.api.ResourceDescriptor.Style[];

            /**
             * Creates a new ResourceDescriptor instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ResourceDescriptor instance
             */
            public static create(properties?: google.api.IResourceDescriptor): google.api.ResourceDescriptor;

            /**
             * Encodes the specified ResourceDescriptor message. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
             * @param message ResourceDescriptor message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.api.IResourceDescriptor, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ResourceDescriptor message, length delimited. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
             * @param message ResourceDescriptor message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.api.IResourceDescriptor, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResourceDescriptor message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ResourceDescriptor
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.api.ResourceDescriptor;

            /**
             * Decodes a ResourceDescriptor message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ResourceDescriptor
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.api.ResourceDescriptor;

            /**
             * Verifies a ResourceDescriptor message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ResourceDescriptor message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ResourceDescriptor
             */
            public static fromObject(object: { [k: string]: any }): google.api.ResourceDescriptor;

            /**
             * Creates a plain object from a ResourceDescriptor message. Also converts values to other types if specified.
             * @param message ResourceDescriptor
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.api.ResourceDescriptor, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ResourceDescriptor to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        namespace ResourceDescriptor {

            /** History enum. */
            enum History {
                HISTORY_UNSPECIFIED = 0,
                ORIGINALLY_SINGLE_PATTERN = 1,
                FUTURE_MULTI_PATTERN = 2
            }

            /** Style enum. */
            enum Style {
                STYLE_UNSPECIFIED = 0,
                DECLARATIVE_FRIENDLY = 1
            }
        }

        /** Properties of a ResourceReference. */
        interface IResourceReference {

            /** ResourceReference type */
            type?: (string|null);

            /** ResourceReference child_type */
            child_type?: (string|null);
        }

        /** Represents a ResourceReference. */
        class ResourceReference implements IResourceReference {

            /**
             * Constructs a new ResourceReference.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.api.IResourceReference);

            /** ResourceReference type. */
            public type: string;

            /** ResourceReference child_type. */
            public child_type: string;

            /**
             * Creates a new ResourceReference instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ResourceReference instance
             */
            public static create(properties?: google.api.IResourceReference): google.api.ResourceReference;

            /**
             * Encodes the specified ResourceReference message. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
             * @param message ResourceReference message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.api.IResourceReference, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified ResourceReference message, length delimited. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
             * @param message ResourceReference message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.api.IResourceReference, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a ResourceReference message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ResourceReference
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.api.ResourceReference;

            /**
             * Decodes a ResourceReference message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ResourceReference
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.api.ResourceReference;

            /**
             * Verifies a ResourceReference message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a ResourceReference message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ResourceReference
             */
            public static fromObject(object: { [k: string]: any }): google.api.ResourceReference;

            /**
             * Creates a plain object from a ResourceReference message. Also converts values to other types if specified.
             * @param message ResourceReference
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.api.ResourceReference, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ResourceReference to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }
}
