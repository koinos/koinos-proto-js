// source: koinos/chain/value.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.koinos.chain.enum_type');
goog.provide('proto.koinos.chain.list_type');
goog.provide('proto.koinos.chain.value_type');
goog.provide('proto.koinos.chain.value_type.KindCase');
goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.google.protobuf.Any');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.koinos.chain.value_type = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.koinos.chain.value_type.oneofGroups_);
};
goog.inherits(proto.koinos.chain.value_type, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.koinos.chain.value_type.displayName = 'proto.koinos.chain.value_type';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.koinos.chain.enum_type = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.koinos.chain.enum_type, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.koinos.chain.enum_type.displayName = 'proto.koinos.chain.enum_type';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.koinos.chain.list_type = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.koinos.chain.list_type.repeatedFields_, null);
};
goog.inherits(proto.koinos.chain.list_type, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.koinos.chain.list_type.displayName = 'proto.koinos.chain.list_type';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.koinos.chain.value_type.oneofGroups_ = [[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]];

/**
 * @enum {number}
 */
proto.koinos.chain.value_type.KindCase = {
  KIND_NOT_SET: 0,
  MESSAGE_VALUE: 1,
  DOUBLE_VALUE: 2,
  FLOAT_VALUE: 3,
  INT32_VALUE: 4,
  INT64_VALUE: 5,
  UINT32_VALUE: 6,
  UINT64_VALUE: 7,
  SINT32_VALUE: 8,
  SINT64_VALUE: 9,
  FIXED32_VALUE: 10,
  FIXED64_VALUE: 11,
  SFIXED32_VALUE: 12,
  SFIXED64_VALUE: 13,
  BOOL_VALUE: 14,
  STRING_VALUE: 15,
  BYTES_VALUE: 16
};

/**
 * @return {proto.koinos.chain.value_type.KindCase}
 */
proto.koinos.chain.value_type.prototype.getKindCase = function() {
  return /** @type {proto.koinos.chain.value_type.KindCase} */(jspb.Message.computeOneofCase(this, proto.koinos.chain.value_type.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.koinos.chain.value_type.prototype.toObject = function(opt_includeInstance) {
  return proto.koinos.chain.value_type.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.koinos.chain.value_type} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.koinos.chain.value_type.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageValue: (f = msg.getMessageValue()) && proto.google.protobuf.Any.toObject(includeInstance, f),
    doubleValue: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    floatValue: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    int32Value: jspb.Message.getFieldWithDefault(msg, 4, 0),
    int64Value: jspb.Message.getFieldWithDefault(msg, 5, 0),
    uint32Value: jspb.Message.getFieldWithDefault(msg, 6, 0),
    uint64Value: jspb.Message.getFieldWithDefault(msg, 7, 0),
    sint32Value: jspb.Message.getFieldWithDefault(msg, 8, 0),
    sint64Value: jspb.Message.getFieldWithDefault(msg, 9, 0),
    fixed32Value: jspb.Message.getFieldWithDefault(msg, 10, 0),
    fixed64Value: jspb.Message.getFieldWithDefault(msg, 11, 0),
    sfixed32Value: jspb.Message.getFieldWithDefault(msg, 12, 0),
    sfixed64Value: jspb.Message.getFieldWithDefault(msg, 13, 0),
    boolValue: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    stringValue: jspb.Message.getFieldWithDefault(msg, 15, ""),
    bytesValue: msg.getBytesValue_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.koinos.chain.value_type}
 */
proto.koinos.chain.value_type.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.koinos.chain.value_type;
  return proto.koinos.chain.value_type.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.koinos.chain.value_type} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.koinos.chain.value_type}
 */
proto.koinos.chain.value_type.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.protobuf.Any;
      reader.readMessage(value,proto.google.protobuf.Any.deserializeBinaryFromReader);
      msg.setMessageValue(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDoubleValue(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFloatValue(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setInt32Value(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInt64Value(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setUint32Value(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUint64Value(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setSint32Value(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setSint64Value(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readFixed32());
      msg.setFixed32Value(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readFixed64());
      msg.setFixed64Value(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readSfixed32());
      msg.setSfixed32Value(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readSfixed64());
      msg.setSfixed64Value(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBoolValue(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setStringValue(value);
      break;
    case 16:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBytesValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.koinos.chain.value_type.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.koinos.chain.value_type.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.koinos.chain.value_type} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.koinos.chain.value_type.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageValue();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.protobuf.Any.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeSint32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeSint64(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeFixed32(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeFixed64(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeSfixed32(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeSfixed64(
      13,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeBool(
      14,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeString(
      15,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeBytes(
      16,
      f
    );
  }
};


/**
 * optional google.protobuf.Any message_value = 1;
 * @return {?proto.google.protobuf.Any}
 */
proto.koinos.chain.value_type.prototype.getMessageValue = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, proto.google.protobuf.Any, 1));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.koinos.chain.value_type} returns this
*/
proto.koinos.chain.value_type.prototype.setMessageValue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.koinos.chain.value_type.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.koinos.chain.value_type} returns this
 */
proto.koinos.chain.value_type.prototype.clearMessageValue = function() {
  return this.setMessageValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.koinos.chain.value_type.prototype.hasMessageValue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double double_value = 2;
 * @return {number}
 */
proto.koinos.chain.value_type.prototype.getDoubleValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.koinos.chain.value_type} returns this
 */
proto.koinos.chain.value_type.prototype.setDoubleValue = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.koinos.chain.value_type.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.koinos.chain.value_type} returns this
 */
proto.koinos.chain.value_type.prototype.clearDoubleValue = function() {
  return jspb.Message.setOneofField(this, 2, proto.koinos.chain.value_type.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.koinos.chain.value_type.prototype.hasDoubleValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional float float_value = 3;
 * @return {number}
 */
proto.koinos.chain.value_type.prototype.getFloatValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.koinos.chain.value_type} returns this
 */
proto.koinos.chain.value_type.prototype.setFloatValue = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.koinos.chain.value_type.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.koinos.chain.value_type} returns this
 */
proto.koinos.chain.value_type.prototype.clearFloatValue = function() {
  return jspb.Message.setOneofField(this, 3, proto.koinos.chain.value_type.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.koinos.chain.value_type.prototype.hasFloatValue = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 int32_value = 4;
 * @return {number}
 */
proto.koinos.chain.value_type.prototype.getInt32Value = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.koinos.chain.value_type} returns this
 */
proto.koinos.chain.value_type.prototype.setInt32Value = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.koinos.chain.value_type.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.koinos.chain.value_type} returns this
 */
proto.koinos.chain.value_type.prototype.clearInt32Value = function() {
  return jspb.Message.setOneofField(this, 4, proto.koinos.chain.value_type.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.koinos.chain.value_type.prototype.hasInt32Value = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int64 int64_value = 5;
 * @return {number}
 */
proto.koinos.chain.value_type.prototype.getInt64Value = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.koinos.chain.value_type} returns this
 */
proto.koinos.chain.value_type.prototype.setInt64Value = function(value) {
  return jspb.Message.setOneofField(this, 5, proto.koinos.chain.value_type.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.koinos.chain.value_type} returns this
 */
proto.koinos.chain.value_type.prototype.clearInt64Value = function() {
  return jspb.Message.setOneofField(this, 5, proto.koinos.chain.value_type.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.koinos.chain.value_type.prototype.hasInt64Value = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 uint32_value = 6;
 * @return {number}
 */
proto.koinos.chain.value_type.prototype.getUint32Value = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.koinos.chain.value_type} returns this
 */
proto.koinos.chain.value_type.prototype.setUint32Value = function(value) {
  return jspb.Message.setOneofField(this, 6, proto.koinos.chain.value_type.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.koinos.chain.value_type} returns this
 */
proto.koinos.chain.value_type.prototype.clearUint32Value = function() {
  return jspb.Message.setOneofField(this, 6, proto.koinos.chain.value_type.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.koinos.chain.value_type.prototype.hasUint32Value = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint64 uint64_value = 7;
 * @return {number}
 */
proto.koinos.chain.value_type.prototype.getUint64Value = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.koinos.chain.value_type} returns this
 */
proto.koinos.chain.value_type.prototype.setUint64Value = function(value) {
  return jspb.Message.setOneofField(this, 7, proto.koinos.chain.value_type.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.koinos.chain.value_type} returns this
 */
proto.koinos.chain.value_type.prototype.clearUint64Value = function() {
  return jspb.Message.setOneofField(this, 7, proto.koinos.chain.value_type.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.koinos.chain.value_type.prototype.hasUint64Value = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional sint32 sint32_value = 8;
 * @return {number}
 */
proto.koinos.chain.value_type.prototype.getSint32Value = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.koinos.chain.value_type} returns this
 */
proto.koinos.chain.value_type.prototype.setSint32Value = function(value) {
  return jspb.Message.setOneofField(this, 8, proto.koinos.chain.value_type.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.koinos.chain.value_type} returns this
 */
proto.koinos.chain.value_type.prototype.clearSint32Value = function() {
  return jspb.Message.setOneofField(this, 8, proto.koinos.chain.value_type.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.koinos.chain.value_type.prototype.hasSint32Value = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional sint64 sint64_value = 9;
 * @return {number}
 */
proto.koinos.chain.value_type.prototype.getSint64Value = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.koinos.chain.value_type} returns this
 */
proto.koinos.chain.value_type.prototype.setSint64Value = function(value) {
  return jspb.Message.setOneofField(this, 9, proto.koinos.chain.value_type.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.koinos.chain.value_type} returns this
 */
proto.koinos.chain.value_type.prototype.clearSint64Value = function() {
  return jspb.Message.setOneofField(this, 9, proto.koinos.chain.value_type.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.koinos.chain.value_type.prototype.hasSint64Value = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional fixed32 fixed32_value = 10;
 * @return {number}
 */
proto.koinos.chain.value_type.prototype.getFixed32Value = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.koinos.chain.value_type} returns this
 */
proto.koinos.chain.value_type.prototype.setFixed32Value = function(value) {
  return jspb.Message.setOneofField(this, 10, proto.koinos.chain.value_type.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.koinos.chain.value_type} returns this
 */
proto.koinos.chain.value_type.prototype.clearFixed32Value = function() {
  return jspb.Message.setOneofField(this, 10, proto.koinos.chain.value_type.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.koinos.chain.value_type.prototype.hasFixed32Value = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional fixed64 fixed64_value = 11;
 * @return {number}
 */
proto.koinos.chain.value_type.prototype.getFixed64Value = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.koinos.chain.value_type} returns this
 */
proto.koinos.chain.value_type.prototype.setFixed64Value = function(value) {
  return jspb.Message.setOneofField(this, 11, proto.koinos.chain.value_type.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.koinos.chain.value_type} returns this
 */
proto.koinos.chain.value_type.prototype.clearFixed64Value = function() {
  return jspb.Message.setOneofField(this, 11, proto.koinos.chain.value_type.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.koinos.chain.value_type.prototype.hasFixed64Value = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional sfixed32 sfixed32_value = 12;
 * @return {number}
 */
proto.koinos.chain.value_type.prototype.getSfixed32Value = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.koinos.chain.value_type} returns this
 */
proto.koinos.chain.value_type.prototype.setSfixed32Value = function(value) {
  return jspb.Message.setOneofField(this, 12, proto.koinos.chain.value_type.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.koinos.chain.value_type} returns this
 */
proto.koinos.chain.value_type.prototype.clearSfixed32Value = function() {
  return jspb.Message.setOneofField(this, 12, proto.koinos.chain.value_type.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.koinos.chain.value_type.prototype.hasSfixed32Value = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional sfixed64 sfixed64_value = 13;
 * @return {number}
 */
proto.koinos.chain.value_type.prototype.getSfixed64Value = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.koinos.chain.value_type} returns this
 */
proto.koinos.chain.value_type.prototype.setSfixed64Value = function(value) {
  return jspb.Message.setOneofField(this, 13, proto.koinos.chain.value_type.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.koinos.chain.value_type} returns this
 */
proto.koinos.chain.value_type.prototype.clearSfixed64Value = function() {
  return jspb.Message.setOneofField(this, 13, proto.koinos.chain.value_type.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.koinos.chain.value_type.prototype.hasSfixed64Value = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional bool bool_value = 14;
 * @return {boolean}
 */
proto.koinos.chain.value_type.prototype.getBoolValue = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.koinos.chain.value_type} returns this
 */
proto.koinos.chain.value_type.prototype.setBoolValue = function(value) {
  return jspb.Message.setOneofField(this, 14, proto.koinos.chain.value_type.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.koinos.chain.value_type} returns this
 */
proto.koinos.chain.value_type.prototype.clearBoolValue = function() {
  return jspb.Message.setOneofField(this, 14, proto.koinos.chain.value_type.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.koinos.chain.value_type.prototype.hasBoolValue = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional string string_value = 15;
 * @return {string}
 */
proto.koinos.chain.value_type.prototype.getStringValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.koinos.chain.value_type} returns this
 */
proto.koinos.chain.value_type.prototype.setStringValue = function(value) {
  return jspb.Message.setOneofField(this, 15, proto.koinos.chain.value_type.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.koinos.chain.value_type} returns this
 */
proto.koinos.chain.value_type.prototype.clearStringValue = function() {
  return jspb.Message.setOneofField(this, 15, proto.koinos.chain.value_type.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.koinos.chain.value_type.prototype.hasStringValue = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional bytes bytes_value = 16;
 * @return {!(string|Uint8Array)}
 */
proto.koinos.chain.value_type.prototype.getBytesValue = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * optional bytes bytes_value = 16;
 * This is a type-conversion wrapper around `getBytesValue()`
 * @return {string}
 */
proto.koinos.chain.value_type.prototype.getBytesValue_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBytesValue()));
};


/**
 * optional bytes bytes_value = 16;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBytesValue()`
 * @return {!Uint8Array}
 */
proto.koinos.chain.value_type.prototype.getBytesValue_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBytesValue()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.koinos.chain.value_type} returns this
 */
proto.koinos.chain.value_type.prototype.setBytesValue = function(value) {
  return jspb.Message.setOneofField(this, 16, proto.koinos.chain.value_type.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.koinos.chain.value_type} returns this
 */
proto.koinos.chain.value_type.prototype.clearBytesValue = function() {
  return jspb.Message.setOneofField(this, 16, proto.koinos.chain.value_type.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.koinos.chain.value_type.prototype.hasBytesValue = function() {
  return jspb.Message.getField(this, 16) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.koinos.chain.enum_type.prototype.toObject = function(opt_includeInstance) {
  return proto.koinos.chain.enum_type.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.koinos.chain.enum_type} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.koinos.chain.enum_type.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    number: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.koinos.chain.enum_type}
 */
proto.koinos.chain.enum_type.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.koinos.chain.enum_type;
  return proto.koinos.chain.enum_type.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.koinos.chain.enum_type} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.koinos.chain.enum_type}
 */
proto.koinos.chain.enum_type.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.koinos.chain.enum_type.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.koinos.chain.enum_type.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.koinos.chain.enum_type} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.koinos.chain.enum_type.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNumber();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.koinos.chain.enum_type.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.koinos.chain.enum_type} returns this
 */
proto.koinos.chain.enum_type.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 number = 2;
 * @return {number}
 */
proto.koinos.chain.enum_type.prototype.getNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.koinos.chain.enum_type} returns this
 */
proto.koinos.chain.enum_type.prototype.setNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.koinos.chain.list_type.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.koinos.chain.list_type.prototype.toObject = function(opt_includeInstance) {
  return proto.koinos.chain.list_type.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.koinos.chain.list_type} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.koinos.chain.list_type.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesList: jspb.Message.toObjectList(msg.getValuesList(),
    proto.koinos.chain.value_type.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.koinos.chain.list_type}
 */
proto.koinos.chain.list_type.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.koinos.chain.list_type;
  return proto.koinos.chain.list_type.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.koinos.chain.list_type} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.koinos.chain.list_type}
 */
proto.koinos.chain.list_type.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.koinos.chain.value_type;
      reader.readMessage(value,proto.koinos.chain.value_type.deserializeBinaryFromReader);
      msg.addValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.koinos.chain.list_type.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.koinos.chain.list_type.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.koinos.chain.list_type} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.koinos.chain.list_type.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.koinos.chain.value_type.serializeBinaryToWriter
    );
  }
};


/**
 * repeated value_type values = 1;
 * @return {!Array<!proto.koinos.chain.value_type>}
 */
proto.koinos.chain.list_type.prototype.getValuesList = function() {
  return /** @type{!Array<!proto.koinos.chain.value_type>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.koinos.chain.value_type, 1));
};


/**
 * @param {!Array<!proto.koinos.chain.value_type>} value
 * @return {!proto.koinos.chain.list_type} returns this
*/
proto.koinos.chain.list_type.prototype.setValuesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.koinos.chain.value_type=} opt_value
 * @param {number=} opt_index
 * @return {!proto.koinos.chain.value_type}
 */
proto.koinos.chain.list_type.prototype.addValues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.koinos.chain.value_type, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.koinos.chain.list_type} returns this
 */
proto.koinos.chain.list_type.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};


